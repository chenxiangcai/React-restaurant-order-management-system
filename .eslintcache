[{"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\index.tsx":"1","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\App.tsx":"2","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\routes\\index.ts":"3","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\index.tsx":"4","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\reducers.ts":"5","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\sagas.ts":"6","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\index.ts":"7","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\reducers.ts":"8","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\sagas.ts":"9","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\Login.tsx":"10","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\actions.ts":"11","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\login-style.js":"12","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\utils\\http.ts":"13","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\utils\\storage.ts":"14","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\common\\api\\index.ts":"15","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\components\\Layout\\index.tsx":"16","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\dashboard\\index.tsx":"17","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\Staff.tsx":"18","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\index.ts":"19","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\reducers.ts":"20","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\sagas.ts":"21","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\actions.ts":"22"},{"size":1085,"mtime":1609085043478,"results":"23","hashOfConfig":"24"},{"size":1247,"mtime":1608264725781,"results":"25","hashOfConfig":"24"},{"size":539,"mtime":1608883984233,"results":"26","hashOfConfig":"24"},{"size":448,"mtime":1609084875394,"results":"27","hashOfConfig":"24"},{"size":260,"mtime":1609042696758,"results":"28","hashOfConfig":"24"},{"size":778,"mtime":1609289969068,"results":"29","hashOfConfig":"24"},{"size":133,"mtime":1608124844178,"results":"30","hashOfConfig":"24"},{"size":926,"mtime":1608268075492,"results":"31","hashOfConfig":"24"},{"size":888,"mtime":1608466094932,"results":"32","hashOfConfig":"24"},{"size":4067,"mtime":1608989139009,"results":"33","hashOfConfig":"24"},{"size":473,"mtime":1608124844177,"results":"34","hashOfConfig":"24"},{"size":1443,"mtime":1608264725812,"results":"35","hashOfConfig":"24"},{"size":1914,"mtime":1609246971288,"results":"36","hashOfConfig":"24"},{"size":509,"mtime":1608124844236,"results":"37","hashOfConfig":"24"},{"size":321,"mtime":1609245818324,"results":"38","hashOfConfig":"24"},{"size":3466,"mtime":1608434066209,"results":"39","hashOfConfig":"24"},{"size":273,"mtime":1608264725796,"results":"40","hashOfConfig":"24"},{"size":12742,"mtime":1609333488786,"results":"41","hashOfConfig":"24"},{"size":131,"mtime":1608455717352,"results":"42","hashOfConfig":"24"},{"size":1727,"mtime":1609289358992,"results":"43","hashOfConfig":"24"},{"size":2031,"mtime":1609289780376,"results":"44","hashOfConfig":"24"},{"size":884,"mtime":1609289969084,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"17trjw0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\index.tsx",[],["97","98"],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\App.tsx",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\routes\\index.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\index.tsx",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\reducers.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\store\\sagas.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\index.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\reducers.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\sagas.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\Login.tsx",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\actions.ts",["99","100","101","102"],"/*\r\n* @name: Login页面动作声明\r\n* @description: 声明action触发类型\r\n* @author: 陈相材\r\n* @time: 2020-12-15 20:01:24\r\n*/\r\n\r\nexport const TOLOGIN = 'TOLOGIN';\r\nexport type TOLOGIN = typeof TOLOGIN\r\n\r\nexport const SUCCESSLOGIN = 'SUCCESSLOGIN';\r\nexport type SUCCESSLOGIN = typeof SUCCESSLOGIN\r\n\r\nexport const ERRORLOGIN = 'ERRORLOGIN';\r\nexport type ERRORLOGIN = typeof ERRORLOGIN\r\n\r\nexport const NETERROR = 'NETERROR'\r\nexport type NETERROR = typeof NETERROR\r\n\r\n","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\login\\login-style.js",[],["103","104"],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\utils\\http.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\utils\\storage.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\common\\api\\index.ts",["105","106","107","108"],"export const LoginApi = '/login'\r\nexport type LoginApi = typeof LoginApi\r\n\r\nexport const STAFFLIST = '/staff'\r\nexport type STAFFLIST = typeof STAFFLIST\r\n\r\nexport const STAFFADD = '/staff/add'\r\nexport type STAFFADD = typeof STAFFADD\r\n\r\nexport const DELSTAFF_URL = '/staff'\r\nexport type DELSTAFF_URL = typeof DELSTAFF_URL\r\n",["109","110"],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\components\\Layout\\index.tsx",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\dashboard\\index.tsx",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\Staff.tsx",["111","112","113","114"],"import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    ConfigProvider,\r\n    Form,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Pagination,\r\n    Popconfirm,\r\n    Radio,\r\n    Space,\r\n    Table,\r\n    Tag\r\n} from 'antd';\r\nimport {ColumnsType} from 'antd/es/table';\r\nimport {Dispatch} from \"redux\";\r\nimport {ADDSTAFF, DELSTAFF, TOGGLEPAGE} from \"./actions\";\r\nimport {DELSTAFF_URL, STAFFADD, STAFFLIST} from \"../../../common/api\";\r\nimport DocumentTitle from \"react-document-title\";\r\nimport moment from 'moment';\r\nimport {FieldNumberOutlined, LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStore, setStore} from \"../../../utils/storage\";\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\n\r\ninterface OwnProps {\r\n    [prop: string]: any\r\n\r\n    togglePage(value?: object): void\r\n\r\n    delStaff(value: string): void,\r\n\r\n    addStaff(value: object): void,\r\n\r\n}\r\n\r\ninterface User {\r\n    _id: string,\r\n    name: number | string,\r\n    role: string,\r\n    title: string,\r\n    status: number,\r\n    account: number,\r\n    joinTime: string\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    list: state.staff.list,\r\n    addStatus: state.staff.addStatus,\r\n    delStatus: state.staff.delStatus,\r\n    errorMsg: state.staff.errorMsg\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    delStaff(value: string) {\r\n        dispatch({\r\n            type: DELSTAFF,\r\n            url: DELSTAFF_URL,\r\n            data: value\r\n        })\r\n    },\r\n    addStaff(value: object) {\r\n        dispatch({\r\n            type: ADDSTAFF,\r\n            url: STAFFADD,\r\n            data: value\r\n        })\r\n    },\r\n    togglePage(value: object) {\r\n        dispatch({\r\n            type: TOGGLEPAGE,\r\n            url: STAFFLIST,\r\n            data: value\r\n        })\r\n    }\r\n})\r\n\r\n\r\n// todo 路由拦截\r\nconst Staff: FunctionComponent<Props> = (props) => {\r\n\r\n    // 表格列\r\n    const columns: ColumnsType<User> = [\r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '角色',\r\n            key: 'role',\r\n            dataIndex: 'role',\r\n            render: (role: any) => (\r\n                <>\r\n                    {\r\n                        role === 'admin' &&\r\n                        <Tag color={'#0083B0'} key={role}>\r\n                            {\r\n                                role === 'admin' ? '管理员' : '员工'\r\n                            }\r\n                        </Tag>\r\n                    }\r\n                    {\r\n                        role === 'waiter' &&\r\n                        <Tag color={'#2ed573'} key={role}>\r\n                            {\r\n                                role = '服务员'\r\n                            }\r\n                        </Tag>\r\n                    }\r\n                    {\r\n                        role === 'chef' &&\r\n                        <Tag color={'#a17fe0'} key={role}>\r\n                            {\r\n                                role = '厨师'\r\n                            }\r\n                        </Tag>\r\n                    }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: '入职时间',\r\n            key: 'joinTime',\r\n            dataIndex: 'joinTime',\r\n            render: (time: any) => (\r\n                <>\r\n                    {\r\n                        moment(time).format('YYYY-MM-DD')\r\n                    }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: '在职状态',\r\n            key: 'status',\r\n            dataIndex: 'status',\r\n            render: (status: any) => (\r\n                <>\r\n                    {\r\n                        status === 1 ? '在职' : '请假'\r\n                    }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: '_id',\r\n            width: 300,\r\n            render: (text, records) => (\r\n                <Space>\r\n                    <Button type='primary' size={\"small\"} onClick={() => {\r\n                        edit_staff(records)\r\n                    }}>修改</Button>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"确定要删除此用户吗？\"\r\n                            placement=\"top\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={() => {\r\n                                del_staff(records)\r\n                            }}\r\n                        >\r\n                            <Button type='primary' danger size={\"small\"}>删除</Button>\r\n                        </Popconfirm>\r\n                    }\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //选择框(身份信息)\r\n    const positionOptions = [\r\n        {label: '服务员', value: 'waiter', style: {marginRight: 10}},\r\n        {label: '厨师', value: 'chef', style: {marginRight: 10}},\r\n        {label: '管理员', value: 'admin'},\r\n    ];\r\n\r\n    //列表显示\r\n    const [pageMsg, setPageMsg] = useState({\r\n        query: '',\r\n        page: 1,\r\n        pagesize: 10\r\n    })\r\n    const [userList, setUserList] = useState([])\r\n\r\n\r\n    /**\r\n     * 新增弹出框\r\n     * visible: 弹框可见性\r\n     * selected:选中项\r\n     */\r\n    const [visible, setVisible] = useState(false);\r\n    const [selected, setSelected] = useState(['waiter'])\r\n\r\n    // 表单提交函数\r\n    const handleOk = (value: any) => {\r\n        value.account = props.list.total + 1\r\n        value.joinTime = new Date().getTime()\r\n        props.addStaff(value)\r\n        setVisible(false);\r\n    };\r\n\r\n    // 取消弹出框\r\n    const handleCancel = () => {\r\n        // todo 取消弹出框确认\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    // 新增用户身份选择项\r\n    const onChange1 = (e: any) => {\r\n        const selectedValue = e.target.value\r\n        setSelected(selectedValue)\r\n    }\r\n\r\n    // 删除员工触发\r\n    const del_staff = (value: User) => {\r\n        const {_id} = value\r\n        props.delStaff(_id)\r\n    }\r\n\r\n    // 编辑员工触发\r\n    const edit_staff = (value: User) => {\r\n        console.log(value)\r\n    }\r\n    // 员工列表数据和事件处理\r\n    useEffect(() => {\r\n        props.togglePage(pageMsg)\r\n        const {list} = props\r\n        const user_List = list.records\r\n        setUserList(user_List)\r\n        //数组长度发生变化后 重新请求数据 渲染列表\r\n    }, [props.list.total, props.list.page, props.list.size])\r\n\r\n\r\n    // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\r\n    useEffect(() => {\r\n        const {errorMsg, addStatus, delStatus} = props\r\n        const astatus = getStore('addStatus')\r\n        const dstatus = getStore('delStatus')\r\n        //添加\r\n        if (astatus == addStatus) {\r\n        } else {\r\n            setStore('addStatus', addStatus)\r\n            if (addStatus < 1) message.success('员工添加成功！')\r\n            else if (errorMsg && errorMsg.includes('密码')) message.error('请输入3位数以上的密码！')\r\n            else if (errorMsg && errorMsg.includes('姓名')) message.error('请输入正确的姓名格式！')\r\n        }\r\n        //删除\r\n        if (dstatus == delStatus) {\r\n        } else {\r\n            setStore('delStatus', delStatus)\r\n            if (delStatus < 1) message.success('员工删除成功！')\r\n        }\r\n    }, [props.addStatus, props.delStatus])\r\n\r\n    return (\r\n        <DocumentTitle title=\"员工管理\">\r\n            <ConfigProvider locale={zhCN}>\r\n                <Card title=\"员工列表\"\r\n                      extra={\r\n                          <Button type=\"primary\" onClick={() => {\r\n                              setVisible(true)\r\n                          }}>新增</Button>\r\n                      }\r\n                      headStyle={{fontSize: 18}}\r\n                      style={{width: '100%'}}\r\n                >\r\n                    {\r\n                        userList &&\r\n                        < Table\r\n                            rowKey='_id'\r\n                            bordered\r\n                            columns={columns}\r\n                            dataSource={userList}\r\n                            pagination={false}\r\n                        />\r\n                    }\r\n                    {userList &&\r\n                    <Pagination\r\n                        defaultCurrent={props.list.page}\r\n                        total={props.list.total}\r\n                        hideOnSinglePage={false}\r\n                        style={{float: \"right\", marginTop: 20}}\r\n                        showTotal={total => `共 ${total} 条`}\r\n                        onChange={(page = 1, pageSize = 10): any => {\r\n                            props.togglePage({\r\n                                query: '',\r\n                                page: page,\r\n                                pagesize: pageSize\r\n                            })\r\n                            setPageMsg({\r\n                                query: '',\r\n                                page: page,\r\n                                pagesize: pageSize\r\n                            })\r\n                        }}\r\n                    />}\r\n                    {/*新增员工弹出框*/}\r\n                    <Modal\r\n                        title=\"新增员工\"\r\n                        visible={visible}\r\n                        onCancel={handleCancel}\r\n                        destroyOnClose\r\n                        footer={null}\r\n                    >\r\n\r\n                        <Form name=\"normal_login\" className=\"login-form\" onFinish={handleOk}>\r\n                            <Form.Item name=\"account\"\r\n                            >\r\n                                <Input defaultValue={props.list.total + 1}\r\n                                       disabled prefix={<FieldNumberOutlined className=\"site-form-item-icon\"/>}\r\n                                       placeholder=\"工号\"/>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"name\" rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入姓名',\r\n                                },\r\n                            ]}>\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"姓名\"/>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"password\" rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}>\r\n                                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                                type=\"password\"\r\n                                                placeholder=\"密码\"/>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"role\" initialValue={'waiter'}>\r\n                                <Radio.Group\r\n                                    options={positionOptions}\r\n                                    onChange={onChange1}\r\n                                    value={selected[0]}\r\n                                    optionType=\"button\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"status\" initialValue={1} style={{marginTop: -10}}>\r\n                                <Radio.Group>\r\n                                    <Radio value={1}>在职</Radio>\r\n                                    <Radio value={0}>请假</Radio>\r\n                                    <Radio value={-1}>离职</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                            <Form.Item style={{marginBottom: 0}}>\r\n                                <Space style={{float: \"right\"}}>\r\n                                    <Button type=\"default\" onClick={handleCancel}>取消</Button>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">添加</Button>\r\n                                </Space>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Card>\r\n            </ConfigProvider>\r\n        </DocumentTitle>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Staff);\r\n","D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\index.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\reducers.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\sagas.ts",[],"D:\\Users\\Chen\\WebstormProjects\\restaurant-ordering-system\\src\\pages\\admin\\staff\\actions.ts",["115","116","117","118","119","120","121","122","123","124","125"],"export const GETFAILED = 'getfailed'\r\nexport type GETFAILED = typeof GETFAILED\r\n\r\nexport const GETLIST = 'getlist'\r\nexport type GETLIST = typeof GETLIST\r\n\r\nexport const GETSUCCESS = 'getsuccess'\r\nexport type GETSUCCESS = typeof GETSUCCESS\r\n\r\nexport const ADDSTAFF = 'addstaff'\r\nexport type ADDSTAFF = typeof ADDSTAFF\r\n\r\nexport const ADDSUCCESS = 'addsuccess'\r\nexport type ADDSUCCESS = typeof ADDSUCCESS\r\n\r\nexport const ADDERROR = 'adderror'\r\nexport type ADDERROR = typeof ADDERROR\r\n\r\nexport const TOGGLEPAGE = 'togglePage'\r\nexport type TOGGLEPAGE = typeof TOGGLEPAGE\r\n\r\nexport const TOGGLED = 'toggled'\r\nexport type TOGGLED = typeof TOGGLED\r\n\r\nexport const DELSTAFF = 'delstaff'\r\nexport type DELSTAFF = typeof DELSTAFF\r\n\r\nexport const DELSUCCESS = 'delsuccess'\r\nexport type DELSUCCESS = typeof DELSUCCESS\r\n\r\nexport const DELERROR = 'delerror'\r\nexport type DELERROR = typeof DELERROR\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":9,"column":13,"nodeType":"132","messageId":"133","endLine":9,"endColumn":20},{"ruleId":"130","severity":1,"message":"134","line":12,"column":13,"nodeType":"132","messageId":"133","endLine":12,"endColumn":25},{"ruleId":"130","severity":1,"message":"135","line":15,"column":13,"nodeType":"132","messageId":"133","endLine":15,"endColumn":23},{"ruleId":"130","severity":1,"message":"136","line":18,"column":13,"nodeType":"132","messageId":"133","endLine":18,"endColumn":21},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"137","line":2,"column":13,"nodeType":"132","messageId":"133","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":5,"column":13,"nodeType":"132","messageId":"133","endLine":5,"endColumn":22},{"ruleId":"130","severity":1,"message":"139","line":8,"column":13,"nodeType":"132","messageId":"133","endLine":8,"endColumn":21},{"ruleId":"130","severity":1,"message":"140","line":11,"column":13,"nodeType":"132","messageId":"133","endLine":11,"endColumn":25},{"ruleId":"126","replacedBy":"141"},{"ruleId":"128","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":238,"column":8,"nodeType":"145","endLine":238,"endColumn":60,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":247,"column":21,"nodeType":"149","messageId":"150","endLine":247,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":255,"column":21,"nodeType":"149","messageId":"150","endLine":255,"endColumn":23},{"ruleId":"143","severity":1,"message":"151","line":260,"column":8,"nodeType":"145","endLine":260,"endColumn":42,"suggestions":"152"},{"ruleId":"130","severity":1,"message":"153","line":2,"column":13,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"154","line":5,"column":13,"nodeType":"132","messageId":"133","endLine":5,"endColumn":20},{"ruleId":"130","severity":1,"message":"155","line":8,"column":13,"nodeType":"132","messageId":"133","endLine":8,"endColumn":23},{"ruleId":"130","severity":1,"message":"156","line":11,"column":13,"nodeType":"132","messageId":"133","endLine":11,"endColumn":21},{"ruleId":"130","severity":1,"message":"157","line":14,"column":13,"nodeType":"132","messageId":"133","endLine":14,"endColumn":23},{"ruleId":"130","severity":1,"message":"158","line":17,"column":13,"nodeType":"132","messageId":"133","endLine":17,"endColumn":21},{"ruleId":"130","severity":1,"message":"159","line":20,"column":13,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23},{"ruleId":"130","severity":1,"message":"160","line":23,"column":13,"nodeType":"132","messageId":"133","endLine":23,"endColumn":20},{"ruleId":"130","severity":1,"message":"161","line":26,"column":13,"nodeType":"132","messageId":"133","endLine":26,"endColumn":21},{"ruleId":"130","severity":1,"message":"162","line":29,"column":13,"nodeType":"132","messageId":"133","endLine":29,"endColumn":23},{"ruleId":"130","severity":1,"message":"163","line":32,"column":13,"nodeType":"132","messageId":"133","endLine":32,"endColumn":21},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"@typescript-eslint/no-redeclare","'TOLOGIN' is already defined.","Identifier","redeclared","'SUCCESSLOGIN' is already defined.","'ERRORLOGIN' is already defined.","'NETERROR' is already defined.","'LoginApi' is already defined.","'STAFFLIST' is already defined.","'STAFFADD' is already defined.","'DELSTAFF_URL' is already defined.",["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pageMsg' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["167"],"'GETFAILED' is already defined.","'GETLIST' is already defined.","'GETSUCCESS' is already defined.","'ADDSTAFF' is already defined.","'ADDSUCCESS' is already defined.","'ADDERROR' is already defined.","'TOGGLEPAGE' is already defined.","'TOGGLED' is already defined.","'DELSTAFF' is already defined.","'DELSUCCESS' is already defined.","'DELERROR' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [props.list.total, props.list.page, props.list.size, props, pageMsg]",{"range":"172","text":"173"},"Update the dependencies array to be: [props, props.addStatus, props.delStatus]",{"range":"174","text":"175"},[6302,6354],"[props.list.total, props.list.page, props.list.size, props, pageMsg]",[7130,7164],"[props, props.addStatus, props.delStatus]"]