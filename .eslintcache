[{"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/index.tsx":"1","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/App.tsx":"2","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/routes/index.ts":"3","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/utils/storage.ts":"4","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/index.tsx":"5","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/reducers.ts":"6","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/sagas.ts":"7","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/index.ts":"8","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/index.ts":"9","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/index.ts":"10","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/sagas.ts":"11","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/reducers.ts":"12","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/reducers.ts":"13","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/sagas.ts":"14","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/sagas.ts":"15","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/reducers.ts":"16","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/Login.tsx":"17","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/Category.tsx":"18","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/Dish.tsx":"19","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/actions.ts":"20","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/utils/http.ts":"21","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/login-style.js":"22","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/action.ts":"23","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/actions.ts":"24","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/Paging.tsx":"25","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/api/index.ts":"26","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/index.ts":"27","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/reducer.ts":"28","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/sagas.ts":"29","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/Cate.tsx":"30","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/action.ts":"31","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/cateWrap-style.js":"32","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/index.ts":"33","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/CusList.tsx":"34","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/reducer.ts":"35","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/sagas.ts":"36","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/action.ts":"37","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/index.ts":"38","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/sagas.ts":"39","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/reducers.ts":"40","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/Order.tsx":"41","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/actions.ts":"42","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/TableCheckBox.tsx":"43","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/index.ts":"44","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/reducers.ts":"45","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/sagas.ts":"46","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/Dashboard.tsx":"47","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/actions.ts":"48","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/dashbord-style.js":"49","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/ColumnChart.tsx":"50","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/LineChart.tsx":"51","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/MixCoulmnLine.tsx":"52","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/PieChart.tsx":"53","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/Layout.tsx":"54","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/actions.ts":"55","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/Time.tsx":"56","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/index.ts":"57","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/index.ts":"58","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/Home.tsx":"59","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/sagas.ts":"60","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/reducers.ts":"61","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/index.ts":"62","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/reducers.ts":"63","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/sagas.ts":"64","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/Staff.tsx":"65","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/actions.ts":"66","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/index.ts":"67","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/index.ts":"68","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/index.ts":"69","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/PreHome.tsx":"70","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/OrderDetail.tsx":"71","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/ShopCar.tsx":"72","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/OrderWrap.js":"73","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/ShopWrap.js":"74","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/FoodShelf.tsx":"75","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/FoodDetail.tsx":"76","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/PreWrap.js":"77","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/homeWrap.js":"78","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/sagas.ts":"79","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/reducers.ts":"80","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/actions.ts":"81","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/reducers.ts":"82","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/sagas.ts":"83","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/actions.ts":"84","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/error/NotAuth.tsx":"85","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/error/NotFound.tsx":"86","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/waiter/Waiter.tsx":"87","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/CateFoodDetail.tsx":"88","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/index.ts":"89","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/reducers.ts":"90","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/sagas.ts":"91","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/Table.tsx":"92","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/TableWrap.js":"93","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/action.ts":"94"},{"size":925,"mtime":1618035615519,"results":"95","hashOfConfig":"96"},{"size":1156,"mtime":1618035510509,"results":"97","hashOfConfig":"96"},{"size":2120,"mtime":1618740196545,"results":"98","hashOfConfig":"96"},{"size":657,"mtime":1618033184917,"results":"99","hashOfConfig":"96"},{"size":432,"mtime":1611984129716,"results":"100","hashOfConfig":"96"},{"size":891,"mtime":1618486309372,"results":"101","hashOfConfig":"96"},{"size":3430,"mtime":1618734278591,"results":"102","hashOfConfig":"96"},{"size":129,"mtime":1611984129715,"results":"103","hashOfConfig":"96"},{"size":137,"mtime":1611984129713,"results":"104","hashOfConfig":"96"},{"size":125,"mtime":1611984129714,"results":"105","hashOfConfig":"96"},{"size":1396,"mtime":1615606649641,"results":"106","hashOfConfig":"96"},{"size":1202,"mtime":1616991434782,"results":"107","hashOfConfig":"96"},{"size":1568,"mtime":1613783430134,"results":"108","hashOfConfig":"96"},{"size":2776,"mtime":1613797412592,"results":"109","hashOfConfig":"96"},{"size":2559,"mtime":1613783648803,"results":"110","hashOfConfig":"96"},{"size":1744,"mtime":1613797225111,"results":"111","hashOfConfig":"96"},{"size":3811,"mtime":1618033260288,"results":"112","hashOfConfig":"96"},{"size":12260,"mtime":1613819744479,"results":"113","hashOfConfig":"96"},{"size":20166,"mtime":1618640147836,"results":"114","hashOfConfig":"96"},{"size":645,"mtime":1615464679227,"results":"115","hashOfConfig":"96"},{"size":1833,"mtime":1612010613592,"results":"116","hashOfConfig":"96"},{"size":1369,"mtime":1611984129715,"results":"117","hashOfConfig":"96"},{"size":1016,"mtime":1611984129713,"results":"118","hashOfConfig":"96"},{"size":1838,"mtime":1611984129714,"results":"119","hashOfConfig":"96"},{"size":537,"mtime":1612010613591,"results":"120","hashOfConfig":"96"},{"size":3693,"mtime":1618734278587,"results":"121","hashOfConfig":"96"},{"size":132,"mtime":1612439908435,"results":"122","hashOfConfig":"96"},{"size":1679,"mtime":1613651758918,"results":"123","hashOfConfig":"96"},{"size":2334,"mtime":1612439908435,"results":"124","hashOfConfig":"96"},{"size":10271,"mtime":1618401922294,"results":"125","hashOfConfig":"96"},{"size":1151,"mtime":1612439908434,"results":"126","hashOfConfig":"96"},{"size":328,"mtime":1613651758918,"results":"127","hashOfConfig":"96"},{"size":135,"mtime":1612524048507,"results":"128","hashOfConfig":"96"},{"size":16372,"mtime":1613821146730,"results":"129","hashOfConfig":"96"},{"size":1667,"mtime":1613798388617,"results":"130","hashOfConfig":"96"},{"size":2376,"mtime":1613798633129,"results":"131","hashOfConfig":"96"},{"size":1054,"mtime":1612529999455,"results":"132","hashOfConfig":"96"},{"size":130,"mtime":1613651758919,"results":"133","hashOfConfig":"96"},{"size":2437,"mtime":1613651758919,"results":"134","hashOfConfig":"96"},{"size":1640,"mtime":1613651758919,"results":"135","hashOfConfig":"96"},{"size":9863,"mtime":1618726680667,"results":"136","hashOfConfig":"96"},{"size":1055,"mtime":1613651758919,"results":"137","hashOfConfig":"96"},{"size":1492,"mtime":1613784223798,"results":"138","hashOfConfig":"96"},{"size":142,"mtime":1615288342233,"results":"139","hashOfConfig":"96"},{"size":448,"mtime":1615373353162,"results":"140","hashOfConfig":"96"},{"size":781,"mtime":1615299295093,"results":"141","hashOfConfig":"96"},{"size":14233,"mtime":1616991434777,"results":"142","hashOfConfig":"96"},{"size":193,"mtime":1615373335750,"results":"143","hashOfConfig":"96"},{"size":876,"mtime":1616991434778,"results":"144","hashOfConfig":"96"},{"size":887,"mtime":1615288342232,"results":"145","hashOfConfig":"96"},{"size":1171,"mtime":1615288342232,"results":"146","hashOfConfig":"96"},{"size":886,"mtime":1615288342233,"results":"147","hashOfConfig":"96"},{"size":1734,"mtime":1615288342233,"results":"148","hashOfConfig":"96"},{"size":11139,"mtime":1618645898075,"results":"149","hashOfConfig":"96"},{"size":296,"mtime":1615606649639,"results":"150","hashOfConfig":"96"},{"size":502,"mtime":1615606649640,"results":"151","hashOfConfig":"96"},{"size":129,"mtime":1616992119243,"results":"152","hashOfConfig":"96"},{"size":149,"mtime":1615606649639,"results":"153","hashOfConfig":"96"},{"size":10912,"mtime":1618377241684,"results":"154","hashOfConfig":"96"},{"size":731,"mtime":1615606649639,"results":"155","hashOfConfig":"96"},{"size":671,"mtime":1615606649639,"results":"156","hashOfConfig":"96"},{"size":128,"mtime":1611984129715,"results":"157","hashOfConfig":"96"},{"size":2155,"mtime":1611984129715,"results":"158","hashOfConfig":"96"},{"size":2253,"mtime":1613712219504,"results":"159","hashOfConfig":"96"},{"size":16561,"mtime":1618463610955,"results":"160","hashOfConfig":"96"},{"size":1098,"mtime":1611984129715,"results":"161","hashOfConfig":"96"},{"size":127,"mtime":1616991434781,"results":"162","hashOfConfig":"96"},{"size":139,"mtime":1616991434780,"results":"163","hashOfConfig":"96"},{"size":138,"mtime":1617079721384,"results":"164","hashOfConfig":"96"},{"size":2116,"mtime":1617254370897,"results":"165","hashOfConfig":"96"},{"size":4296,"mtime":1617254250961,"results":"166","hashOfConfig":"96"},{"size":2191,"mtime":1618288345963,"results":"167","hashOfConfig":"96"},{"size":1067,"mtime":1616991434780,"results":"168","hashOfConfig":"96"},{"size":902,"mtime":1616991434781,"results":"169","hashOfConfig":"96"},{"size":1695,"mtime":1618051538344,"results":"170","hashOfConfig":"96"},{"size":5459,"mtime":1618377179833,"results":"171","hashOfConfig":"96"},{"size":910,"mtime":1616991434781,"results":"172","hashOfConfig":"96"},{"size":3571,"mtime":1618375478371,"results":"173","hashOfConfig":"96"},{"size":1281,"mtime":1618287663877,"results":"174","hashOfConfig":"96"},{"size":2455,"mtime":1618287994642,"results":"175","hashOfConfig":"96"},{"size":718,"mtime":1617252589584,"results":"176","hashOfConfig":"96"},{"size":911,"mtime":1617079845414,"results":"177","hashOfConfig":"96"},{"size":184,"mtime":1617079721394,"results":"178","hashOfConfig":"96"},{"size":236,"mtime":1617079845411,"results":"179","hashOfConfig":"96"},{"size":633,"mtime":1618035187899,"results":"180","hashOfConfig":"96"},{"size":670,"mtime":1618035187903,"results":"181","hashOfConfig":"96"},{"size":237,"mtime":1617891257667,"results":"182","hashOfConfig":"96"},{"size":3808,"mtime":1618290873150,"results":"183","hashOfConfig":"96"},{"size":130,"mtime":1618463821076,"results":"184","hashOfConfig":"96"},{"size":2138,"mtime":1618737517180,"results":"185","hashOfConfig":"96"},{"size":3074,"mtime":1618737480847,"results":"186","hashOfConfig":"96"},{"size":14731,"mtime":1618740108294,"results":"187","hashOfConfig":"96"},{"size":207,"mtime":1618736268927,"results":"188","hashOfConfig":"96"},{"size":1470,"mtime":1618737429223,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"x7kalz",{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"192"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"192"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"192"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"192"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"192"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"192"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"192"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"192"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"192"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"192"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"192"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"192"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"192"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"192"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"192"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"192"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"192"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"192"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"192"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"192"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"192"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"192"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"192"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"192"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"192"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"192"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"192"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"192"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"192"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"192"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"192"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"192"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"192"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"192"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/index.tsx",[],["416","417"],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/App.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/routes/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/utils/storage.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/index.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/store/sagas.ts",["418"],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/Login.tsx",["419"],"import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Form, Input, message } from 'antd';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { LoginWrap } from \"./login-style\";\nimport logo from '../../assets/images/logo.png'\nimport { TOLOGIN } from \"./actions\";\nimport { LoginApi } from '../../common/api'\nimport { Dispatch } from \"redux\";\nimport DocumentTitle from 'react-document-title'\nimport { getStore } from \"../../utils/storage\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {\n  status: number,\n  toLogin(values: object): void,\n  clearState(): void\n  [prop: string]: any\n\n};\ntype userInput = {\n  account: number | string\n  password: string\n}\n\nconst mapStateToProps = (state: any) => ({\n  status: state.login.status\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  toLogin(values: object) {\n    dispatch({\n      type: TOLOGIN,\n      url: LoginApi,\n      data: values\n    })\n  }\n})\n\n\nconst Login: FC<Props> = (props) => {\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (String(props.status)) {\n      const { status } = props\n      console.log(props)\n      if (status === -1) message.warning('网络连接错误！');\n      else if (status > 100) message.error('账号或密码错误！')\n      else {\n        if (getStore('userInfo') !== null) {\n          const info = JSON.parse(getStore('userInfo'))\n          if (info.role === 'admin') history.push('/admin/dashboard')\n          else if (info.role === 'chef') history.push('/chef')\n          else history.push('/waiter')\n          message.success(`欢迎您：${info.name}`)\n        }\n      }\n    }\n  }, [props.status])\n\n  /**\n   * 表单提交验证函数\n   * @param values 用户提交的用户名和密码\n   */\n  // todo 账号输入是字符串的问题\n  function onFinish(values: userInput): void {\n    const { account, password } = values;\n    if ((account as string).trim() === '' || password.trim() === '') {\n      message.error('请输入工号或密码！')\n    } else {\n      props.toLogin(values)\n    }\n  }\n\n  return (\n      <DocumentTitle title='登录'>\n        <LoginWrap>\n          <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={onFinish}\n          >\n            <img className='logo-left' src={logo} alt='logo'/>\n            <img className='logo' src={logo} alt=''/>\n            <span className='login-form-title'>账号登录</span>\n            <Form.Item\n                name=\"account\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入工号',\n                  },\n                ]}\n            >\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"工号\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入密码',\n                  },\n                ]}\n            >\n              <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                              type=\"password\"\n                              placeholder=\"密码\"/>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" size=\"large\"\n                      className=\"login-form-button\">立即登录</Button>\n              <div className=\"login-form-login\"><span>还没有账号？<a href=\"???\">去注册...</a></span></div>\n            </Form.Item>\n          </Form>\n        </LoginWrap>\n      </DocumentTitle>\n  );\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/Category.tsx",["420","421","422","423","424","425","426","427","428","429"],"import React, { FunctionComponent, useEffect, useMemo, useRef, useState } from 'react';\nimport DocumentTitle from \"react-document-title\";\nimport { Button, Card, ConfigProvider, Form, Input, message, Modal, Popconfirm, Space, Table } from \"antd\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport { DeleteOutlined, EditOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { connect } from 'react-redux'\nimport { Dispatch } from \"redux\";\nimport { CATEADD, CATEDEL, CATEEDIT, GETCATELISTS } from \"./action\";\nimport { ADDCATELIST_URL, DELCATE_URL, EDITCATE_URL, GETCATELIST_URL } from \"../../../common/api\";\nimport moment from 'moment';\nimport { getStore, setStore } from \"../../../utils/storage\";\nimport Paging from \"../../../components/Paging\";\nimport TableCheckBox from \"../../../components/TableCheckBox\";\n\ninterface Categories {\n  _id: string,\n  whoAdd: string,\n  foodTypeName: string\n}\n\ninterface Prop {\n  [prop: string]: any,\n\n  addCate(value: object): void\n\n  editCate(value: object): void\n\n  delCate(vale: string): void\n\n  toggleCatePage(value?: object): void\n}\n\ntype Props = Prop;\n\nconst mapStateToProps = (state: any) => ({\n  list: state.cate.categoryList || [],\n  addCateStatus: state.cate.addCateStatus,\n  delCateStatus: state.cate.delCateStatus,\n  errorMsgCate: state.cate.errorMsgCate,\n  editCateStatus: state.cate.editCateStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delCate(value: string) {\n    dispatch({\n      type: CATEDEL,\n      url: DELCATE_URL,\n      data: value\n    })\n  },\n  addCate(value: object) {\n    dispatch({\n      type: CATEADD,\n      url: ADDCATELIST_URL,\n      data: value\n    })\n  },\n  toggleCatePage(value: object) {\n    dispatch({\n      type: GETCATELISTS,\n      url: GETCATELIST_URL,\n      data: value\n    })\n  },\n  editCate(value: object) {\n    dispatch({\n      type: CATEEDIT,\n      url: EDITCATE_URL,\n      data: value\n    })\n  }\n})\n\n\nconst Category: FunctionComponent<Props> = (props) => {\n\n  // 表格列\n  const columns: ColumnsType<Categories> = [\n    {\n      title: '分类',\n      dataIndex: 'foodTypeName',\n      key: 'foodTypeName',\n    },\n    {\n      title: '关联菜品数量',\n      key: 'contactnum',\n      dataIndex: 'contactnum',\n    },\n    // {\n    //   title: '创建人',\n    //   key: 'whoAdd',\n    //   dataIndex: 'whoAdd',\n    // },\n    {\n      title: '创建时间',\n      key: 'createAt',\n      dataIndex: 'createAt',\n      render: (text => (\n          <>\n            {\n              moment(text).format('YYYY-MM-DD')\n            }\n          </>\n      ))\n    },\n    /*{\n      title: '操作',\n      key: '_id',\n      width: 300,\n      render: (text, records, index) => (\n          <Space>\n            <Button type=\"primary\" onClick={() => {\n              edit_cate(records)\n            }} shape=\"circle\" icon={<EditOutlined/>} size={\"small\"}/>\n            {\n              <Popconfirm\n                  title=\"确定要删除此分类吗？\"\n                  placement=\"top\"\n                  okText=\"确定\"\n                  cancelText=\"取消\"\n                  onConfirm={() => {\n                    del_cate(records)\n                  }}\n              >\n                <Button type=\"primary\" danger shape=\"circle\" icon={<DeleteOutlined/>} size={\"small\"}/>\n              </Popconfirm>\n            }\n          </Space>\n      ),\n    },*/\n  ];\n\n  const [categoryList, SetCategoryList] = useState([])\n  const [visible, setVisible] = useState(false);\n  const [popCateStyle, setPopCateStyle] = useState('')\n  const userInfo = JSON.parse(getStore('userInfo'))\n  const [editValue, SetEditValue] = useState({\n    _id: '',\n    whoAdd: '',\n    foodTypeName: ''\n  })\n  //列表显示\n  const [pageMsg, setPageMsg] = useState({\n    query: '',\n    page: 1,\n    pagesize: 10\n  })\n\n  // 取消弹出框\n  const handleCancel = () => {\n    // todo 取消弹出框确认\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  // 表单提交函数 新增和编辑\n  const handleOk = (value: any) => {\n    if (popCateStyle === '新增分类') {\n      console.log(value)\n      props.addCate(value)\n    } else {\n      value._id = editValue._id\n      props.editCate(value)\n    }\n    setVisible(false)\n  };\n  //修改分类\n  const edit_cate = (records: Categories) => {\n    setVisible(true)\n    setPopCateStyle('编辑分类')\n    SetEditValue({\n      _id: records?._id,\n      foodTypeName: records?.foodTypeName,\n      whoAdd: records?.whoAdd\n    })\n  }\n  // 删除触发\n  const del_cate = (value: Categories) => {\n    const { _id } = value\n    props.delCate(_id)\n  }\n\n  // 列表数据和事件处理\n  useEffect(() => {\n    props.toggleCatePage(pageMsg)\n    const { list } = props\n    const cates = list.records\n    SetCategoryList(cates)\n    //数组长度发生变化后 获取数据 渲染列表\n  }, [props.list.total, props.list.page, props.list.size])\n\n  // 修改状态后 部分信息改变 通过memo监听list变化 重新渲染页面\n  useMemo(() => {\n    const { list } = props\n    const cateList = list.records\n    SetCategoryList(cateList)\n  }, [props.list])\n\n  // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n  useEffect(() => {\n    const { errorMsgCate, addCateStatus, delCateStatus, editCateStatus } = props\n    const aastatus = getStore('addCateStatus')\n    const ddstatus = getStore('delCateStatus')\n    const eestatus = getStore('editCateStatus')\n    console.log(eestatus)\n    //添加\n    if (aastatus == addCateStatus) {\n    } else {\n      console.log(props)\n      console.log(errorMsgCate)\n      setStore('addCateStatus', addCateStatus)\n      if (addCateStatus < 1) message.success('分类添加成功')\n      else if (errorMsgCate && errorMsgCate.includes('存在')) message.warn('此分类已存在')\n    }\n    //删除\n    if (ddstatus == delCateStatus) {\n    } else {\n      setStore('delCateStatus', delCateStatus)\n      if (delCateStatus < 1) message.success('分类删除成功')\n    }\n    //修改\n    if (eestatus == editCateStatus) {\n    } else {\n      setStore('editCateStatus', editCateStatus)\n      console.log(props)\n      if (editCateStatus < 1) {\n        message.success('分类修改成功')\n        //清空选中项\n        SetSelectValue([])\n        // @ts-ignore\n        ref.current = []\n      } else if (errorMsgCate && errorMsgCate.includes('存在')) message.warn('此分类已存在')\n    }\n  }, [props])\n\n  //选中函数\n  const [selectValue, SetSelectValue] = useState([])\n  const [editBtnState, setEditBtnState] = useState(false)\n  const [barVisible, setBarVisible] = useState('')\n  const ref = useRef();\n  const rowSelection = {\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\n      SetSelectValue(selectedRows)\n      ref.current = selectedRowKeys;\n      if (selectedRows.length > 1) setEditBtnState(true)\n      else setEditBtnState(false)\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    selectedRowKeys: ref.current,\n  };\n  //异步函数捕捉更新状态\n  useEffect(() => {\n    SetSelectValue(selectValue)\n    if (selectValue.length === 0) setBarVisible('none')\n    else setBarVisible('')\n  }, [selectValue])\n  //捕捉异步pageMsg\n  useEffect(() => {\n    setPageMsg(pageMsg)\n    props.toggleCatePage(pageMsg)\n  }, [pageMsg])\n  // 搜索后列表刷新\n  useEffect(() => {\n    const { list } = props\n    const order_List = list.records\n    SetCategoryList(order_List)\n  }, [props.list.records])\n\n  //删除\n  function delSelected() {\n    // @ts-ignore\n    const delAry = selectValue.map(val => val._id)\n    // 把多个删除项处理为字符串格式 传给后端处理\n    const delIds = delAry.join('-')\n    props.delCate(delIds)\n    setBarVisible('none')\n  }\n\n  return (\n      <DocumentTitle title=\"菜品 > 分类\">\n        <ConfigProvider locale={zhCN}>\n          <Card title=\"菜品分类\" extra={\n            <Button onClick={() => {\n              setVisible(true)\n              setPopCateStyle('新增分类')\n            }} type=\"primary\">\n              新增\n            </Button>\n          }\n                style={{ width: '100%' }}\n          >\n            <TableCheckBox\n                delSelected={delSelected}\n                barVisible={barVisible}\n                editBtn={() => {\n                  edit_cate(selectValue[0])\n                }}\n                editBtnState={editBtnState}\n                Search={(value: string) => {\n                  setPageMsg({\n                    page: 1,\n                    pagesize: 10,\n                    query: value\n                  })\n                }}\n                title='分类名'/>\n\n            {\n              categoryList && <Table\n                  rowKey='_id'\n                  bordered\n                  columns={columns}\n                  dataSource={categoryList}\n                  pagination={false}\n                  rowSelection={rowSelection}\n              />\n            }\n            {\n              categoryList &&\n              <Paging page={props.list.page} total={props.list.total} fun={(page = 1, pageSize = 10): any => {\n                props.toggleCatePage(pageMsg)\n                setPageMsg({\n                  query: pageMsg.query,\n                  page: page,\n                  pagesize: pageSize\n                })\n              }}/>\n            }\n            <Modal\n                title={popCateStyle}\n                visible={visible}\n                onCancel={handleCancel}\n                destroyOnClose\n                footer={null}\n            >\n              <Form className=\"login-form\" onFinish={handleOk}>\n\n                {\n                  popCateStyle === '新增分类' &&\n                  <Form.Item name=\"foodTypeName\" rules={[\n                    {\n                      required: true,\n                      message: '请输入分类',\n                    },\n                  ]}>\n                    <Input autoFocus={true}\n                           prefix={<EditOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入分类名称\"/>\n                  </Form.Item>\n                }\n                {\n                  popCateStyle === '编辑分类' &&\n                  <Form.Item name=\"foodTypeName\" initialValue={editValue.foodTypeName} rules={[\n                    {\n                      required: true,\n                      message: '请输入分类',\n                    },\n                  ]}>\n                    <Input autoFocus={true}\n                           prefix={<EditOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入分类名称\"/>\n                  </Form.Item>\n                }\n\n                {\n                  popCateStyle === '新增分类' &&\n                  <Form.Item name=\"whoAdd\" initialValue={userInfo.name}>\n                    <Input disabled\n                           prefix={<UserOutlined className=\"site-form-item-icon\"/>}/>\n                  </Form.Item>\n                }\n                {\n                  popCateStyle === '编辑分类' &&\n                  <Form.Item name=\"whoAdd\" initialValue={userInfo.name}>\n                    <Input disabled\n                           prefix={<UserOutlined className=\"site-form-item-icon\"/>}/>\n                  </Form.Item>\n                }\n\n\n                <Form.Item style={{ marginBottom: 0 }}>\n                  <Space style={{ float: \"right\" }}>\n                    <Button type=\"default\" onClick={handleCancel}>取消</Button>\n                    {\n                      popCateStyle === '新增分类' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">添加</Button>\n                    }\n                    {\n                      popCateStyle === '编辑分类' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">提交</Button>\n                    }\n                  </Space>\n                </Form.Item>\n              </Form>\n            </Modal>\n\n          </Card>\n        </ConfigProvider>\n      </DocumentTitle>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/Dish.tsx",["430","431","432","433","434","435","436","437","438","439"],"import React, { FunctionComponent, useEffect, useMemo, useRef, useState } from 'react';\nimport { Dispatch } from \"redux\";\nimport { ADDDISH_URL, DELDISH_URL, DISHLIST, EDITDISH_URL, SERVER_URL, UPPIC_URL } from \"../../../common/api\";\nimport { connect } from \"react-redux\";\nimport DocumentTitle from \"react-document-title\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport {\n  Button,\n  Card,\n  Col,\n  ConfigProvider,\n  Drawer,\n  Form,\n  Input,\n  message,\n  Modal,\n  Popconfirm,\n  Row,\n  Select,\n  Space,\n  Table,\n  Upload\n} from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { ADDDISH, DELDISH, EDITDISH, GETDISHLIST } from \"./actions\";\nimport Paging from \"../../../components/Paging\";\nimport { PlusOutlined, } from '@ant-design/icons';\nimport './dish.css'\nimport { getStore, setStore } from \"../../../utils/storage\";\nimport TableCheckBox from \"../../../components/TableCheckBox\";\n\nconst { Option } = Select;\n\ninterface OwnProps {\n  [prop: string]: any\n\n  toggleDishPage(value?: object): void\n\n  getCateList(): void,\n\n  addDish(value: object): void,\n\n  delDish(value: string): void\n\n  editDish(value: object): void\n\n\n}\n\ninterface Dishes {\n  _id: any,\n  name: string,\n  category: {\n    _id: string,\n    foodTypeName: string\n    [prop: string]: any\n  },\n  number: number,\n  price: number,\n  picture: string\n}\n\ntype Props = OwnProps;\n\nconst mapStateToProps = (state: any) => ({\n  list: state.dish.list || [],\n  cateList: state.dish.cateList,\n  addDishStatus: state.dish.addDishStatus,\n  delDishStatus: state.dish.delDishStatus,\n  errorMsgDish: state.dish.errorMsgDish,\n  editDishStatus: state.dish.editDishStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delDish(value: string) {\n    dispatch({\n      type: DELDISH,\n      url: DELDISH_URL,\n      data: value\n    })\n  },\n  addDish(value: object) {\n    dispatch({\n      type: ADDDISH,\n      url: ADDDISH_URL,\n      data: value\n    })\n  },\n  toggleDishPage(value: object) {\n    dispatch({\n      type: GETDISHLIST,\n      url: DISHLIST,\n      data: value\n    })\n  },\n  editDish(value: object) {\n    dispatch({\n      type: EDITDISH,\n      url: EDITDISH_URL,\n      data: value\n    })\n  }\n})\n\n\nconst Dish: FunctionComponent<Props> = (props) => {\n  // 表格列\n  const columns: ColumnsType<Dishes> = [\n    {\n      title: '菜品',\n      dataIndex: 'name',\n      key: 'name',\n      render: (value, records, index) => (<a onClick={() => {\n        edit_dish(records)\n      }}>{value}</a>),\n    },\n    {\n      title: '分类',\n      key: 'category',\n      dataIndex: 'category',\n      render: (value, records, index) => (\n          <>\n            {records?.category?.foodTypeName}\n          </>\n      ),\n    },\n    {\n      title: '售价(元)',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: '库存',\n      key: 'number',\n      dataIndex: 'number',\n      render: (number: number) => (\n          <>\n            {number}\n          </>\n      ),\n    },\n    /*{\n      title: '操作',\n      key: '_id',\n      width: 300,\n      render: (text, records, index) => (\n          <Space>\n            <Button type=\"primary\" onClick={() => {\n              edit_dish(records)\n            }} shape=\"circle\" icon={<EditOutlined/>} size={\"small\"}/>\n            {\n              <Popconfirm\n                  title=\"确定要删除此菜品吗？\"\n                  placement=\"top\"\n                  okText=\"确定\"\n                  cancelText=\"取消\"\n                  onConfirm={() => {\n                    del_dish(records)\n                  }}\n              >\n                <Button type=\"primary\" danger shape=\"circle\" icon={<DeleteOutlined/>} size={\"small\"}/>\n              </Popconfirm>\n            }\n          </Space>\n      ),\n    },*/\n  ];\n\n  // 修改菜品信息\n  const edit_dish = (records: Dishes) => {\n    console.log(records)\n    SetStateVisible(true)\n    setDrawerType('编辑菜品')\n    SetEditValue({\n      _id: records._id,\n      name: records.name,\n      picture: records.picture,\n      number: records.number,\n      price: records.price,\n      categoryId: records?.category?._id,\n      foodTypeName: records?.category?.foodTypeName\n    })\n  }\n\n  const [editValue, SetEditValue] = useState({\n    _id: '',\n    name: '',\n    picture: '',\n    number: 888,\n    price: 0,\n    categoryId: '',\n    foodTypeName: '',\n  })\n  const [dishList, setDishList] = useState([])\n\n\n  //列表显示\n  const [pageMsg, setPageMsg] = useState({\n    query: '',\n    page: 1,\n    pagesize: 10\n  })\n  const [stateVisible, SetStateVisible] = useState(false)\n  const onClose = () => {\n    setFileList([])\n    SetStateVisible(false)\n  };\n\n\n  // 列表数据和事件处理\n  useEffect(() => {\n    props.toggleDishPage(pageMsg)\n    const { list } = props\n    const dish_List = list.records\n    setDishList(dish_List)\n    //数组长度发生变化后 获取数据 渲染列表\n  }, [props.list.total, props.list.page, props.list.size])\n\n  // 修改状态后 部分信息改变 通过memo监听list变化 重新渲染页面\n  useMemo(() => {\n    const { list } = props\n    const dishList = list.records\n    setDishList(dishList)\n  }, [props.list])\n\n\n  // 点击编辑按钮后 立马获得点击当前元素的信息\n  useEffect(() => {\n    // console.log(editValue)\n    // console.log(fileLists)\n    const picurl = editValue.picture || ''\n    if (picurl !== '') {\n      console.log(111111)\n      const photo = [{\n        uid: 123,\n        status: 'done',\n        type: 'image/png',\n        url: `${SERVER_URL}${picurl}`\n      }]\n      // @ts-ignore\n      setFileList(photo)\n    } else {\n\n    }\n  }, [editValue])\n\n\n  /**\n   * 图片上传组件\n   * previewVisible 预览可见性\n   * previewImage 预览图片\n   * previewTitle 预览标题\n   * fileList 图片数组\n   *\n   */\n  const [previewVisible, setPreviewVisible] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n  const [fileLists, setFileList] = useState([])\n  const [drawerType, setDrawerType] = useState('')\n\n\n  const handleCancel = () => onClose();\n\n  function getBase64(file: any) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  // 图片预览\n  const handlePreview = async (file: any) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview)\n    setPreviewVisible(true)\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\n  };\n\n  // todo 上传多张照片\n  const [dishImgUrl, setDishImgUrl] = useState('')\n  // @ts-ignore  图片状态发生变化时\n  const handleChange = ({ fileList }) => {\n    setFileList(fileList)\n    if (fileList.length > 0 && fileList[0].status === 'done') setDishImgUrl(fileList[0].response[0].file)\n  };\n\n  // 图片上传按钮\n  const uploadButton = (<div>\n    <PlusOutlined/>\n    <div style={{ marginTop: 8 }}>点击上传</div>\n  </div>);\n\n  // 新增/编辑菜品表单提交函数\n  const handleForm = (value: any) => {\n    if (drawerType === '新增菜品') {\n      value.picture = dishImgUrl\n      props.addDish(value)\n    } else {\n      // value.categoryId = editValue.categoryId\n      value._id = editValue._id\n      value.picture = dishImgUrl\n      console.log(value)\n      props.editDish(value)\n    }\n    onClose()\n  }\n\n  // 删除菜品触发\n  const del_dish = (value: Dishes) => {\n    const { _id } = value\n    props.delDish(_id)\n  }\n\n\n  // 上传前验证图片类型和大小\n  function beforeUpload(file: any) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('只能上传JPG或者PNG图片!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('图片大小不能超过2M!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n\n  // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n  useEffect(() => {\n    console.log(props)\n    const { errorMsgDish, addDishStatus, delDishStatus, editDishStatus } = props\n    const aastatus = getStore('addDishStatus')\n    const ddstatus = getStore('delDishStatus')\n    const eestatus = getStore('editDishStatus')\n\n    console.log(props)\n    console.log(errorMsgDish)\n\n    //添加\n    if (aastatus == addDishStatus) {\n    } else {\n      setStore('addDishStatus', addDishStatus)\n      if (addDishStatus < 1) message.success('菜品添加成功')\n      else if (errorMsgDish && errorMsgDish.includes('存在')) message.warn('此菜品已存在')\n    }\n    //删除\n    if (ddstatus == delDishStatus) {\n    } else {\n      setStore('delDishStatus', delDishStatus)\n      if (delDishStatus < 1) message.success('菜品删除成功')\n    }\n    //修改\n    if (eestatus == editDishStatus) {\n    } else {\n      setStore('editDishStatus', editDishStatus)\n      if (editDishStatus < 1) {\n        message.success('菜品修改成功')\n        //清空选中项\n        SetSelectValue([])\n        // @ts-ignore\n        ref.current = []\n      } else if (errorMsgDish && errorMsgDish.includes('存在')) message.warn('此菜品已存在')\n    }\n  }, [props])\n\n  //选中函数\n  const [editBtnState, setEditBtnState] = useState(false)\n  const [selectValue, SetSelectValue] = useState([])\n  const [barVisible, setBarVisible] = useState('')\n  const ref = useRef();\n  const rowSelection = {\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\n      SetSelectValue(selectedRows)\n      ref.current = selectedRowKeys;\n      if (selectedRows.length > 1) setEditBtnState(true)\n      else setEditBtnState(false)\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    selectedRowKeys: ref.current,\n  };\n  //异步函数捕捉更新状态\n  useEffect(() => {\n    SetSelectValue(selectValue)\n    if (selectValue.length === 0) setBarVisible('none')\n    else setBarVisible('')\n  }, [selectValue])\n  //捕捉异步pageMsg\n  useEffect(() => {\n    setPageMsg(pageMsg)\n    props.toggleDishPage(pageMsg)\n  }, [pageMsg])\n  // 搜索后列表刷新\n  useEffect(() => {\n    const { list } = props\n    const order_List = list.records\n    setDishList(order_List)\n  }, [props.list.records])\n\n  //删除\n  function delSelected() {\n    // @ts-ignore\n    const delAry = selectValue.map(val => val._id)\n    // 把多个删除项处理为字符串格式 传给后端处理\n    const delIds = delAry.join('-')\n    props.delDish(delIds)\n    setBarVisible('none')\n  }\n\n  return (\n      <DocumentTitle title=\"菜品 > 列表\">\n        <ConfigProvider locale={zhCN}>\n          <Card title=\"菜品列表\" extra={\n            <Button onClick={() => {\n              SetStateVisible(true)\n              setDrawerType('新增菜品')\n            }} type=\"primary\" shape=\"circle\" icon={<PlusOutlined/>} size={\"large\"}/>\n          }\n                style={{ width: '100%' }}>\n\n            <TableCheckBox\n                delSelected={delSelected}\n                barVisible={barVisible}\n                editBtn={() => {\n                  edit_dish(selectValue[0])\n                }}\n                editBtnState={editBtnState}\n                Search={(value: string) => {\n                  setPageMsg({\n                    page: 1,\n                    pagesize: 10,\n                    query: value\n                  })\n                }}\n                title='菜品名'/>\n\n            {\n              dishList && <Table\n                  rowKey='_id'\n                  bordered\n                  columns={columns}\n                  dataSource={dishList}\n                  pagination={false}\n                  rowSelection={rowSelection}\n                  scroll={{ y: 400 }}\n              />\n            }\n            {\n              dishList &&\n              <Paging page={props.list.page} total={props.list.total} fun={(page = 1, pageSize = 10): any => {\n                props.toggleDishPage(pageMsg)\n                setPageMsg({\n                  query: pageMsg.query,\n                  page: page,\n                  pagesize: pageSize\n                })\n              }}/>\n            }\n\n            {/*新增菜品抽屉框*/}\n            <Drawer\n                title={drawerType}\n                width={330}\n                onClose={onClose}\n                visible={stateVisible}\n                footer={null}\n                destroyOnClose\n            >\n              <>\n                <Upload\n                    action={UPPIC_URL}\n                    listType=\"picture-card\"\n                    fileList={fileLists}\n                    onPreview={handlePreview}\n                    onChange={handleChange}\n                    beforeUpload={beforeUpload}\n                >\n                  {fileLists.length >= 1 ? null : uploadButton}\n                </Upload>\n                <Modal\n                    visible={previewVisible}\n                    title={previewTitle}\n                    footer={null}\n                    onCancel={handleCancel}\n                >\n                  <img alt=\"example\" style={{ width: '100%' }} src={previewImage}/>\n                </Modal>\n              </>\n\n              <Form layout=\"vertical\"\n                    requiredMark\n                    style={{ marginTop: 30 }}\n                    onFinish={handleForm}\n              >\n                <Row gutter={16}>\n                  <Col span={23}>\n                    {\n                      drawerType === '新增菜品' &&\n                      <Form.Item\n                          name=\"name\"\n                          label=\"菜名\"\n                          rules={[{ required: true, message: '请输入名称' }]}\n                      >\n                        <Input autoFocus={true} placeholder=\"请输入名称\"/>\n                      </Form.Item>\n                    }\n                    {\n                      drawerType === '编辑菜品' &&\n                      <Form.Item\n                          name=\"name\"\n                          label=\"菜名\"\n                          initialValue={editValue.name}\n                          rules={[{ required: true, message: '请输入名称' }]}\n                      >\n                        <Input placeholder=\"请输入名称\" autoFocus={true}/>\n                      </Form.Item>\n                    }\n                  </Col>\n                  <Col span={23}>\n                    {\n                      drawerType === '新增菜品' &&\n                      <Form.Item\n                          name=\"price\"\n                          label=\"单价\"\n                          rules={[{ required: true, message: '请输入单价' }]}\n                      >\n                        <Input\n                            type={'number'}\n                            style={{ width: '100%' }}\n                            addonAfter=\"元\"\n                            placeholder=\"请输入单价\"\n                        />\n                      </Form.Item>\n                    }\n                    {\n                      drawerType === '编辑菜品' &&\n                      <Form.Item\n                          initialValue={editValue.price}\n                          name=\"price\"\n                          label=\"单价\"\n                          rules={[{ required: true, message: '请输入单价' }]}\n                      >\n                        <Input\n                            type={'number'}\n                            style={{ width: '100%' }}\n                            addonAfter=\"元\"\n                            placeholder=\"请输入单价\"\n                        />\n                      </Form.Item>\n                    }\n                  </Col>\n                </Row>\n                <Row gutter={16}>\n                  <Col span={23}>\n                    {\n                      drawerType === '新增菜品' &&\n                      <Form.Item\n                          name=\"category\"\n                          label=\"分类\"\n                          rules={[{ required: true, message: '请选择分类' }]}\n                      >\n                        <Select placeholder=\"请选择分类\">\n                          {\n                            props.cateList &&\n                            props.cateList.map((value: any) => (\n                                    <Option value={value._id}\n                                            key={value._id}>\n                                      {value.foodTypeName}\n                                    </Option>\n                                )\n                            )\n                          }\n                        </Select>\n                      </Form.Item>\n                    }\n                    {\n                      drawerType === '编辑菜品' &&\n                      <Form.Item\n                          initialValue={editValue.categoryId}\n                          name=\"category\"\n                          label=\"分类\"\n                          rules={[{ required: true, message: '请选择分类' }]}\n                      >\n                        <Select placeholder=\"请选择分类\"\n                                defaultValue={editValue.foodTypeName}>\n                          {\n                            props.cateList &&\n                            props.cateList.map((value: any) => (\n                                    <Option value={value._id}\n                                            key={value._id}>\n                                      {value.foodTypeName}\n                                    </Option>\n                                )\n                            )\n                          }\n                        </Select>\n                      </Form.Item>\n                    }\n                  </Col>\n                  <Col span={23}>\n                    {\n                      drawerType === '新增菜品' &&\n                      <Form.Item\n                          initialValue={888}\n                          name=\"number\"\n                          label=\"库存\"\n                          rules={[{ required: true, message: '请输入库存' }]}\n                      >\n                        <Input\n                            type={'number'}\n                            style={{ width: '100%' }}\n                            placeholder=\"请输入库存\"\n                            defaultValue={888}\n                        />\n                      </Form.Item>\n                    }\n                    {\n                      drawerType === '编辑菜品' &&\n                      <Form.Item\n                          initialValue={editValue.number}\n                          name=\"number\"\n                          label=\"库存\"\n                          rules={[{ required: true, message: '请输入库存' }]}\n                      >\n                        <Input\n                            type={'number'}\n                            style={{ width: '100%' }}\n                            placeholder=\"请输入库存\"\n                        />\n                      </Form.Item>\n                    }\n                  </Col>\n                </Row>\n                <Form.Item style={{ marginTop: 66, marginRight: 14 }}>\n                  <Space style={{ float: \"right\" }}>\n                    <Button type=\"default\" onClick={onClose}>取消</Button>\n                    {\n                      drawerType === '新增菜品' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">添加</Button>\n                    }\n                    {\n                      drawerType === '编辑菜品' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">提交</Button>\n                    }\n                  </Space>\n                </Form.Item>\n              </Form>\n            </Drawer>\n          </Card>\n        </ConfigProvider>\n      </DocumentTitle>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dish)\n\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/actions.ts",["440","441","442","443","444","445"],"/*\n* @name: Login页面动作声明\n* @description: 声明action触发类型\n* @author: 陈相材\n* @time: 2020-12-15 20:01:24\n*/\n\nexport const TOLOGIN = 'TOLOGIN';\nexport type TOLOGIN = typeof TOLOGIN\n\nexport const SUCCESSLOGIN = 'SUCCESSLOGIN';\nexport type SUCCESSLOGIN = typeof SUCCESSLOGIN\n\nexport const ERRORLOGIN = 'ERRORLOGIN';\nexport type ERRORLOGIN = typeof ERRORLOGIN\n\nexport const NETERROR = 'NETERROR'\nexport type NETERROR = typeof NETERROR\n\nexport const CHEFLOGINSUC = 'chefloginsuc';\nexport type CHEFLOGINSUC = typeof CHEFLOGINSUC\n\nexport const WAITERLOGINSUC = 'waiterloginsuc';\nexport type WAITERLOGINSUC = typeof WAITERLOGINSUC\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/utils/http.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/login/login-style.js",[],["446","447"],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/category/action.ts",["448","449","450","451","452","453","454","455","456","457","458","459"],"export const GETCATELISTS = 'getcatelists'\nexport type GETCATELISTS = typeof GETCATELISTS\n\nexport const GETCATELISTSUC = 'getcatelistsuc'\nexport type GETCATELISTSUC = typeof GETCATELISTSUC\n\nexport const GETCATELISTERR = 'getcatelisterr'\nexport type GETCATELISTERR = typeof GETCATELISTERR\n\n\nexport const CATEADD = 'cateadd'\nexport type CATEADD = typeof CATEADD\n\nexport const CATEADDSUC = 'cateaddsuc'\nexport type CATEADDSUC = typeof CATEADDSUC\n\nexport const CATEADDERR = 'cateadderr'\nexport type CATEADDERR = typeof CATEADDERR\n\n\nexport const CATEEDIT = 'cateedit'\nexport type CATEEDIT = typeof CATEEDIT\n\nexport const CATEEDITSUC = 'cateeditsuc'\nexport type CATEEDITSUC = typeof CATEEDITSUC\n\nexport const CATEEDITERR = 'cateediterr'\nexport type CATEEDITERR = typeof CATEEDITERR\n\n\n\n\nexport const CATEDEL = 'catedel'\nexport type CATEDEL = typeof CATEDEL\n\nexport const CATEDELSUC = 'catedelsuc'\nexport type CATEDELSUC = typeof CATEDELSUC\n\nexport const CATEDELERR = 'catedelerr'\nexport type CATEDELERR = typeof CATEDELERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dish/actions.ts",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481"],"export const GETFAILED = 'getfailed'\nexport type GETFAILED = typeof GETFAILED\n\nexport const GETDISHLIST = 'getlist'\nexport type GETDISHLIST = typeof GETDISHLIST\n\nexport const GETCATELIST = 'getcatelist'\nexport type GETCATELIST = typeof GETCATELIST\n\nexport const GETCATELISTSUCCESS = 'getcatelistsuccess'\nexport type GETCATELISTSUCCESS = typeof GETCATELISTSUCCESS\n\n\nexport const GETSUCCESS = 'getsuccess'\nexport type GETSUCCESS = typeof GETSUCCESS\n\n//菜品\nexport const ADDDISH = 'adddish'\nexport type ADDDISH = typeof ADDDISH\n\nexport const ADDDISHSUC = 'adddishsuc'\nexport type ADDDISHSUC = typeof ADDDISHSUC\n\nexport const ADDDISHERR = 'adddisherr'\nexport type ADDDISHERR = typeof ADDDISHERR\n\nexport const EDITDISHDISHSUC = 'editdishdishsuc'\nexport type EDITDISHDISHSUC = typeof EDITDISHDISHSUC\n\nexport const EDITDISHERR = 'editdisherr'\nexport type EDITDISHERR = typeof EDITDISHERR\n\nexport const EDITDISH = 'editdish'\nexport type EDITDISH = typeof EDITDISH\n\nexport const DELDISH = 'deldish'\nexport type DELDISH = typeof DELDISH\n\nexport const DELDISHSUC = 'deldishsuc'\nexport type DELDISHSUC = typeof DELDISHSUC\n\nexport const DELDISHERR = 'deldisherr'\nexport type DELDISHERR = typeof DELDISHERR\n\n\n\n\n\n\nexport const ADDSUCCESS = 'addsuccess'\nexport type ADDSUCCESS = typeof ADDSUCCESS\n\nexport const ADDERROR = 'adderror'\nexport type ADDERROR = typeof ADDERROR\n\nexport const TOGGLEPAGE = 'togglePage'\nexport type TOGGLEPAGE = typeof TOGGLEPAGE\n\nexport const TOGGLED = 'toggled'\nexport type TOGGLED = typeof TOGGLED\n\n\nexport const DELSUCCESS = 'delsuccess'\nexport type DELSUCCESS = typeof DELSUCCESS\n\nexport const DELERROR = 'delerror'\nexport type DELERROR = typeof DELERROR\n\nexport const EDITSUCCESS = 'editsuccess'\nexport type EDITSUCCESS = typeof EDITSUCCESS\n\nexport const EDITERROR = 'editerror'\nexport type EDITERROR = typeof EDITERROR\n\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/Paging.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/api/index.ts",["482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"// 登录模块\nexport const LoginApi = '/login'\nexport type LoginApi = typeof LoginApi\n\n// 员工模块\nexport const STAFFLIST = '/admin/staff'\nexport type STAFFLIST = typeof STAFFLIST\n\nexport const STAFFADD = '/admin/staff/add'\nexport type STAFFADD = typeof STAFFADD\n\nexport const DELSTAFF_URL = '/admin/staff'\nexport type DELSTAFF_URL = typeof DELSTAFF_URL\n\nexport const EDITSTAFF_URL = '/admin/staff/edit'\nexport type EDITSTAFF_URL = typeof EDITSTAFF_URL\n\n// 菜品模块\nexport const DISHLIST = '/admin/dish'\nexport type DISHLIST = typeof DISHLIST\n\nexport const CATELIST_URL = '/admin/category'\nexport type CATELIST_URL = typeof CATELIST_URL\n\nexport const ADDDISH_URL = '/admin/dish/add'\nexport type ADDDISH_URL = typeof ADDDISH_URL\n\nexport const DELDISH_URL = '/admin/dish/del'\nexport type DELDISH_URL = typeof DELDISH_URL\n\nexport const EDITDISH_URL = '/admin/dish/edit'\nexport type EDITDISH_URL = typeof EDITDISH_URL\n\n// 分类模块\nexport const GETCATELIST_URL = '/admin/category'\nexport type GETCATELIST_URL = typeof GETCATELIST_URL\n\nexport const ADDCATELIST_URL = '/admin/category/add'\nexport type ADDCATELIST_URL = typeof ADDCATELIST_URL\n\nexport const EDITCATE_URL = '/admin/category/edit'\nexport type EDITCATE_URL = typeof EDITCATE_URL\n\nexport const DELCATE_URL = '/admin/category/del'\nexport type DELCATE_URL = typeof DELCATE_URL\n\n// 会员分类模块\nexport const CUSCATELIST_URL = '/admin/customer/cate'\nexport type CUSCATELIST_URL = typeof CUSCATELIST_URL\n\nexport const CUSCATEEDIT_URL = '/admin/customer/cate/edit'\nexport type CUSCATEEDIT_URL = typeof CUSCATEEDIT_URL\n\nexport const CUSCATEDEL_URL = '/admin/customer/cate/del'\nexport type CUSCATEDEL_URL = typeof CUSCATEDEL_URL\n\nexport const CUSCATEADD_URL = '/admin/customer/cate/add'\nexport type CUSCATEADD_URL = typeof CUSCATEADD_URL\n\n// 会员列表模块\nexport const CUSLIST_URL = '/admin/customer'\nexport type CUSLIST_URL = typeof CUSLIST_URL\n\nexport const CUSEDIT_URL = '/admin/customer/edit'\nexport type CUSEDIT_URL = typeof CUSEDIT_URL\n\nexport const CUSDEL_URL = '/admin/customer/del'\nexport type CUSDEL_URL = typeof CUSDEL_URL\n\nexport const CUSADD_URL = '/admin/customer/add'\nexport type CUSADD_URL = typeof CUSADD_URL\n\n// 订单列表模块\nexport const ORDERLIST_URL = '/admin/order'\nexport type ORDERLIST_URL = typeof ORDERLIST_URL\n\nexport const ORDEREDIT_URL = '/admin/order/edit'\nexport type ORDEREDIT_URL = typeof ORDEREDIT_URL\n\nexport const ORDERDEL_URL = '/admin/order/del'\nexport type ORDERDEL_URL = typeof ORDERDEL_URL\n\nexport const ORDERADD_URL = '/admin/order/add'\nexport type ORDERADD_URL = typeof ORDERADD_URL\n\n\n// 看板\nexport const DASHBOARD_URL = '/admin/dashboard'\nexport type DASHBOARD_URL = typeof DASHBOARD_URL\n\n//密码\nexport const PWD_URL = '/admin/staff/pwd'\nexport type PWD_URL = typeof PWD_URL\n\n//设置\nexport const QR_URL = '/admin/qrcode'\nexport type QR_URL = typeof QR_URL\n\n// 图片上传地址\nexport const UPPIC_URL = 'http://localhost:8300/upload'\nexport type UPPIC_URL = typeof UPPIC_URL\n\n// 服务器端地址\nexport const SERVER_URL = 'http://localhost:8300'\nexport type SERVER_URL = typeof SERVER_URL\n\n\n/** 前台 */\nexport const HOMEDOSH_URL = '/home'\nexport type HOMEDOSH_URL = typeof HOMEDOSH_URL\n\nexport const HOMEDISHCATE_URL = '/home/cate'\nexport type HOMEDISHCATE_URL = typeof HOMEDISHCATE_URL\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/reducer.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/Cate.tsx",["515","516","517","518","519","520","521","522"],"import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Button, Card, ConfigProvider, Form, Input, List, message, Modal, Popconfirm, Space } from \"antd\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport DocumentTitle from \"react-document-title\";\nimport {\n  CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined, SoundOutlined\n} from '@ant-design/icons';\nimport { Dispatch } from \"redux\";\nimport {\n  CUSCATEADD_URL,\n  CUSCATEDEL_URL, CUSCATEEDIT_URL, CUSCATELIST_URL,\n} from \"../../../../common/api\";\nimport { connect } from \"react-redux\";\nimport { CUSCATEADD, CUSCATEDEL, CUSCATEEDIT, GETCUSCATELIST } from \"./action\";\nimport { CateWrap } from './cateWrap-style'\nimport { getStore, setStore } from \"../../../../utils/storage\";\n\n\ninterface OwnProps {\n  [prop: string]: any\n\n  toggleCusCatePage(value?: object): void\n\n  delCusCate(value: string): void,\n\n  addCusCate(value: object): void,\n\n  editCusCate(value: object): void\n\n\n}\n\nconst mapStateToProps = (state: any) => ({\n  list: state.cuscate.list || [],\n  addCcateStatus: state.cuscate.addCcateStatus,\n  delCcateStatus: state.cuscate.delCcateStatus,\n  errorMsgCcate: state.cuscate.errorMsgCcate,\n  editCcateStatus: state.cuscate.editCcateStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delCusCate(value: string) {\n    dispatch({\n      type: CUSCATEDEL,\n      url: CUSCATEDEL_URL,\n      data: value\n    })\n  },\n  addCusCate(value: object) {\n    dispatch({\n      type: CUSCATEADD,\n      url: CUSCATEADD_URL,\n      data: value\n    })\n  },\n  toggleCusCatePage(value: object) {\n    dispatch({\n      type: GETCUSCATELIST,\n      url: CUSCATELIST_URL,\n      data: value\n    })\n  },\n  editCusCate(value: object) {\n    dispatch({\n      type: CUSCATEEDIT,\n      url: CUSCATEEDIT_URL,\n      data: value\n    })\n  }\n})\n\ntype Props = OwnProps;\n\ninterface Cate {\n  name: string,\n  discount: number,\n  _id: string\n}\n\nconst CusCate: FunctionComponent<Props> = (props) => {\n  const [cateList, SetCateList] = useState([])\n  const [visible, setVisible] = useState(false);\n  const [popCateStyle, setPopCateStyle] = useState('')\n  const [editValue, setEditValue] = useState({\n    _id: '',\n    name: '',\n    discount: 0\n  })\n\n  //列表显示\n  const [pageMsg, setPageMsg] = useState({\n    query: '',\n    page: 1,\n    pagesize: 10\n  })\n\n  // 列表数据和事件处理\n  useEffect(() => {\n    props.toggleCusCatePage(pageMsg)\n    console.log(props)\n    const { list } = props\n    const cate_List = list.records\n    SetCateList(cate_List)\n    //数组长度发生变化后 获取数据 渲染列表\n  }, [props.list.total, props.list.page, props.list.size])\n\n  // 表单提交函数 新增和编辑\n  const handleOk = (value: any) => {\n    if (popCateStyle === '新增会员类别') {\n      console.log(value)\n      props.addCusCate(value)\n    } else {\n      console.log(value)\n      value._id = editValue._id\n      props.editCusCate(value)\n    }\n    setVisible(false)\n  };\n\n  // 修改菜品信息\n  const edit_cate = (val: Cate) => {\n    setVisible(true)\n    setPopCateStyle('编辑会员类别')\n    setEditValue({\n      name: val.name,\n      discount: val.discount,\n      _id: val._id\n    })\n  }\n\n  //删除分类\n  const del_cate = (value: Cate) => {\n    const { _id } = value\n    props.delCusCate(_id)\n  }\n\n  // 取消弹出框\n  const handleCancel = () => {\n    // todo 取消弹出框确认\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  // 修改状态后 部分信息改变 通过memo监听list变化 重新渲染页面\n  useMemo(() => {\n    const { list } = props\n    const catelist = list.records\n    SetCateList(catelist)\n  }, [props.list])\n\n\n  // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n  useEffect(() => {\n    const { errorMsgCcate, addCcateStatus, delCcateStatus, editCcateStatus } = props\n    const astatus = getStore('addCcateStatus')\n    const dstatus = getStore('delCcateStatus')\n    const estatus = getStore('editCcateStatus')\n    //添加\n    if (astatus == addCcateStatus) {\n    } else {\n      setStore('addCcateStatus', addCcateStatus)\n      if (addCcateStatus < 1) message.success('添加分类成功！')\n      else if (errorMsgCcate && errorMsgCcate.includes('存在')) message.warning('此分类已存在')\n    }\n    //删除\n    if (dstatus == delCcateStatus) {\n    } else {\n      setStore('delCcateStatus', delCcateStatus)\n      if (delCcateStatus < 1) message.success('删除分类成功！')\n    }\n    //修改\n    if (estatus == editCcateStatus) {\n    } else {\n      setStore('editCcateStatus', editCcateStatus)\n      if (editCcateStatus < 1) message.success('分类修改成功！')\n    }\n  }, [props.addCcateStatus, props.delCcateStatus, props.editCcateStatus])\n\n  return (\n      <DocumentTitle title=\"会员 > 类别\">\n        <ConfigProvider locale={zhCN}>\n          <Card title=\"会员类别\">\n            <List\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={cateList}\n                renderItem={(item: any) => (\n                    <List.Item>\n                      <CateWrap>\n                        <Card\n                            key={item.name}\n                            className='card'\n                            style={{ position: \"relative\" }}\n                        >\n                          <div style={{ position: \"absolute\", right: 8, top: 8 }}>\n                            <EditOutlined\n                                key=\"edit\"\n                                style={{ paddingRight: 4 }}\n                                onClick={() => {\n                                  edit_cate(item)\n                                }}\n                            />\n                            {\n                              <Popconfirm\n                                  title=\"确定要删除此会员分类吗？\"\n                                  placement=\"right\"\n                                  okText=\"确定\"\n                                  cancelText=\"取消\"\n                                  onConfirm={() => {\n                                    del_cate(item)\n                                  }}\n                              >\n                                <CloseOutlined key=\"del\"/>\n                              </Popconfirm>\n                            }\n                          </div>\n                          <div style={{ marginTop: -14, fontWeight: 600 }}>{item?.name}</div>\n                          <div style={{ textAlign: \"center\", paddingTop: '8%' }}>\n                            <div style={{ color: \"red\" }}>{item?.discount}折</div>\n                          </div>\n                        </Card>\n                      </CateWrap>\n                    </List.Item>\n                )}\n            />\n            <CateWrap>\n              <Card onClick={() => {\n                setVisible(true)\n                setPopCateStyle('新增会员类别')\n              }} style={{ width: '24%', height: 120, display: \"inline-block\" }}>\n                <div className='plus'><PlusOutlined/></div>\n              </Card>\n            </CateWrap>\n            <Modal\n                title={popCateStyle}\n                visible={visible}\n                onCancel={handleCancel}\n                destroyOnClose\n                footer={null}\n            >\n              <Form onFinish={handleOk}>\n                {\n                  popCateStyle === '新增会员类别' &&\n                  <Form.Item name=\"name\" rules={[\n                    {\n                      required: true,\n                      message: '请输入分类',\n                    },\n                  ]}>\n                    <Input autoFocus={true}\n                           prefix={<EditOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入类别名称\"/>\n                  </Form.Item>\n                }\n                {\n                  popCateStyle === '编辑会员类别' &&\n                  <Form.Item initialValue={editValue.name} name=\"name\" rules={[\n                    {\n                      required: true,\n                      message: '请输入分类',\n                    },\n                  ]}>\n                    <Input autoFocus={true}\n                           prefix={<EditOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入类别名称\"/>\n                  </Form.Item>\n                }\n\n                {\n                  popCateStyle === '新增会员类别' &&\n                  <Form.Item name=\"discount\">\n                    <Input placeholder='请输入会员折扣'\n                           type={\"number\"}\n                           min={1} max={100}\n                           prefix={<SoundOutlined className=\"site-form-item-icon\"/>}/>\n                  </Form.Item>\n                }\n                {\n                  popCateStyle === '编辑会员类别' &&\n                  <Form.Item initialValue={editValue.discount} name=\"discount\">\n                    <Input placeholder='请输入会员折扣'\n                           type={\"number\"}\n                           min={1} max={100}\n                           prefix={<SoundOutlined className=\"site-form-item-icon\"/>}/>\n                  </Form.Item>\n                }\n                <span>说明：8.5折，请输入85</span>\n                <Form.Item>\n                  <Space style={{ float: \"right\", margin: '20px 0 -20px 0' }}>\n                    <Button type=\"default\" onClick={handleCancel}>取消</Button>\n                    {\n                      popCateStyle === '新增会员类别' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">添加</Button>\n                    }\n                    {\n                      popCateStyle === '编辑会员类别' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">提交</Button>\n                    }\n                  </Space>\n                </Form.Item>\n              </Form>\n            </Modal>\n          </Card>\n        </ConfigProvider>\n      </DocumentTitle>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CusCate);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/action.ts",["523","524","525","526","527","528","529","530","531","532","533","534"],"export const GETCUSCATELISTERR = 'getcuscatelist'\nexport type GETCUSCATELISTERR = typeof GETCUSCATELISTERR\n\nexport const GETCUSCATELIST = 'getcuscatelist'\nexport type GETCUSCATELIST = typeof GETCUSCATELIST\n\nexport const GETCUSCATELISTSUC = 'getcuscatelistsuc'\nexport type GETCUSCATELISTSUC = typeof GETCUSCATELISTSUC\n\n\nexport const CUSCATEEDIT = 'cuscateedit'\nexport type CUSCATEEDIT = typeof CUSCATEEDIT\n\nexport const CUSCATEEDITSUC = 'cuscateeditsuc'\nexport type CUSCATEEDITSUC = typeof CUSCATEEDITSUC\n\nexport const CUSCATEEDITERR = 'cuscateediterr'\nexport type CUSCATEEDITERR = typeof CUSCATEEDITERR\n\n\nexport const CUSCATEDEL = 'cuscatedel'\nexport type CUSCATEDEL = typeof CUSCATEDEL\n\nexport const CUSCATEDELSUC = 'cuscatedelsuc'\nexport type CUSCATEDELSUC = typeof CUSCATEDELSUC\n\nexport const CUSCATEDELERR = 'cuscatedelerr'\nexport type CUSCATEDELERR = typeof CUSCATEDELERR\n\n\nexport const CUSCATEADD = 'cuscateadd'\nexport type CUSCATEADD = typeof CUSCATEADD\n\nexport const CUSCATEADDSUC = 'cuscateaddsuc'\nexport type CUSCATEADDSUC = typeof CUSCATEADDSUC\n\nexport const CUSCATEADDERR = 'cuscateadderr'\nexport type CUSCATEADDERR = typeof CUSCATEADDERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/cate/cateWrap-style.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/CusList.tsx",["535","536","537","538","539","540","541","542","543","544","545","546"],"import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport {\n  Button,\n  Card,\n  ConfigProvider,\n  Form,\n  Input,\n  message,\n  Modal,\n  Popconfirm,\n  Select,\n  Space,\n  Table,\n} from \"antd\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport Paging from \"../../../../components/Paging\";\nimport DocumentTitle from \"react-document-title\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Dispatch } from \"redux\";\nimport {\n  CUSADD_URL,\n  CUSDEL_URL, CUSEDIT_URL,\n  CUSLIST_URL,\n} from \"../../../../common/api\";\nimport { connect } from \"react-redux\";\nimport { CUSADD, CUSDEL, CUSEDIT, GETCUSLIST } from \"./action\";\nimport { getStore, setStore } from \"../../../../utils/storage\";\nimport TableCheckBox from \"../../../../components/TableCheckBox\";\n\nconst { Option } = Select;\n\ninterface OwnProps {\n  [prop: string]: any\n\n  toggleCusPage(value?: object): void\n\n  delCus(value: string): void,\n\n  addCus(value: object): void,\n\n  editCus(value: object): void\n}\n\ntype Props = OwnProps;\n\ninterface Cus {\n  _id: string,\n  name: string,\n  telephone: number,\n  xftimes: number,\n  xftotal: number,\n  status: number,\n  level: {\n    name: string,\n    discount: number,\n    _id: string\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  list: state.cus.list || [],\n  cateList: state.cus.cateList,\n  addCStatus: state.cus.addCStatus,\n  delCStatus: state.cus.delCStatus,\n  errorMsgC: state.cus.errorMsgC,\n  editCStatus: state.cus.editCStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delCus(value: string) {\n    dispatch({\n      type: CUSDEL,\n      url: CUSDEL_URL,\n      data: value\n    })\n  },\n  addCus(value: object) {\n    dispatch({\n      type: CUSADD,\n      url: CUSADD_URL,\n      data: value\n    })\n  },\n  toggleCusPage(value: object) {\n    dispatch({\n      type: GETCUSLIST,\n      url: CUSLIST_URL,\n      data: value\n    })\n  },\n  editCus(value: object) {\n    dispatch({\n      type: CUSEDIT,\n      url: CUSEDIT_URL,\n      data: value\n    })\n  }\n})\n\nconst CusList: FunctionComponent<Props> = (props) => {\n\n      const [cusList, setCusList] = useState([])\n      const [visible, setVisible] = useState(false);\n      const [popCusStyle, setPopCusStyle] = useState('')\n      const [editValue, setEditValue] = useState({\n        _id: '',\n        name: '',\n        level: '',\n        status: 0,\n        telephone: 0\n      })\n\n      // 表格列\n      const columns: ColumnsType<Cus> = [\n        {\n          title: '姓名',\n          dataIndex: 'name',\n          key: 'name',\n        },\n        {\n          title: '会员类别',\n          key: 'level',\n          dataIndex: 'level',\n          render: (level: any) => <>{level?.name}</>,\n        },\n        {\n          title: '折扣',\n          key: 'level',\n          dataIndex: 'level',\n          render: (level: any) => <>{level?.discount}</>,\n        },\n        {\n          title: '消费次数',\n          key: 'xftimes',\n          dataIndex: 'xftimes',\n        },\n        {\n          title: '消费金额',\n          key: 'xftotal',\n          dataIndex: 'xftotal',\n        },\n        {\n          title: '手机号码',\n          key: 'telephone',\n          dataIndex: 'telephone',\n        },\n        {\n          title: '状态',\n          key: 'status',\n          dataIndex: 'status',\n          render: (status: any) => (\n              <>\n                {\n                  status === 1 && '正常'\n                }\n                {\n                  status === 0 && '挂失'\n                }\n                {\n                  status === -1 && '停用'\n                }\n              </>\n          ),\n        },\n        /*{\n          title: '操作',\n          key: '_id',\n          render: (text, records, index) => (\n              <Space>\n                <Button type=\"primary\" onClick={() => {\n                  edit_cus(records)\n                }} shape=\"circle\" icon={<EditOutlined/>} size={\"small\"}/>\n                {\n                  <Popconfirm\n                      title=\"确定要删除此会员吗？\"\n                      placement=\"top\"\n                      okText=\"确定\"\n                      cancelText=\"取消\"\n                      onConfirm={() => {\n                        del_cus(records)\n                      }}\n                  >\n                    <Button type=\"primary\" danger shape=\"circle\" icon={<DeleteOutlined/>} size={\"small\"}/>\n                  </Popconfirm>\n                }\n              </Space>\n          ),\n        },*/\n      ];\n\n      // 取消弹出框\n      const handleCancel = () => {\n        console.log('Clicked cancel button');\n        setVisible(false);\n      };\n\n      // 修改信息\n      const edit_cus = (records: Cus) => {\n        console.log(records)\n        setVisible(true)\n        setPopCusStyle('编辑会员')\n        setEditValue({\n          _id: records._id,\n          name: records.name,\n          level: records.level._id,\n          telephone: records.telephone,\n          status: records.status\n        })\n      }\n\n      // 删除触发\n      const del_cus = (value: Cus) => {\n        const { _id } = value\n        props.delCus(_id)\n      }\n\n\n      // 表单提交函数 新增和编辑\n      const handleOk = (value: any) => {\n        if (popCusStyle === '新增会员') {\n          props.addCus(value)\n          setVisible(false)\n        } else {\n          value._id = editValue._id\n          console.log(value)\n          props.editCus(value)\n          setVisible(false)\n        }\n      }\n      //列表显示\n      const [pageMsg, setPageMsg] = useState({\n        query: '',\n        page: 1,\n        pagesize: 10\n      })\n      useEffect(() => {\n        props.toggleCusPage(pageMsg)\n        const { list } = props\n        const cus_List = list.records\n        setCusList(cus_List)\n        //数组长度发生变化后 获取数据 渲染列表\n      }, [props.list.total, props.list.page, props.list.size])\n\n      // 修改状态后 部分信息改变 通过memo监听list变化 重新渲染页面\n      useMemo(() => {\n        const { list } = props\n        const cusList = list.records\n        setCusList(cusList)\n      }, [props.list])\n\n      // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n      useEffect(() => {\n            const { errorMsgC, addCStatus, delCStatus, editCStatus } = props\n            const astatus = getStore('addCStatus')\n            const dstatus = getStore('delCStatus')\n            const estatus = getStore('editCStatus')\n            //添加\n            if (astatus == addCStatus) {\n            } else {\n              setStore('addCStatus', addCStatus)\n              if (addCStatus < 1) message.success('会员添加成功！')\n              else if (errorMsgC && errorMsgC.includes('存在')) message.warning('此会员账号已存在')\n            }\n            //删除\n            if (dstatus == delCStatus) {\n            } else {\n              setStore('delCStatus', delCStatus)\n              if (delCStatus < 1) message.success('会员删除成功！')\n            }\n            //修改\n            if (estatus == editCStatus) {\n            } else {\n              setStore('editCStatus', editCStatus)\n              if (editCStatus < 1) message.success('资料修改成功！')\n            }\n          }, [props.addCStatus, props.delCStatus, props.editCStatus]\n      )\n\n//选中函数\n      const [selectValue, SetSelectValue] = useState([])\n      const [barVisible, setBarVisible] = useState('')\n      const rowSelection = {\n        onChange: (selectedRowKeys: any, selectedRows: any) => {\n          SetSelectValue(selectedRows)\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        },\n        onSelectAll: (selected: any, selectedRows: any, changeRows: any) => {\n          console.log(selected, selectedRows, changeRows);\n        },\n      };\n      //异步函数捕捉更新状态\n      useEffect(() => {\n        SetSelectValue(selectValue)\n        if (selectValue.length === 0) setBarVisible('none')\n        else setBarVisible('')\n      }, [selectValue])\n      //捕捉异步pageMsg\n      useEffect(() => {\n        setPageMsg(pageMsg)\n        props.toggleCusPage(pageMsg)\n      }, [pageMsg])\n      // 搜索后列表刷新\n      useEffect(() => {\n        const { list } = props\n        const order_List = list.records\n        setCusList(order_List)\n      }, [props.list.records])\n\n      //删除\n      function delSelected() {\n        // @ts-ignore\n        const delAry = selectValue.map(val => val._id)\n        // 把多个删除项处理为字符串格式 传给后端处理\n        const delIds = delAry.join('-')\n        props.delCus(delIds)\n        setBarVisible('none')\n      }\n\n      return (\n          <DocumentTitle title=\"会员 > 资料\">\n            <ConfigProvider locale={zhCN}>\n              <Card title=\"会员档案\"\n                    extra={\n                      <Button type=\"primary\" onClick={() => {\n                        setVisible(true)\n                        setPopCusStyle('新增会员')\n                      }}>新增</Button>\n                    }\n                    style={{ width: '100%' }}\n              >\n                <TableCheckBox\n                    delSelected={delSelected}\n                    barVisible={barVisible}\n                    editBtn={() => {\n                      edit_cus(selectValue[0])\n                    }}\n                    Search={(value: string) => {\n                      setPageMsg({\n                        page: 1,\n                        pagesize: 10,\n                        query: value\n                      })\n                    }}\n                    title='手机号码'\n                />\n\n                {\n                  cusList &&\n                  <Table\n                      rowKey='_id'\n                      bordered\n                      columns={columns}\n                      dataSource={cusList}\n                      pagination={false}\n                      rowSelection={rowSelection}\n                  />\n                }\n                {\n                  cusList &&\n                  <Paging page={props.list.page} total={props.list.total} fun={(page = 1, pageSize = 10): any => {\n                    props.toggleCusPage(pageMsg)\n                    setPageMsg({\n                      query: pageMsg.query,\n                      page: page,\n                      pagesize: pageSize\n                    })\n                  }}/>\n                }\n                <Modal\n                    title={popCusStyle}\n                    visible={visible}\n                    onCancel={handleCancel}\n                    destroyOnClose\n                    footer={null}\n                >\n                  <Form onFinish={handleOk}>\n                    {\n                      popCusStyle === '新增会员' &&\n                      <Form.Item label={'姓名'} name=\"name\" rules={[\n                        {\n                          required: true,\n                          message: '请输入姓名',\n                        },\n                      ]}>\n                        <Input autoFocus={true} placeholder=\"姓名\"/>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '编辑会员' &&\n                      <Form.Item initialValue={editValue.name} label={'姓名'} name=\"name\" rules={[\n                        {\n                          required: true,\n                          message: '请输入姓名',\n                        },\n                      ]}>\n                        <Input autoFocus={true} placeholder=\"姓名\"/>\n                      </Form.Item>\n                    }\n\n                    {\n                      popCusStyle === '新增会员' &&\n                      <Form.Item label={'手机'} name=\"telephone\" rules={[\n                        {\n                          required: true,\n                          message: '请输入手机号码',\n                        },\n                      ]}>\n                        <Input type={\"number\"} placeholder=\"手机号码\"/>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '编辑会员' &&\n                      <Form.Item initialValue={editValue.telephone} label={'手机'} name=\"telephone\" rules={[\n                        {\n                          required: true,\n                          message: '请输入手机号码',\n                        },\n                      ]}>\n                        <Input type={\"number\"} placeholder=\"手机号码\"/>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '新增会员' &&\n                      <Form.Item\n                          name=\"level\"\n                          label=\"分类\"\n                          rules={[{ required: true, message: '请选择分类' }]}\n                      >\n                        <Select placeholder=\"会员类别\">\n                          {\n                            props.cateList &&\n                            props.cateList.map((value: any) => (\n                                <Option value={value._id}\n                                        key={value._id}>\n                                  {value.name}\n                                </Option>\n                            ))\n                          }\n                        </Select>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '编辑会员' &&\n                      <Form.Item\n                          initialValue={editValue.level}\n                          name=\"level\"\n                          label=\"分类\"\n                          rules={[{ required: true, message: '请选择分类' }]}\n                      >\n                        <Select placeholder=\"会员类别\">\n                          {\n                            props.cateList &&\n                            props.cateList.map((value: any) => (\n                                <Option value={value._id}\n                                        key={value._id}>\n                                  {value.name}\n                                </Option>\n                            ))\n                          }\n                        </Select>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '新增会员' &&\n                      <Form.Item initialValue={1} label={'状态'} style={{ marginLeft: 10 }} name=\"status\">\n                        <Select placeholder='状态'>\n                          <Option value={1}>正常</Option>\n                          <Option value={0}>挂失</Option>\n                          <Option value={-1}>停用</Option>\n                        </Select>\n                      </Form.Item>\n                    }\n                    {\n                      popCusStyle === '编辑会员' &&\n                      <Form.Item initialValue={editValue.status} label={'状态'} style={{ marginLeft: 10 }} name=\"status\">\n                        <Select placeholder='状态'>\n                          <Option value={1}>正常</Option>\n                          <Option value={0}>挂失</Option>\n                          <Option value={-1}>停用</Option>\n                        </Select>\n                      </Form.Item>\n                    }\n                    <Form.Item style={{ marginBottom: 4 }}>\n                      <Space style={{ float: \"right\" }}>\n                        <Button type=\"default\" onClick={handleCancel}>取消</Button>\n                        {\n                          popCusStyle === '新增会员' &&\n                          <Button type=\"primary\" htmlType=\"submit\">添加</Button>\n                        }\n                        {\n                          popCusStyle === '编辑会员' &&\n                          <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        }\n                      </Space>\n                    </Form.Item>\n                  </Form>\n                </Modal>\n              </Card>\n            </ConfigProvider>\n          </DocumentTitle>\n      );\n    }\n;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CusList);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/reducer.ts",["547","548"],"import {\n  CUSADDERR,\n  CUSADDSUC, CUSDELERR, CUSDELSUC, CUSEDITERR, CUSEDITSUC, GETCUSCATESUC,\n  GETCUSLIST, GETCUSLISTERR,\n  GETCUSLISTSUC\n\n} from './action'\n\ntype state = { list: object[], addCStatus: number, errorMsgC: string, delCStatus: number }\nconst defaultState = {\n  list: [],\n  cateList: [],\n  addCStatus: 99999, //添加用户初始状态\n  errorMsgC: '',\n  delCStatus: 99999,\n  editCStatus: 99999\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state: state = defaultState, action: any) => {\n  switch (action.type) {\n    case GETCUSLISTSUC:\n      return {\n        ...state,\n        list: action.data.customer\n      }\n    case GETCUSCATESUC:\n      return {\n        ...state,\n        cateList: action.data.acuscate.records\n      }\n      // case GETCUSLISTERR:\n      //   return {\n      //     ...state,\n      //     List: action.data.gory.records\n      //   }\n    case CUSDELSUC:\n      return {\n        ...state,\n        delCStatus: Math.random()\n      }\n    case CUSDELERR: {\n      return {\n        ...state,\n        delCStatus: Math.random() * 10\n      }\n    }\n    case CUSADDSUC:\n      return {\n        ...state,\n        addCStatus: Math.random()\n      }\n    case CUSADDERR: {\n      return {\n        ...state,\n        addCStatus: Math.random() * 10,\n        errorMsgC: action.data.message\n      }\n    }\n    case CUSEDITSUC: {\n      return {\n        ...state,\n        editCStatus: Math.random()\n      }\n    }\n    case CUSEDITERR: {\n      return {\n        ...state,\n        editCStatus: Math.random() * 10\n      }\n    }\n    default:\n      return { ...state, action }\n  }\n}\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/sagas.ts",["549"],"import { put } from 'redux-saga/effects'\nimport * as types from './action'\nimport { del, get, post, puts } from '../../../../utils/http'\nimport { CUSCATELIST_URL, CUSLIST_URL } from \"../../../../common/api\";\n\n\nfunction* delCus(action: any) {\n  try {\n    console.log('删除saga执行')\n    const result = yield del(`${action.url}/${action.data}`)\n    console.log(result)\n    if (result.status === 200) {\n      console.log('发送删除成功saga')\n      yield put({ type: types.CUSDELSUC, data: result })\n      console.log('删除成功')\n      yield put({ type: types.GETCUSLIST, url: CUSLIST_URL })\n    } else {\n      yield put({ type: types.CUSDELERR, data: result })\n    }\n  } catch (e) {\n    // yield put({type: types.NETERROR})\n  }\n}\n\nfunction* addCus(action: any) {\n  try {\n    console.log('新增saga执行')\n    const result = yield post({\n      url: action.url\n    }, action.data)\n    console.log(result)\n    if (result.status && result.status !== -7) {\n      yield put({ type: types.CUSADDSUC, data: result })\n      console.log('添加成功')\n      yield put({ type: types.GETCUSLIST, url: CUSLIST_URL })\n      console.log('发送了获取列表的请求')\n    } else {\n      console.log('发送了添加错误的action')\n      yield put({ type: types.CUSADDERR, data: result })\n    }\n  } catch (e) {\n    // todo 网络错误提示\n    // yield put({type: types.NETERROR})\n  }\n}\n\nfunction* toggleCusPage(action: any) {\n  try {\n    console.log('切换，列表页面saga执行')\n    const result = yield get(action.url, action.data)\n    // const cate_result = yield get(CUSCATELIST_URL)\n    console.log(result)\n    //console.log(cate_result)\n    if (result.meta.status === 200) {\n      yield put({ type: types.GETCUSLISTSUC, data: result })\n    } else {\n      // yield put({type: types.GETFAILED, data: result})\n    }\n  } catch (e) {\n    // yield put({type: types.NETERROR})\n  }\n}\n\nfunction* editCus(action: any) {\n  try {\n    console.log('修改saga执行')\n    const result = yield puts({\n      url: action.url\n    }, action.data)\n    if (result.meta.status === 200) {\n      console.log('修改成功')\n      yield put({ type: types.CUSEDITSUC, data: result })\n      yield put({ type: types.GETCUSLIST, url: CUSLIST_URL })\n      console.log('发送了获取列表的请求')\n    }\n  } catch (e) {\n\n  }\n}\n\nexport { types, editCus, addCus, toggleCusPage, delCus };\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/customer/list/action.ts",["550","551","552","553","554","555","556","557","558","559","560","561"],"export const GETCUSLISTERR = 'getcuslist'\nexport type GETCUSLISTERR = typeof GETCUSLISTERR\n\nexport const GETCUSLIST = 'getcuslist'\nexport type GETCUSLIST = typeof GETCUSLIST\n\nexport const GETCUSLISTSUC = 'getcuslistsuc'\nexport type GETCUSLISTSUC = typeof GETCUSLISTSUC\n\nexport const GETCUSCATESUC = 'getcuscatesuc'\nexport type GETCUSCATESUC = typeof GETCUSCATESUC\n\n\nexport const CUSEDIT = 'cusedit'\nexport type CUSEDIT = typeof CUSEDIT\n\nexport const CUSEDITSUC = 'cuseditsuc'\nexport type CUSEDITSUC = typeof CUSEDITSUC\n\nexport const CUSEDITERR = 'cusediterr'\nexport type CUSEDITERR = typeof CUSEDITERR\n\n\nexport const CUSDEL = 'cusdel'\nexport type CUSDEL = typeof CUSDEL\n\nexport const CUSDELSUC = 'cusdelsuc'\nexport type CUSDELSUC = typeof CUSDELSUC\n\nexport const CUSDELERR = 'cusdelerr'\nexport type CUSDELERR = typeof CUSDELERR\n\n\nexport const CUSADD = 'cusadd'\nexport type CUSADD = typeof CUSADD\n\nexport const CUSADDSUC = 'cusaddsuc'\nexport type CUSADDSUC = typeof CUSADDSUC\n\nexport const CUSADDERR = 'cusadderr'\nexport type CUSADDERR = typeof CUSADDERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/index.ts",["562","563"],"import Order from './Order'\nimport reducers from './reducers'\nimport * as sagas from './sagas'\n\nexport { Order, reducers, sagas }\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/Order.tsx",["564","565","566","567","568","569","570"],"import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport DocumentTitle from \"react-document-title\";\nimport { Card, ConfigProvider, Descriptions, Drawer, message, Table } from \"antd\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport Paging from \"../../../components/Paging\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { GETORDERLIST, ORDERADD, ORDERDEL, ORDEREDIT } from \"./actions\";\nimport { ORDERADD_URL, ORDERDEL_URL, ORDEREDIT_URL, ORDERLIST_URL } from \"../../../common/api\";\nimport moment from 'moment';\nimport TableCheckBox from \"../../../components/TableCheckBox\";\nimport { getStore, setStore } from \"../../../utils/storage\";\n\ninterface OwnProps {\n  [prop: string]: any\n\n  toggleOrderPage(value?: object): void\n\n  delOrder(value: string): void,\n\n  addOrder(value: object): void,\n\n  editOrder(value: object): void\n}\n\ntype Props = OwnProps;\n\ninterface Orders {\n  _id: string,\n  orderid: number,\n  tableid: number,\n  waiter: any,\n  orderdetail: any,\n  paid: number,\n  receivable: number,\n  level: any,\n  finishtime: string\n}\n\n\nconst mapStateToProps = (state: any) => ({\n  list: state.orders.list || [],\n  addOStatus: state.orders.addOStatus,\n  delOStatus: state.orders.delOStatus,\n  errorMsgO: state.orders.errorMsgO,\n  editOStatus: state.orders.editOStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delOrder(value: string) {\n    dispatch({\n      type: ORDERDEL,\n      url: ORDERDEL_URL,\n      data: value\n    })\n  },\n  addOrder(value: object) {\n    dispatch({\n      type: ORDERADD,\n      url: ORDERADD_URL,\n      data: value\n    })\n  },\n  toggleOrderPage(value: object) {\n    dispatch({\n      type: GETORDERLIST,\n      url: ORDERLIST_URL,\n      data: value\n    })\n  },\n  editOrder(value: object) {\n    dispatch({\n      type: ORDEREDIT,\n      url: ORDEREDIT_URL,\n      data: value\n    })\n  }\n})\n\nconst Order: FunctionComponent<Props> = (props) => {\n  const [barVisible, setBarVisible] = useState('')\n  const [orderList, setOrderList] = useState([])\n  const [selectValue, SetSelectValue] = useState([])\n  const [drawVisible, setDrawVisible] = useState(false)\n  const [drawValue, setDrawValue] = useState({\n    _id: undefined,\n    orderid: undefined,\n    paid: undefined,\n    cus: {\n      name: undefined,\n    },\n    begintime: undefined,\n    finishtime: undefined,\n    orderdetail: [{\n      name: undefined,\n      num: undefined\n    }],\n    tableid: undefined\n  })\n\n  // 表格列\n  const columns: ColumnsType<Orders> = [\n    // {\n    //   title: '序号',\n    //   key: 'orderid',\n    //   render: ((value, record, index) => <>{index + 1}</>)\n    // },\n    {\n      title: '订单号',\n      key: 'orderid',\n      render: (value => <a onClick={() => {\n        showDrawer(value)\n      }}>{value.orderid}\n      </a>)\n    },\n    {\n      title: '会员等级',\n      key: 'level',\n      render: (value, records, index) => (\n          <>\n            {records?.level?.name}\n          </>\n      ),\n    },\n    {\n      title: '应收(元)',\n      key: 'orderdetail',\n      render: (value, records, index) => (\n          <>\n            {records?.receivable}\n          </>\n      ),\n    },\n    {\n      title: '实收(元)',\n      key: 'orderdetail',\n      render: (value, records, index) => (\n          <>\n            {records?.paid}\n          </>\n      ),\n    },\n    {\n      title: '结账时间',\n      dataIndex: 'finishtime',\n      key: 'finishtime',\n      render: ((value, record, index) =>\n              <>\n                {\n                  moment(value).format('YYYY-MM-DD HH:mm:ss')\n                }\n              </>\n      )\n    },\n    {\n      title: '服务员',\n      key: 'waiter',\n      render: (value, records, index) => (\n          <>\n            {records?.waiter?.name}\n          </>\n      ),\n    },\n  ];\n\n  //列表显示\n  const [pageMsg, setPageMsg] = useState({\n    query: '',\n    page: 1,\n    pagesize: 10\n  })\n\n  //列表数据\n  useEffect(() => {\n    props.toggleOrderPage(pageMsg)\n    const { list } = props\n    const order_List = list.records\n    setOrderList(order_List)\n    //数组长度发生变化后 获取数据 渲染列表\n  }, [props.list.total, props.list.page, props.list.size])\n\n  //捕捉异步pageMsg\n  useEffect(() => {\n    setPageMsg(pageMsg)\n    props.toggleOrderPage(pageMsg)\n  }, [pageMsg])\n\n  // 搜索后列表刷新\n  useEffect(() => {\n    const { list } = props\n    const order_List = list.records\n    setOrderList(order_List)\n  }, [props.list.records])\n\n  //删除\n  function delSelected() {\n    // @ts-ignore\n    const delAry = selectValue.map(val => val._id)\n    // 把多个删除项处理为字符串格式 传给后端处理\n    const delIds = delAry.join('-')\n    props.delOrder(delIds)\n    setBarVisible('none')\n  }\n\n  //选中函数\n  const rowSelection = {\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\n      SetSelectValue(selectedRows)\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    onSelectAll: (selected: any, selectedRows: any, changeRows: any) => {\n      console.log(selected, selectedRows, changeRows);\n    },\n  };\n\n  //异步函数捕捉更新状态\n  useEffect(() => {\n    SetSelectValue(selectValue)\n    if (selectValue.length === 0) setBarVisible('none')\n    else setBarVisible('')\n  }, [selectValue])\n\n  const showDrawer = (value: any) => {\n    setDrawValue(value)\n    setDrawVisible(true);\n  };\n  const onClose = () => {\n    setDrawVisible(false);\n  };\n\n  useMemo(() => {\n    console.log(drawValue)\n  }, [drawValue])\n\n  useEffect(() => {\n    console.log(props)\n    const { errorMsgO, addOStatus, delOStatus, editOStatus } = props\n    const aastatus = getStore('addOStatus')\n    const ddstatus = getStore('delOStatus')\n    const eestatus = getStore('editOStatus')\n    //添加\n    if (aastatus == addOStatus) {\n    } else {\n      console.log(props)\n      console.log(errorMsgO)\n      setStore('addOStatus', addOStatus)\n      if (addOStatus < 1) message.success('订单添加成功')\n      else if (errorMsgO && errorMsgO.includes('存在')) message.error('此订单已存在！')\n    }\n    //删除\n    if (ddstatus == delOStatus) {\n    } else {\n      setStore('delOStatus', delOStatus)\n      if (delOStatus < 1) message.success('订单删除成功')\n    }\n    //修改\n    if (eestatus == editOStatus) {\n    } else {\n      setStore('editOStatus', editOStatus)\n      if (editOStatus < 1) message.success('订单修改成功')\n    }\n  }, [props])\n\n\n  //详情页表单列\n  const columnss = [\n    {\n      title: '菜名',\n      key: 'name',\n      dataIndex: 'name',\n    },\n    {\n      title: '单价(元)',\n      key: 'perprice',\n      dataIndex: 'perprice',\n    },\n    {\n      title: '数量',\n      key: 'num',\n      dataIndex: 'num',\n    },\n  ];\n\n  //详情页多选选中\n  const rowSelections = {\n    onChange: (selectedRowKeys: React.Key[], selectedRows: any) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n  };\n\n  return (\n      <DocumentTitle title=\"订单管理\">\n        <ConfigProvider locale={zhCN}>\n          <Card title=\"订单列表\" style={{ position: \"relative\", width: '100%' }}>\n            <TableCheckBox\n                delSelected={delSelected}\n                barVisible={barVisible}\n                Search={(value: string) => {\n                  setPageMsg({\n                    page: 1,\n                    pagesize: 10,\n                    query: value\n                  })\n                }}\n                title='订单号'/>\n\n            {\n              orderList && <Table\n                  rowKey='_id'\n                  bordered\n                  columns={columns}\n                  dataSource={orderList}\n                  pagination={false}\n                  rowSelection={rowSelection}\n              />\n            }\n            {\n              orderList &&\n              <Paging page={props.list.page} total={props.list.total} fun={(page = 1, pageSize = 10): any => {\n                props.toggleOrderPage(pageMsg)\n                setPageMsg({\n                  query: pageMsg.query,\n                  page: page,\n                  pagesize: pageSize\n                })\n              }}/>\n            }\n          </Card>\n\n          <Drawer\n              title='订单详情'\n              width={777}\n              placement=\"right\"\n              closable={false}\n              onClose={onClose}\n              visible={drawVisible}\n          >\n            <Descriptions title={`订单号：${drawValue.orderid}`}>\n              <Descriptions.Item label=\"桌位号\">{drawValue.tableid} 号</Descriptions.Item>\n              {\n                drawValue.cus.name &&\n                <Descriptions.Item label=\"会员姓名\">{drawValue.cus.name}</Descriptions.Item>\n              }\n              <Descriptions.Item label=\"消费金额\">{drawValue.paid} 元</Descriptions.Item>\n              <Descriptions.Item label=\"消费时长\">\n                {moment(`${drawValue.finishtime}`).diff(moment(`${drawValue.begintime}`), 'hours')}时\n                {moment(`${drawValue.finishtime}`).diff(moment(`${drawValue.begintime}`), 'minutes')}分\n              </Descriptions.Item>\n              <Descriptions.Item\n                  label=\"结账时间\">{moment(drawValue.finishtime).format('YYYY-MM-DD HH:mm:ss')}</Descriptions.Item>\n            </Descriptions>\n\n            <h4 style={{ marginTop: 20 }}>菜单详情：</h4>\n            <Table\n                columns={columnss}\n                rowKey='_id'\n                bordered\n                rowSelection={rowSelections}\n                dataSource={drawValue.orderdetail}\n                pagination={{ hideOnSinglePage: true }}\n            />\n          </Drawer>\n        </ConfigProvider>\n      </DocumentTitle>\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/order/actions.ts",["571","572","573","574","575","576","577","578","579","580","581","582"],"export const GETORDERLISTERR = 'getORDERlist'\nexport type GETORDERLISTERR = typeof GETORDERLISTERR\n\nexport const GETORDERLIST = 'getORDERlist'\nexport type GETORDERLIST = typeof GETORDERLIST\n\nexport const GETORDERLISTSUC = 'getORDERlistsuc'\nexport type GETORDERLISTSUC = typeof GETORDERLISTSUC\n\n\nexport const ORDEREDIT = 'ORDERedit'\nexport type ORDEREDIT = typeof ORDEREDIT\n\nexport const ORDEREDITSUC = 'ORDEReditsuc'\nexport type ORDEREDITSUC = typeof ORDEREDITSUC\n\nexport const ORDEREDITERR = 'ORDERediterr'\nexport type ORDEREDITERR = typeof ORDEREDITERR\n\n\nexport const ORDERDEL = 'ORDERdel'\nexport type ORDERDEL = typeof ORDERDEL\n\nexport const ORDERDELSUC = 'ORDERdelsuc'\nexport type ORDERDELSUC = typeof ORDERDELSUC\n\nexport const ORDERDELERR = 'ORDERdelerr'\nexport type ORDERDELERR = typeof ORDERDELERR\n\n\nexport const ORDERADD = 'ORDERadd'\nexport type ORDERADD = typeof ORDERADD\n\nexport const ORDERADDSUC = 'ORDERaddsuc'\nexport type ORDERADDSUC = typeof ORDERADDSUC\n\nexport const ORDERADDERR = 'ORDERadderr'\nexport type ORDERADDERR = typeof ORDERADDERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/TableCheckBox.tsx",["583"],"import React, { FunctionComponent } from 'react';\nimport { Button, Card, Input, Popconfirm } from \"antd\";\n\nconst { Search } = Input;\n\ninterface OwnProps {\n  delSelected: () => any,\n  barVisible: string,\n  title: string,\n  editBtn?: (val: any) => any,\n  editBtnState?: boolean,\n  Search: (value: string, event?: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLInputElement>) => void\n}\n\ntype Props = OwnProps;\n\nconst TableCheckBox: FunctionComponent<Props> = (props) => {\n  // {\n  //   console.log(props)\n  // }\n  return (\n      <div style={{ marginBottom: 10 }}>\n        {\n          props.editBtn &&\n          <Button style={{ display: props.barVisible, marginRight: 10 }}\n                  onClick={props.editBtn}\n                  disabled={props.editBtnState ?? false}\n          >\n            编辑\n          </Button>\n        }\n        <Popconfirm\n            title='确定要删除选中内容吗'\n            placement=\"right\"\n            okText=\"确定\"\n            cancelText=\"取消\"\n            onConfirm={\n              props.delSelected\n            }\n        >\n          <Button danger style={{ display: props.barVisible }}>删除</Button>\n        </Popconfirm>\n        <Search\n            placeholder={`请输入${props.title}`}\n            onSearch={props.Search}\n            allowClear\n            style={{ width: 200, display: props.barVisible === '' ? 'none' : '' }}\n        />\n      </div>\n  )\n};\n\nexport default TableCheckBox;\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/sagas.ts",["584","585","586","587"],"import { put } from 'redux-saga/effects'\nimport * as types from './actions'\nimport { del, get, post, puts } from '../../../utils/http'\nimport { DASHBOARD_URL } from \"../../../common/api\";\n\n\nfunction* getDetail(action: any) {\n  try {\n    console.log('数据看板页面saga执行')\n    const result = yield get(action.url, action.data)\n    console.log(result)\n    //console.log(cate_result)\n    if (result.meta.status === 200) {\n      yield put({ type: types.GETDASHBOARDSUC, data: result })\n      console.log('发送了获取列表的请求')\n      //yield put({ type: types.GETORDERLIST, data: cate_result })\n    } else {\n      // yield put({type: types.GETFAILED, data: result})\n    }\n  } catch (e) {\n    // yield put({type: types.NETERROR})\n  }\n}\n\n\nexport { types, getDetail };\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/Dashboard.tsx",["588","589"],"import React, { FunctionComponent, useEffect, useMemo, useState } from 'react';\nimport { Card, Col, ConfigProvider, Row, Statistic, Tooltip, Radio, Table } from 'antd';\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport DocumentTitle from \"react-document-title\";\nimport { DashWrap } from \"./dashbord-style\";\nimport { ArrowUpOutlined, ArrowDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport LineChart from \"../../../components/LineChart\";\nimport DemoColumn from \"../../../components/ColumnChart\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { GETDASHBOARD } from \"./actions\";\nimport { DASHBOARD_URL } from \"../../../common/api\";\nimport DemoLiquid from \"../../../components/PieChart\";\nimport DemoDualAxes from '../../../components/MixCoulmnLine';\n\ninterface OwnProps {\n  getDetail(): void,\n\n  [prop: string]: any\n\n}\n\ntype Props = OwnProps;\n\nconst mapStateToProps = (state: any) => ({\n  detail: state.dashboard.detail || {},\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  getDetail() {\n    dispatch({\n      type: GETDASHBOARD,\n      url: DASHBOARD_URL,\n    })\n  },\n})\n\nconst Dashboard: FunctionComponent<Props> = (props) => {\n  const [data, SetData] = useState({\n    vip: {\n      vipnum: 0,\n      dayVipActiveNum: 0,\n      weekVipActiveRate: 0\n    },\n    allSold: {\n      allMoney: 0,\n      weekRate: 0,\n      dayRate: 0,\n      dayMoney: 0\n    },\n    allReceive: {\n      allReMoney: 0,\n      reTodayMoney: 0,\n      thisWeekRe: []\n    },\n    orderNum: {\n      todayordernum: 0,\n      totalordernum: 0\n    },\n    SoldModule: {\n      soldModule: undefined,\n      soldModuleDay: undefined\n    },\n    rank: {\n      rankMonth: [],\n      rankWeek: [],\n      rankDay: []\n    }\n  })\n  const [soldMoneyData, setSoldMoneyData] = useState({})\n  const [soldNumData, setSoldNumData] = useState({})\n\n  const columns = [\n    {\n      title: '菜品',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '销量',\n      dataIndex: 'num',\n      key: 'num',\n      align: [\"center\"]\n    },\n  ];\n\n  //销售额切换\n  function SoldMoneyToggle(e: any) {\n    const which = e.target.value\n    const { detail } = props\n    if (which === 'year') setSoldMoneyData(detail?.SoldModule.soldModule)\n    else setSoldMoneyData(detail?.SoldModule?.soldModuleDay)\n  }\n\n  //销售排行切换\n  function SoldNumToggle(e: any) {\n    const which = e.target.value\n    const { detail } = props\n    if (which === 'month') setSoldNumData(detail?.rank?.rankMonth)\n    else if (which === 'week') setSoldNumData(detail?.rank?.rankWeek)\n    else setSoldNumData(detail?.rank?.rankDay)\n  }\n\n  //列表数据\n  useEffect(() => {\n    props.getDetail()\n  }, [])\n\n  useMemo(() => {\n    const { detail } = props\n    SetData(detail)\n    //销售额初始值设为本月\n    setSoldMoneyData(detail?.SoldModule?.soldModuleDay)\n    //销量排行初始值设为今日\n    setSoldNumData(detail?.soldRank?.soldRankDay)\n\n  }, [props.detail])\n\n  // @ts-ignore\n  return (\n      <DocumentTitle title=\"经营状况\">\n        {\n          data &&\n          <ConfigProvider locale={zhCN}>\n            <DashWrap>\n              <div className=\"site-card-wrapper\">\n                <Row gutter={16}>\n                  <Col span={6}>\n                    <Card bordered={false} headStyle={{ borderBottom: 0, minHeight: 0 }}\n                          bodyStyle={{ paddingTop: 20, paddingBottom: 10 }}\n                    >\n                      <div className='rightdot'>\n                        <Tooltip placement=\"top\" title={'指标说明'}>\n                          <ExclamationCircleOutlined/>\n                        </Tooltip>\n                      </div>\n                      <div className='content'>\n                        <Statistic title=\"总销售额\"\n                                   valueStyle={{ fontSize: 30 }}\n                                   value={data?.allSold?.allMoney}\n                                   prefix={'¥'}\n                        />\n                        <div className='num'>\n                          {\n                            data?.allSold?.weekRate !== -9999 && data?.allSold?.weekRate !== -8888 &&\n                            <Statistic\n                                title=\"周环比\"\n                                value={data?.allSold?.weekRate}\n                                precision={2}\n                                valueStyle={{\n                                  color: data?.allSold?.weekRate <= 0 ? '#cf1322' : '#3f8600',\n                                  fontSize: 18\n                                }}\n                                prefix={\n                                  data?.allSold?.weekRate > 0 ? <ArrowUpOutlined/> : <ArrowDownOutlined/>\n                                }\n                                suffix=\"%\"\n                            />\n                          }\n                          {\n                            data?.allSold?.weekRate === -9999 &&\n                            <Statistic\n                                title=\"周环比\"\n                                value={'暂无上周数据'}\n                                precision={2}\n                                valueStyle={{\n                                  color: '#a4b0be',\n                                  fontSize: 16\n                                }}\n                            />\n                          }\n                          {\n                            data?.allSold?.weekRate === -8888 &&\n                            <Statistic\n                                title=\"周环比\"\n                                value={'暂无本周数据'}\n                                precision={2}\n                                valueStyle={{\n                                  color: '#a4b0be',\n                                  fontSize: 16\n                                }}\n                            />\n                          }\n                          {\n                            data?.allSold?.dayRate !== -9999 && data?.allSold?.dayRate !== -8888 &&\n                            <Statistic\n                                style={{ marginLeft: 30 }}\n                                title=\"日环比\"\n                                value={data?.allSold?.dayRate}\n                                precision={2}\n                                valueStyle={{\n                                  color: data?.allSold?.dayRate <= 0 ? '#cf1322' : '#3f8600',\n                                  fontSize: 18\n                                }}\n                                prefix={\n                                  data?.allSold?.dayRate > 0 ? <ArrowUpOutlined/> : <ArrowDownOutlined/>\n                                }\n                                suffix=\"%\"\n                            />\n                          }\n                          {\n                            data?.allSold?.dayRate === -9999 &&\n                            <Statistic\n                                style={{ marginLeft: 30 }}\n                                title=\"日环比\"\n                                value={'暂无昨日数据'}\n                                precision={2}\n                                valueStyle={{\n                                  color: '#a4b0be',\n                                  fontSize: 16\n                                }}\n                            />\n                          }\n                          {\n                            data?.allSold?.dayRate === -8888 &&\n                            <Statistic\n                                style={{ marginLeft: 30 }}\n                                title=\"日环比\"\n                                value={'暂无今日数据'}\n                                precision={2}\n                                valueStyle={{\n                                  color: '#a4b0be',\n                                  fontSize: 16\n                                }}\n                            />\n                          }\n                        </div>\n                      </div>\n                      <div className='daymoney'>\n                        <Statistic\n                            style={{ display: \"flex\", marginTop: 10 }}\n                            title=\"日销售额\"\n                            value={data?.allSold?.dayMoney}\n                            precision={2}\n                            valueStyle={{ color: '#000', fontSize: 14, marginLeft: 10 }}\n                            prefix={'¥'}\n                        />\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col span={6}>\n                    <Card bordered={false} headStyle={{ borderBottom: 0, minHeight: 0 }}\n                          bodyStyle={{ paddingTop: 20, paddingBottom: 10 }}\n                    >\n                      <div className='rightdot'>\n                        <Tooltip placement=\"top\" title={'指标说明'}>\n                          <ExclamationCircleOutlined/>\n                        </Tooltip>\n                      </div>\n                      <div className='content'>\n                        <Statistic title=\"销售实收\"\n                                   valueStyle={{ fontSize: 30 }}\n                                   value={data?.allReceive?.allReMoney}\n                                   prefix={'¥'}/>\n                        <LineChart data={data?.allReceive?.thisWeekRe}/>\n                      </div>\n\n                      <div className='daymoney'>\n                        <Statistic\n                            style={{ display: \"flex\", marginTop: 10 }}\n                            title=\"日收入额\"\n                            value={data?.allReceive?.reTodayMoney}\n                            precision={2}\n                            valueStyle={{ color: '#000', fontSize: 14, marginLeft: 10 }}\n                            prefix={'¥'}\n                        />\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col span={6}>\n                    <Card bordered={false} headStyle={{ borderBottom: 0, minHeight: 0 }}\n                          bodyStyle={{ paddingTop: 20, paddingBottom: 10 }}\n                    >\n                      <div className='rightdot'>\n                        <Tooltip placement=\"top\" title={'指标说明'}>\n                          <ExclamationCircleOutlined/>\n                        </Tooltip>\n                      </div>\n\n                      <div className='content'>\n                        <Statistic suffix={'单'}\n                                   title=\"总订单量\"\n                                   value={data?.orderNum?.totalordernum}/>\n                        <DemoColumn data={data?.allReceive?.thisWeekRe}/>\n                      </div>\n                      <div className='daymoney'>\n                        <Statistic\n                            style={{ display: \"flex\", marginTop: 10 }}\n                            title=\"日订单量\"\n                            value={data?.orderNum?.todayordernum}\n                            suffix={'单'}\n                            valueStyle={{ color: '#000', fontSize: 14, marginLeft: 10 }}\n                        />\n                      </div>\n                    </Card>\n                  </Col>\n                  <Col span={6}>\n                    <Card bordered={false} headStyle={{ borderBottom: 0, minHeight: 0 }}\n                          bodyStyle={{ paddingTop: 20, paddingBottom: 10 }}\n                    >\n                      <div className='rightdot'>\n                        <Tooltip placement=\"top\" title={'指标说明'}>\n                          <ExclamationCircleOutlined/>\n                        </Tooltip>\n                      </div>\n\n                      <div className='contents'>\n                        <Statistic title=\"会员数量\"\n                                   value={data?.vip?.vipnum}\n                                   suffix={'人'}\n                        />\n                        <div style={{ marginLeft: '10%' }} className='num'>\n                          <DemoLiquid rate={data?.vip?.weekVipActiveRate}/>\n                        </div>\n                      </div>\n                      <div className='daymoney'>\n                        <Statistic\n                            style={{ display: \"flex\", marginTop: 10 }}\n                            title=\"日活跃量\"\n                            suffix={'人'}\n                            value={data?.vip?.dayVipActiveNum}\n                            valueStyle={{ color: '#000', fontSize: 14, marginLeft: 10 }}\n                        />\n                      </div>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n              <div className=\"site-card-wrapper\" style={{ marginTop: '1%' }}>\n                <Row gutter={16}>\n                  <Col span={18}>\n                    <Card title=\"销售额\" extra={\n                      <Radio.Group onChange={SoldMoneyToggle} defaultValue=\"month\">\n                        <Radio.Button value=\"month\">本月</Radio.Button>\n                        <Radio.Button value=\"year\">今年</Radio.Button>\n                      </Radio.Group>\n                    }>\n                      <DemoDualAxes data={soldMoneyData}/>\n                    </Card>\n                  </Col>\n                  <Col span={6}>\n                    <Card title=\"销量排行\" extra={\n                      <Radio.Group size={\"small\"} onChange={SoldNumToggle} defaultValue=\"day\">\n                        <Radio.Button value=\"day\">今日</Radio.Button>\n                        <Radio.Button value=\"week\">本周</Radio.Button>\n                        <Radio.Button value=\"month\">本月</Radio.Button>\n                      </Radio.Group>\n                    }>\n                      {/*@ts-ignore*/}\n                      <Table pagination={false} columns={columns} dataSource={soldNumData}/>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n\n            </DashWrap>\n          </ConfigProvider>\n        }\n      </DocumentTitle>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/actions.ts",["590","591"],"export const GETDASHBOARD = 'getdashboard'\nexport type GETDASHBOARD = typeof GETDASHBOARD\n\nexport const GETDASHBOARDSUC = 'getdashboardsuc'\nexport type GETDASHBOARDSUC = typeof GETDASHBOARDSUC\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/dashboard/dashbord-style.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/ColumnChart.tsx",["592"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { Column } from '@ant-design/charts';\n\n\ninterface Props {\n  data: any\n}\n\nconst ColumnChart: React.FC<Props> = (props) => {\n  const [data, setData] = useState([{}]);\n\n  useEffect(() => {\n    if (props.data) {\n      const preData = props.data.map((val: any) => {\n        return {\n          _id: val._id.slice(5),\n          num: val.num,\n          paid: val.paid\n        }\n      })\n      setData(preData)\n    }\n  }, [props.data]);\n\n  var config = {\n    data: data,\n    xField: '_id',\n    yField: 'num',\n    width: 80,\n    height: 80,\n    label: {\n      position: 'middle',\n      style: {\n        fill: '#FFFFFF',\n        opacity: 0.6,\n      },\n    },\n    meta: {\n      _id: { alias: '日期' },\n      num: { alias: '订单量' },\n    },\n  };\n  // @ts-ignore\n  return <Column {...config} />;\n};\nexport default ColumnChart;\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/LineChart.tsx",["593"],"import React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\n\ninterface Prop {\n  data: any\n}\n\nconst LineChart: React.FC<Prop> = (props) => {\n  const [data, setData] = useState([{}]);\n  // @ts-ignore\n  let ref;\n  useEffect(() => {\n    if (props.data) {\n      const preData = props.data.map((val: any) => {\n        return {\n          _id: val._id,\n          num: val.num,\n          paid: val.paid\n        }\n      })\n      console.log(preData)\n      setData(preData)\n    }\n  }, [props.data]);\n  var config = {\n    data: data,\n    padding: 'auto',\n    width: 80,\n    height: 70,\n    xField: '_id',\n    yField: 'paid',\n    meta: {\n      _id: { alias: '日期' },\n      paid: { alias: '净收入' },\n    },\n  };\n  useEffect(() => {\n    var cnt = 0;\n    var smooth = false;\n    var interval = setInterval(function () {\n      if (cnt < 2) {\n        smooth = !smooth;\n        cnt += 1;\n        // @ts-ignore\n        ref.update({ smooth: smooth });\n      } else {\n        clearInterval(interval);\n      }\n    }, 100);\n  }, []);\n\n  // @ts-ignore\n  return <Line {...config} chartRef={(chartRef) => (ref = chartRef)}/>;\n};\n\nexport default LineChart;\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/MixCoulmnLine.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/PieChart.tsx",["594"],"import React, { useState, useEffect } from 'react';\nimport { Liquid } from '@ant-design/charts';\n\ninterface OwnProps {\n  rate: number\n}\n\ntype Props = OwnProps;\nconst DemoLiquid: React.FC<Props> = (props) => {\n  var [percent, setPercent] = useState(0.1);\n  var ref;\n  var config = {\n    percent,\n    width: 252,\n    height: 116,\n    statistic: {\n      title: {\n        formatter: function formatter() {\n          return '周活跃率';\n        },\n        style: function style(_ref: { percent: any; }) {\n          var percent = _ref.percent;\n          return { fill: percent > 0.65 ? 'white' : 'rgba(44,53,66,0.85)' };\n        },\n      },\n      content: {\n        style: function style(_ref2: { percent: any; }) {\n          var percent = _ref2.percent;\n          return {\n            fontSize: 16,\n            lineHeight: 1,\n            fill: percent > 0.65 ? 'white' : 'rgba(44,53,66,0.85)',\n          };\n        },\n      },\n    },\n    liquidStyle: function liquidStyle(_ref4: { percent: any; }) {\n      var percent = _ref4.percent;\n      return {\n        fill: percent > 0.75 ? '#5B8FF9' : '#FAAD14',\n        stroke: percent > 0.75 ? '#5B8FF9' : '#FAAD14',\n      };\n    },\n    color: function color() {\n      return '#5B8FF9';\n    },\n  };\n  useEffect(() => {\n    var data = 0.1;\n    var interval = setInterval(function () {\n      const random = Math.min(Math.random() * 0.1, 0.1);\n      data += random\n      if (data <= props.rate) {\n        setPercent(data);\n      } else {\n        if (data - random < props.rate) setPercent(props.rate)\n        clearInterval(interval);\n      }\n    }, 500);\n  }, [props.rate]);\n  // @ts-ignore\n  return <Liquid {...config} chartRef={(chartRef) => (ref = chartRef)}/>;\n};\n\nexport default DemoLiquid;\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/Layout.tsx",["595","596"],"import React, { FunctionComponent, useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  ConfigProvider,\n  Descriptions,\n  Form,\n  Input,\n  Layout,\n  Menu,\n  message,\n  Modal,\n  Popover,\n  Space,\n  Tag,\n  notification\n} from 'antd';\nimport {\n  HeartOutlined,\n  LineChartOutlined,\n  ShopOutlined,\n  TeamOutlined,\n  UnorderedListOutlined,\n  InsertRowBelowOutlined\n} from '@ant-design/icons';\nimport logo from '../../assets/images/logo_small.png'\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './index.css'\n// @ts-ignore\nimport Darkmode from 'darkmode-js';\nimport moment from 'moment'\nimport { getStore, removeStore, setStore } from \"../../utils/storage\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { EDITUSERINFO } from \"./actions\";\nimport { PWD_URL } from \"../api\";\nimport Time from \"../../components/Time\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst mapStateToProps = (state: any) => ({\n  topBarEditState: state.topBarEditInfo.topBarEditState,\n  tberr: state.topBarEditInfo.tberr,\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  editInfo(val: any) {\n    dispatch({\n      type: EDITUSERINFO,\n      url: PWD_URL,\n      data: val\n    })\n  }\n})\n\ninterface Props {\n  editInfo(val: any): void,\n\n  [prop: string]: any\n}\n\n\nconst LayoutWrap: FunctionComponent<Props> = (props) => {\n\n  const [collapsed, setCollapsed] = useState(false);\n  const history = useHistory()\n  const { pathname } = useLocation()\n\n  const options = {\n    bottom: '30px', // default: '32px'\n    right: '32px', // default: '32px'\n    left: 'unset', // default: 'unset'\n    time: '0.5s', // default: '0.3s'\n    mixColor: '#fff', // default: '#fff'\n    backgroundColor: '#fff',  // default: '#fff'\n    buttonColorDark: '#100f2c',  // default: '#100f2c'\n    buttonColorLight: '#fff', // default: '#fff'\n    saveInCookies: false, // default: true,\n    label: '🌓', // default: ''\n    autoMatchOsTheme: true // default: true\n  }\n  const darkmode = new Darkmode(options);\n  darkmode.showWidget();\n\n  //头像弹出框\n  const content = (\n      <div className='contentss'>\n        <p onClick={() => {\n          setVisible(true)\n        }}>个人资料</p>\n        <p onClick={() => {\n          setVisiblePwd(true)\n        }}>修改密码</p>\n        <p onClick={() => {\n          removeStore('userInfo')\n          removeStore('token')\n          removeStore('topBarEditState')\n          history.push('/')\n        }}>退出登录</p>\n      </div>\n  );\n\n\n  //session获取个人信息\n  const [personInfo, setPersonInfo] = useState({\n    name: undefined,\n    account: undefined,\n    role: undefined,\n    joinTime: undefined,\n    status: undefined\n  })\n  //获取当前用户信息\n  useEffect(() => {\n    const userInfo = JSON.parse(getStore('userInfo'))\n    setPersonInfo(userInfo)\n  }, [])\n\n  const [visible, setVisible] = useState(false)\n  const [visiblePwd, setVisiblePwd] = useState(false)\n\n  //确认修改\n  const handleOks = (val: any) => {\n    console.log(val)\n    if (val.confirmPwd !== val.newPwd) {\n      notification['warning']({\n        message: '密码不一致',\n        description: '请确认您输入的两次密码是否一致'\n      })\n      return\n    }\n    props.editInfo(val)\n  }\n\n\n  // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n  useEffect(() => {\n    console.log(props)\n    const { topBarEditState, tberr } = props\n    console.log(tberr)\n    const estatus = getStore('topBarEditStatus')\n    //修改\n    if (estatus == topBarEditState) {\n    } else {\n      setStore('topBarEditState', topBarEditState)\n      if (topBarEditState < 1) {\n        message.success('密码修改成功')\n        setVisiblePwd(false)\n      } else {\n        if (tberr === '初始密码错误，请输入正确的密码') message.warn('初始密码错误')\n        else if (tberr === '请先登录') message.error('请先登录')\n        else if (tberr === '新旧密码一致，无需更改') message.warn('新旧密码一致，无需更改')\n        else if (tberr === '两次输入密码不一致，请重新输入') message.warn('两次输入密码不一致，请重新输入')\n      }\n      // //关闭时获取更新的用户信息\n      // setPersonInfo(JSON.parse(getStore('userInfo')))\n    }\n  }, [props.topBarEditState, props.tberr])\n\n  return (\n      <ConfigProvider locale={zhCN}>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={() => {\n            setCollapsed(!collapsed)\n          }}>\n            <div className=\"logo\">\n              <img style={{ cursor: 'pointer' }} className='bigLogo' src={logo} alt=\"logo\"/>\n            </div>\n            <Menu theme=\"dark\" defaultSelectedKeys={[pathname]} mode=\"inline\">\n              <Menu.Item key=\"/admin/dashboard\" icon={<LineChartOutlined/>} onClick={() => {\n                history.push('/admin/dashboard')\n              }}>\n                统计\n              </Menu.Item>\n\n              <SubMenu key=\"sub122\" icon={<ShopOutlined/>} title=\"菜品\">\n                <Menu.Item key=\"/admin/dishes\"\n                           onClick={() => {\n                             history.push('/admin/dishes')\n                           }}\n                >菜品列表</Menu.Item>\n                <Menu.Item key=\"/admin/dishes/category\"\n                           onClick={() => {\n                             history.push('/admin/dishes/category')\n                           }}\n                >菜品分类</Menu.Item>\n              </SubMenu>\n\n              <Menu.Item\n                  key=\"/admin/orders\"\n                  icon={<UnorderedListOutlined/>}\n                  onClick={() => {\n                    history.push('/admin/orders')\n                  }}\n              >\n                订单\n              </Menu.Item>\n\n\n              <SubMenu key=\"sub2453\" icon={<HeartOutlined/>} title=\"会员\">\n                <Menu.Item key=\"/admin/customer\"\n                           onClick={() => {\n                             history.push('/admin/customer')\n                           }}\n                >会员资料</Menu.Item>\n                <Menu.Item key=\"/admin/customer/cate\"\n                           onClick={() => {\n                             history.push('/admin/customer/cate')\n                           }}\n                >会员类别</Menu.Item>\n              </SubMenu>\n              <Menu.Item\n                  key=\"/admin/staffs\"\n                  icon={<TeamOutlined/>}\n                  onClick={() => {\n                    history.push('/admin/staffs')\n                  }}\n              >\n                职工\n              </Menu.Item>\n              <Menu.Item key=\"/admin/table\" icon={<InsertRowBelowOutlined />} onClick={() => {\n                history.push('/admin/table')\n              }}>\n                餐桌\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\">\n              <div>起个什么名后台</div>\n              <div className='time'><Time/></div>\n              <div className='avatar'>\n                <Popover placement={\"leftTop\"} content={content} title=\"欢迎您：\">\n                  <Avatar size={\"large\"} style={{ backgroundColor: '#2ed573' }}>{personInfo?.name}</Avatar>\n                </Popover>\n              </div>\n            </Header>\n            <Content style={{ margin: '16px 16px' }}>\n              {/*<Breadcrumb style={{margin: '16px 0'}}>*/}\n              {/*    <Breadcrumb.Item>后台</Breadcrumb.Item>*/}\n              {/*    <Breadcrumb.Item>Bill</Breadcrumb.Item>*/}\n              {/*</Breadcrumb>*/}\n              <div style={{ minHeight: 780, height: '100%' }}>\n                {props.children}\n              </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Copyright © 2021 陈相材 </Footer>\n          </Layout>\n          <Modal\n              visible={visible}\n              destroyOnClose\n              onCancel={() => {\n                setVisible(false)\n              }}\n              footer={null}\n          >\n            <Descriptions bordered size={'small'} title=\"个人信息\">\n              <Descriptions.Item label=\"工号\">{personInfo?.account}</Descriptions.Item>\n              <Descriptions.Item label=\"姓名\">{personInfo?.name}</Descriptions.Item>\n              <Descriptions.Item label=\"岗位\">\n                {\n                  personInfo.role === 'admin' &&\n                  <Tag color=\"#108ee9\">管理员</Tag>\n                }\n                {\n                  personInfo.role === 'chef' &&\n                  <Tag color=\"#9c90da\">厨师</Tag>\n                }\n                {\n                  personInfo.role === 'waiter' &&\n                  <Tag color=\"#108ee9\">服务员</Tag>\n                }\n              </Descriptions.Item>\n              <Descriptions.Item label=\"在职状态\">\n                {\n                  personInfo?.status === 1 && '在职'\n                }\n                {\n                  personInfo?.status === 0 && '请假'\n                }\n              </Descriptions.Item>\n              <Descriptions.Item\n                  label=\"入职时间\">{moment(personInfo?.joinTime).format('YYYY-MM-DD HH:mm:ss')}</Descriptions.Item>\n            </Descriptions>\n          </Modal>\n\n          <Modal\n              visible={visiblePwd}\n              destroyOnClose\n              onCancel={() => {\n                setVisiblePwd(false)\n              }}\n              title={'密码修改'}\n              footer={null}\n          >\n            <Form onFinish={handleOks}>\n              <Form.Item name=\"lastPwd\" label=\"初始密码\" rules={[\n                {\n                  required: true,\n                  message: '请输入旧密码',\n                },\n              ]}>\n                <Input.Password type={\"password\"}/>\n              </Form.Item>\n              <Form.Item name=\"newPwd\" label=\"新的密码\" rules={[\n                {\n                  required: true,\n                  message: '请输入新密吗',\n                },\n              ]}>\n                <Input.Password type={\"password\"}/>\n              </Form.Item>\n              <Form.Item name='confirmPwd' label=\"确认密码\" rules={[\n                {\n                  required: true,\n                  message: '请输入密码以确认',\n                },\n              ]}>\n                <Input.Password type={\"password\"}/>\n              </Form.Item>\n              <Form.Item style={{ marginBottom: -6 }}>\n                <Space style={{ float: \"right\" }}>\n                  <Button type=\"default\" onClick={() => {\n                    setVisiblePwd(false)\n                  }}>关闭</Button>\n                  <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </Modal>\n        </Layout>\n      </ConfigProvider>\n  );\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LayoutWrap);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/actions.ts",["597","598","599"],"export const EDITUSERINFO = 'edituserinfo'\nexport type EDITUSERINFO = typeof EDITUSERINFO\n\nexport const EDITUSERINFOSUC = 'edituserinfosuc'\nexport type EDITUSERINFOSUC = typeof EDITUSERINFOSUC\n\nexport const EDITUSERINFOERR = 'edituserinfoerr'\nexport type EDITUSERINFOERR = typeof EDITUSERINFOERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/Time.tsx",["600"],"import React, { FunctionComponent, useEffect, useState } from 'react';\nimport moment from \"moment\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst Time: FunctionComponent<Props> = (props) => {\n  const [time, SetTime] = useState(moment(Date.now()).format('YYYY-MM-DD HH:mm:ss'))\n\n  setInterval(() => {\n    SetTime(moment(Date.now()).format('YYYY-MM-DD HH:mm:ss'))\n  }, 1000)\n\n  return (\n      <div>\n        <span style={{ fontSize: 16 }}>{time}</span>\n      </div>\n  );\n};\n\nexport default Time;\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/Home.tsx",["601","602","603","604","605","606","607"],"import React, { FunctionComponent, useEffect, useRef, useState } from 'react';\nimport { Carousel, Flex, Grid, Icon, NavBar, Tabs, Toast, Popover } from \"antd-mobile\";\nimport { Avatar, Badge } from 'antd'\nimport { HomeWrap } from \"./homeWrap\";\nimport { Input } from \"antd\";\nimport img from '../../../assets/images/logo.png'\nimport { PlusOutlined, UpOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport FoodShelf from \"../../../components/FoodShelf\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ADD2CAR, GETHDISH, RESETCAR } from \"./actions\";\nimport { HOMEDOSH_URL, SERVER_URL } from \"../../../common/api\";\nimport { getStore } from \"../../../utils/storage\";\n\nconst Item = Popover.Item;\n\ninterface OwnProps {\n  GetHomeDish(): () => void,\n\n  add2car(val: any): () => void,\n\n  resetcar(val: any): () => void\n\n  [prop: string]: any\n}\n\ntype Props = OwnProps;\nconst mapStateToProps = (state: any) => ({\n  hotlist: state.home.hotlist || [],\n  homeDishState: state.home.homeDishState,\n  randomlist: state.home.randomlist || [],\n  shopcar: state.home.shopcar || []\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  GetHomeDish(value: object) {\n    dispatch({\n      type: GETHDISH,\n      url: HOMEDOSH_URL,\n      data: value\n    })\n  },\n  add2car(val: object) {\n    dispatch({\n      type: ADD2CAR,\n      data: val\n    })\n  },\n  resetcar(val: object) {\n    dispatch({\n      type: RESETCAR,\n      data: val\n    })\n  }\n})\n\n\nconst Home: FunctionComponent<Props> = (props) => {\n\n      const tabs = [\n        { title: '热门菜' },\n        { title: '菜单' },\n      ];\n      const [selectedItemClassName, setClickClass] = useState('')\n\n      const [searchBar, setSearchBar] = useState('none')\n      const [currentTab, setCurrentTab] = useState(0)\n      const history = useHistory()\n\n      const searchBarState = useRef<any>()\n\n      //购物车数量\n      const [shopCount, setShopCount] = useState(0)\n      //购物车\n      const shopcar = props.shopcar\n\n      const increase = () => {\n        setShopCount(shopCount + 1)\n      }\n\n      useEffect(() => {\n        // searchBarState.current.focus()\n      }, [searchBar])\n\n      //导航栏搜索\n      function clickSearch() {\n        setSearchBar('block')\n      }\n\n      //搜索提交\n      function searchSubmit(e: string) {\n        console.log(e)\n        // setSearchBar('none')\n      }\n\n\n      //获取列表数据\n      useEffect(() => {\n        props.GetHomeDish()\n        const shop_car = JSON.parse(getStore('shopcar'))\n        if (!shop_car) setShopCount(0)\n        else {\n          const shopnum = shop_car.reduce((pre: any, cur: any) => pre + cur.num, 0)\n          setShopCount(shopnum)\n          props.resetcar(shop_car)\n        }\n      }, [])\n\n\n      useEffect(() => {\n        const shop_car = JSON.parse(getStore('shopcar'))\n        if (!shop_car) setShopCount(0)\n        else {\n          const shopnum = shop_car.reduce((pre: any, cur: any) => pre + cur.num, 0)\n          setShopCount(shopnum)\n        }\n      }, [props.shopcar])\n\n      //增加到购物车\n      function add2car(val: any) {\n        props.add2car(val)\n      }\n\n      const data1 = props.hotlist\n      const data2 = props.randomlist\n\n      return (\n          <HomeWrap>\n            <div className='top'>\n              <NavBar\n                  mode=\"light\"\n                  icon={<Icon type=\"left\"/>}\n                  onLeftClick={() => history.goBack()}\n                  rightContent={[\n                    <Popover mask\n                             visible={false}\n                             overlay={[\n                               (<Item style={{ marginRight: 5 }} key=\"0\" data-seed=\"logId\">购物车</Item>),\n                               (<Item style={{ whiteSpace: 'nowrap' }} key=\"1\">我的订单</Item>),\n                               (<Item key=\"2\"><span style={{ marginRight: 5 }}>更多</span></Item>),\n                             ]}\n                             onSelect={(node: any, index?: number) => {\n                               console.log(index)\n                               if (index === 0) {\n                                 // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                                 shopCount === 0 ? Toast.info('购物车空空如也...', 1) : history.push('/home/shopcar')\n                               } else if (index === 1) {\n                                 //todo 跳转订单详情页之前验证\n                                 history.push('/home/orderdetail')\n                               }\n                             }}\n                    >\n                      <div style={{\n                        height: '100%',\n                        padding: '0 15px',\n                        marginRight: '-7px',\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                      >\n                        <Icon type=\"ellipsis\"/>\n                      </div>\n                    </Popover>\n                  ]}\n              >\n                <span className='top-title'>这是一个名字</span>\n              </NavBar>\n\n            </div>\n            {/*style={{ maxWidth: '100%', display: searchBar }}*/}\n            <Flex>\n              <Flex.Item style={{ position: 'relative' }}>\n                <div className='top-block'>\n                  <span>欢迎来到</span>\n                  <span>这是一个名字</span>\n                </div>\n                <div className='search-item'>\n                  <Input\n                      className='search-input'\n                      prefix={<Icon type=\"search\" size='xxs'/>}\n                      placeholder={'搜索'}\n                  />\n                </div>\n              </Flex.Item>\n            </Flex>\n\n            <div className=\"flex-container\">\n              <Flex>\n                <Flex.Item style={{ paddingTop: '.3rem' }}>\n                  <Tabs tabs={tabs}\n                        swipeable={false}\n                        initialPage={currentTab}\n                        tabBarUnderlineStyle={{ width: '1rem', marginLeft: '5.4rem', background: '#000000' }}\n                        onChange={(tab, index) => {\n                          console.log('onChange', index, tab);\n                          setCurrentTab(index)\n                        }}\n                  >\n                    {/*热门菜品*/}\n                    <div style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      flexDirection: 'column'\n                    }}>\n                      {\n                        data1 &&\n                        <Carousel autoplay infinite>\n                          {/*beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}*/}\n                          {/*afterChange={index => console.log('slide to', index)}*/}\n                          {data1.map((val: any, index: number) => (\n                              <div className='hot-dish' key={val}>\n                                {\n                                  val.url === '' ? <img src={img} alt=\"\" style={{ objectFit: \"contain\" }}/> :\n                                      <img src={`${SERVER_URL}${val.url}`} style={{ objectFit: \"contain\" }} alt=''/>\n                                }\n\n                                <span className='dish-title'>{val.name}</span>\n                                <div className='price-plus' onClick={() => {\n                                  add2car(val)\n                                }} style={{ marginTop: '2rem' }}>\n                            <span className='price'>\n                            <span className='pricedetail'>¥ {val.price}</span>\n                            </span>\n                                  <div className='plus' onClick={() => increase()}><PlusOutlined/></div>\n                                </div>\n                              </div>\n                          ))}\n                        </Carousel>\n                      }\n                      {\n                        data1 &&\n                        <div className='more'>\n                          <span style={{ marginBottom: '.3rem', paddingTop: '.5rem' }}><UpOutlined/></span>\n                          <span style={{ paddingBottom: '.4rem' }}>更多推荐</span>\n                          <Grid data={data2}\n                                columnNum={2}\n                                hasLine={false}\n                                renderItem={(dataItem: any) => (\n                                    <div style={{ padding: '12.5px' }}>\n                                      {\n                                        dataItem.picture === '' ?\n                                            <img src={img} style={{ width: '8rem', height: '8rem', objectFit: \"cover\" }}\n                                                 alt=\"图片走丢了\"/>\n                                            :\n                                            <img src={`${SERVER_URL}${dataItem.picture}`}\n                                                 style={{ width: '8rem', height: '8rem', objectFit: \"cover\" }} alt=\"\"/>\n                                      }\n                                      <div style={{ color: '#888', fontSize: '14px', marginTop: '12px' }}>\n                                        <span>{dataItem.name}</span>\n                                      </div>\n                                    </div>\n                                )}\n                          />\n                        </div>\n                      }\n                    </div>\n\n\n                    {/*菜单*/}\n                    <div style={{ display: \"flex\" }}>\n                      <FoodShelf/>\n                    </div>\n\n\n                    {/*<div style={{*/}\n                    {/*  display: 'flex',*/}\n                    {/*  alignItems: 'center',*/}\n                    {/*  justifyContent: 'center',*/}\n                    {/*  height: '150px',*/}\n                    {/*}}>*/}\n                    {/*  Content of third tab*/}\n                    {/*</div>*/}\n                  </Tabs>\n                </Flex.Item>\n              </Flex>\n            </div>\n\n            {/*购物车*/}\n            <Badge className='shop-car' style={{ textAlign: \"center\" }} count={shopCount}>\n              <div onClick={() => {\n                if (props.shopcar.length === 0) return Toast.info('购物车空空如也...', 1)\n                history.push('/home/shopcar')\n              }}>\n                <Avatar style={{ backgroundColor: '#fff', color: '#000' }} size={\"large\"} icon={<ShoppingCartOutlined/>}/>\n              </div>\n            </Badge>\n\n          </HomeWrap>\n      );\n    }\n;\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/common/Layout/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/Staff.tsx",["608","609","610","611","612","613","614","615","616","617"],"import React, { FunctionComponent, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button, Card, ConfigProvider, Form, Input, message, Modal, Popconfirm, Radio, Space, Table, Tag } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { Dispatch } from \"redux\";\nimport { ADDSTAFF, DELSTAFF, EDITSTAFF, TOGGLEPAGE } from \"./actions\";\nimport { DELSTAFF_URL, EDITSTAFF_URL, STAFFADD, STAFFLIST } from \"../../../common/api\";\nimport DocumentTitle from \"react-document-title\";\nimport moment from 'moment';\nimport { FieldNumberOutlined, LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { getStore, setStore } from \"../../../utils/storage\";\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Paging from \"../../../components/Paging\";\nimport TableCheckBox from \"../../../components/TableCheckBox\";\n\ninterface OwnProps {\n  [prop: string]: any\n\n  togglePage(value?: object): void\n\n  delStaff(value: string): void,\n\n  addStaff(value: object): void,\n\n  editStaff(value: object): void\n\n}\n\ninterface User {\n  _id: any,\n  name: string,\n  role: string,\n  title: string,\n  status: number,\n  account: number,\n  joinTime: string\n}\n\ntype Props = OwnProps;\n\nconst mapStateToProps = (state: any) => ({\n  list: state.staff.list || [],\n  addStatus: state.staff.addStatus,\n  delStatus: state.staff.delStatus,\n  errorMsg: state.staff.errorMsg,\n  editStatus: state.staff.editStatus\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  delStaff(value: string) {\n    dispatch({\n      type: DELSTAFF,\n      url: DELSTAFF_URL,\n      data: value\n    })\n  },\n  addStaff(value: object) {\n    dispatch({\n      type: ADDSTAFF,\n      url: STAFFADD,\n      data: value\n    })\n  },\n  togglePage(value: object) {\n    dispatch({\n      type: TOGGLEPAGE,\n      url: STAFFLIST,\n      data: value\n    })\n  },\n  editStaff(value: object) {\n    dispatch({\n      type: EDITSTAFF,\n      url: EDITSTAFF_URL,\n      data: value\n    })\n  }\n})\n\n\nconst Staff: FunctionComponent<Props> = (props) => {\n\n  // 表格列\n  const columns: ColumnsType<User> = [\n    {\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: '角色',\n      key: 'role',\n      dataIndex: 'role',\n      render: (role: any) => (\n          <>\n            {\n              role === 'admin' &&\n              <Tag color={'#0083B0'} key={role}>\n                {\n                  role === 'admin' ? '管理员' : '员工'\n                }\n              </Tag>\n            }\n            {\n              role === 'waiter' &&\n              <Tag color={'#2ed573'} key={role}>\n                {\n                  role = '服务员'\n                }\n              </Tag>\n            }\n            {\n              role === 'chef' &&\n              <Tag color={'#a17fe0'} key={role}>\n                {\n                  role = '厨师'\n                }\n              </Tag>\n            }\n          </>\n      ),\n    },\n    {\n      title: '入职时间',\n      key: 'joinTime',\n      dataIndex: 'joinTime',\n      render: (time: any) => (\n          <>\n            {\n              moment(time).format('YYYY-MM-DD')\n            }\n          </>\n      ),\n    },\n    {\n      title: '在职状态',\n      key: 'status',\n      dataIndex: 'status',\n      render: (status: any) => (\n          <>\n            {\n              status === 1 && '在职'\n            }\n            {\n              status === 0 && '请假'\n            }\n            {\n              status === -1 && '离职'\n            }\n          </>\n      ),\n    },\n    /*{\n      title: '操作',\n      key: '_id',\n      width: 300,\n      render: (text, records, index) => (\n          <Space>\n            <Button type='primary' size={\"small\"} onClick={() => {\n              edit_staff(records)\n            }}>修改</Button>\n            {\n              <Popconfirm\n                  title=\"确定要删除此用户吗？\"\n                  placement=\"top\"\n                  okText=\"确定\"\n                  cancelText=\"取消\"\n                  onConfirm={() => {\n                    del_staff(records)\n                  }}\n              >\n                <Button type='primary' danger size={\"small\"}>删除</Button>\n              </Popconfirm>\n            }\n          </Space>\n      ),\n    },*/\n  ];\n\n  //选择框(身份信息)\n  const positionOptions = [\n    { label: '服务员', value: 'waiter', style: { marginRight: 10 } },\n    { label: '厨师', value: 'chef', style: { marginRight: 10 } },\n    { label: '管理员', value: 'admin' },\n  ];\n\n  //列表显示\n  const [pageMsg, setPageMsg] = useState({\n    query: '',\n    page: 1,\n    pagesize: 10\n  })\n  const [userList, setUserList] = useState([])\n\n\n  /**\n   * 新增和编辑弹出框\n   * visible: 弹框可见性\n   * selected: 选中项\n   * popStaffStyle: 弹窗类型\n   */\n  const [visible, setVisible] = useState(false);\n  const [selected, setSelected] = useState(['waiter'])\n  const [popStaffStyle, setPopStaffStyle] = useState('')\n  const [editValues, setEditValues] = useState({ account: 0, name: '', role: '', status: -9 })\n\n  // 表单提交函数 新增和编辑\n  const handleOk = (value: any) => {\n    if (value.hasOwnProperty('password')) {\n      // 找出最大值 作为账号account的值\n      value.account = props.list.records.reduce((pre: any, cur: any) => pre > cur.account ? pre : `${cur.account + 1}`, 0)\n      value.joinTime = new Date().getTime()\n      props.addStaff(value)\n      setVisible(false);\n    } else {\n      // @ts-ignore\n      value.name = edited_name.current.state.value\n      value.account = editValues.account\n\n      // Dispach编辑行为\n      props.editStaff(value)\n      setVisible(false)\n    }\n  };\n\n  const edited_name = useRef(null);\n\n  // 取消弹出框\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  // 新增用户身份选择项\n  const onChange1 = (e: any) => {\n    const selectedValue = e.target.value\n    setSelected(selectedValue)\n  }\n\n  // 删除员工触发\n  const del_staff = (value: User) => {\n    const { _id } = value\n    props.delStaff(_id)\n  }\n\n  // 编辑员工触发\n  const edit_staff = (value: any) => {\n    setVisible(true)\n    setPopStaffStyle('编辑员工')\n    setEditValues({\n          account: value.account,\n          name: value.name,\n          role: value.role,\n          status: value.status\n        }\n    )\n  }\n\n  // 监听拿到最新的修改信息 状态更新立即更改\n  useEffect(() => {\n    const { role } = editValues\n    setSelected([`${role}`])\n    // console.log(selected)\n    // console.log(editValues)\n  }, [editValues])\n\n  // 员工列表数据和事件处理\n  useEffect(() => {\n    props.togglePage(pageMsg)\n    const { list } = props\n    const user_List = list.records\n    setUserList(user_List)\n    //数组长度发生变化后 获取数据 渲染列表\n  }, [props.list.total, props.list.page, props.list.size])\n\n  // 修改状态后 部分信息改变 通过memo监听list变化 重新渲染页面\n  useMemo(() => {\n    const { list } = props\n    const user_List = list.records\n    setUserList(user_List)\n  }, [props.list])\n\n\n  // 弹框状态管理 fix 状态存储在缓存 解决每次重新加载页面弹框问题\n  useEffect(() => {\n    const { errorMsg, addStatus, delStatus, editStatus } = props\n    const astatus = getStore('addStatus')\n    const dstatus = getStore('delStatus')\n    const estatus = getStore('editStatus')\n    //添加\n    if (astatus == addStatus) {\n    } else {\n      setStore('addStatus', addStatus)\n      if (addStatus < 1) message.success('员工添加成功')\n      else if (errorMsg && errorMsg.includes('密码')) message.warning('请输入3位数以上的密码')\n      else if (errorMsg && errorMsg.includes('姓名')) message.warning('请输入正确的姓名格式')\n      else if (errorMsg && errorMsg.includes('注册')) message.warn('此账号已被注册')\n    }\n    //删除\n    if (dstatus == delStatus) {\n    } else {\n      setStore('delStatus', delStatus)\n      if (delStatus < 1) message.success('员工删除成功')\n    }\n    //修改\n    if (estatus == editStatus) {\n    } else {\n      setStore('editStatus', editStatus)\n      if (editStatus < 1) message.success('资料修改成功')\n      //清空选中项\n      SetSelectValue([])\n      // @ts-ignore\n      ref.current = []\n    }\n  }, [props.addStatus, props.delStatus, props.editStatus])\n\n  const [editBtnState, setEditBtnState] = useState(false)\n  //选中函数\n  const [selectValue, SetSelectValue] = useState([])\n  const [barVisible, setBarVisible] = useState('')\n  const ref = useRef();\n  const rowSelection = {\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\n      SetSelectValue(selectedRows)\n      ref.current = selectedRowKeys;\n      if (selectedRows.length > 1) setEditBtnState(true)\n      else setEditBtnState(false)\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    selectedRowKeys: ref.current,\n  };\n  //异步函数捕捉更新状态\n  useEffect(() => {\n    SetSelectValue(selectValue)\n    if (selectValue.length === 0) setBarVisible('none')\n    else setBarVisible('')\n  }, [selectValue])\n  //捕捉异步pageMsg\n  useEffect(() => {\n    setPageMsg(pageMsg)\n    props.togglePage(pageMsg)\n  }, [pageMsg])\n  // 搜索后列表刷新\n  useEffect(() => {\n    const { list } = props\n    const order_List = list.records\n    setUserList(order_List)\n  }, [props.list.records])\n\n  //删除\n  function delSelected() {\n    // @ts-ignore\n    const delAry = selectValue.map(val => val._id)\n    // 把多个删除项处理为字符串格式 传给后端处理\n    const delIds = delAry.join('-')\n    props.delStaff(delIds)\n    setBarVisible('none')\n  }\n\n  // @ts-ignore\n  return (\n      <DocumentTitle title=\"员工管理\">\n        <ConfigProvider locale={zhCN}>\n          <Card title=\"员工列表\"\n                extra={\n                  <Button type=\"primary\" onClick={() => {\n                    setVisible(true)\n                    setPopStaffStyle('新增员工')\n                  }}>新增</Button>\n                }\n                headStyle={{}}\n                style={{ width: '100%' }}\n          >\n            {/*<Button style={{ display: barVisible, float: \"left\", marginRight: 10 }}*/}\n            {/*        onClick={() => {*/}\n            {/*          console.log(selectValue)*/}\n            {/*          edit_staff(selectValue[0])*/}\n            {/*        }}*/}\n            {/*>*/}\n            {/*  编辑*/}\n            {/*</Button>*/}\n            <TableCheckBox\n                delSelected={delSelected}\n                barVisible={barVisible}\n                editBtn={() => {\n                  edit_staff(selectValue[0])\n                }}\n                editBtnState={editBtnState}\n                Search={(value: string) => {\n                  setPageMsg({\n                    page: 1,\n                    pagesize: 10,\n                    query: value\n                  })\n                }}\n                title='员工姓名'\n            />\n\n            {\n              userList &&\n              < Table\n                  rowKey='_id'\n                  bordered\n                  columns={columns}\n                  dataSource={userList}\n                  pagination={false}\n                  rowSelection={{ ...rowSelection }}\n                  scroll={{ y: 400 }}\n              />\n            }\n            {\n              userList &&\n              <Paging page={props.list.page} total={props.list.total} fun={(page = 1, pageSize = 10): any => {\n                props.togglePage(pageMsg)\n                setPageMsg({\n                  query: pageMsg.query,\n                  page: page,\n                  pagesize: pageSize\n                })\n              }}/>\n            }\n            {/*新增弹出框*/}\n            <Modal\n                title={popStaffStyle}\n                visible={visible}\n                onCancel={handleCancel}\n                destroyOnClose\n                footer={null}\n            >\n              <Form name=\"normal_login\" className=\"login-form\" onFinish={handleOk}>\n                <Form.Item name=\"account\">\n                  {\n                    popStaffStyle === '新增员工' &&\n                    <Form.Item name=\"account\" style={{ margin: 0 }}\n                               initialValue={props.list.records.reduce((pre: any, cur: any) => {\n                                 // console.log(pre, cur.account)\n                                 return pre > cur.account ? `${pre}` : `${cur.account + 1}`\n                               }, 0)}>\n                      <Input\n                          disabled prefix={<FieldNumberOutlined className=\"site-form-item-icon\"/>}\n                          placeholder=\"工号\"/>\n                    </Form.Item>\n                  }\n                  {\n                    popStaffStyle === '编辑员工' &&\n                    <Form.Item name=\"account\" style={{ margin: 0 }}>\n                      <Input\n                          defaultValue={editValues.account}\n                          disabled prefix={<FieldNumberOutlined className=\"site-form-item-icon\"/>}\n                          placeholder=\"工号\"/>\n                    </Form.Item>\n                  }\n                </Form.Item>\n                {\n                  popStaffStyle === '新增员工' &&\n                  <Form.Item name=\"name\" rules={[\n                    {\n                      required: true,\n                      message: '请输入姓名',\n                    },\n                  ]}>\n                    <Input autoFocus={true}\n                           prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入2位及以上的姓名\"/>\n                  </Form.Item>\n                }\n                {\n                  popStaffStyle === '编辑员工' &&\n                  <Form.Item name=\"name\" initialValue={editValues.name}>\n                    <Input autoFocus={true}\n                           defaultValue={editValues.name}\n                           ref={edited_name}\n                           prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                           placeholder=\"请输入2位及以上的姓名\"/>\n                  </Form.Item>\n                }\n                {\n                  popStaffStyle === '新增员工' &&\n                  <Form.Item name=\"password\" rules={[\n                    {\n                      required: true,\n                      message: '请输入密码',\n                    },\n                  ]}>\n                    <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"请输入3位及以上的密码\"/>\n                  </Form.Item>\n                }\n                <Form.Item name=\"role\" initialValue={popStaffStyle === '编辑员工' ? selected[0] : 'waiter'}>\n                  <Radio.Group\n                      options={positionOptions}\n                      onChange={onChange1}\n                      value={selected[0]}\n                      optionType=\"button\"\n                  />\n                </Form.Item>\n                <Form.Item name=\"status\" initialValue={popStaffStyle === '编辑员工' ? editValues.status : 1}\n                           style={{ marginTop: -10 }}>\n                  <Radio.Group>\n                    <Radio value={1}>在职</Radio>\n                    <Radio value={0}>请假</Radio>\n                    <Radio value={-1}>离职</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item style={{ marginBottom: -6 }}>\n                  <Space style={{ float: \"right\" }}>\n                    <Button type=\"default\" onClick={handleCancel}>取消</Button>\n                    {\n                      popStaffStyle === '新增员工' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">添加</Button>\n                    }\n                    {\n                      popStaffStyle === '编辑员工' &&\n                      <Button type=\"primary\" htmlType=\"submit\"\n                              className=\"login-form-button\">提交</Button>\n                    }\n                  </Space>\n                </Form.Item>\n              </Form>\n            </Modal>\n          </Card>\n        </ConfigProvider>\n      </DocumentTitle>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Staff);\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/staff/actions.ts",["618","619","620","621","622","623","624","625","626","627","628","629","630","631"],"export const GETFAILED = 'getfailed'\nexport type GETFAILED = typeof GETFAILED\n\nexport const GETLIST = 'getlist'\nexport type GETLIST = typeof GETLIST\n\nexport const GETSUCCESS = 'getsuccess'\nexport type GETSUCCESS = typeof GETSUCCESS\n\nexport const ADDSTAFF = 'addstaff'\nexport type ADDSTAFF = typeof ADDSTAFF\n\nexport const ADDSUCCESS = 'addsuccess'\nexport type ADDSUCCESS = typeof ADDSUCCESS\n\nexport const ADDERROR = 'adderror'\nexport type ADDERROR = typeof ADDERROR\n\nexport const TOGGLEPAGE = 'togglePage'\nexport type TOGGLEPAGE = typeof TOGGLEPAGE\n\nexport const TOGGLED = 'toggled'\nexport type TOGGLED = typeof TOGGLED\n\nexport const DELSTAFF = 'delstaff'\nexport type DELSTAFF = typeof DELSTAFF\n\nexport const DELSUCCESS = 'delsuccess'\nexport type DELSUCCESS = typeof DELSUCCESS\n\nexport const DELERROR = 'delerror'\nexport type DELERROR = typeof DELERROR\n\nexport const EDITSTAFF = 'editstaff'\nexport type EDITSTAFF = typeof EDITSTAFF\n\nexport const EDITSUCCESS = 'editsuccess'\nexport type EDITSUCCESS = typeof EDITSUCCESS\n\nexport const EDITERROR = 'editerror'\nexport type EDITERROR = typeof EDITERROR\n\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/PreHome.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/OrderDetail.tsx",["632","633"],"import React, { FunctionComponent, useEffect } from 'react';\nimport { Button, Icon, List, NavBar } from \"antd-mobile\";\nimport { useHistory } from \"react-router-dom\";\nimport { OrderWrap } from \"./OrderWrap\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\n\ninterface OwnProps {\n  [prop: string]: any\n}\n\ntype Props = OwnProps;\nconst mapStateToProps = (state: any) => ({\n  shopcar: state.home.shopcar || []\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  // GetHomeDish(value: object) {\n  //   dispatch({\n  //     type: GETHDISH,\n  //     url: HOMEDOSH_URL,\n  //     data: value\n  //   })\n  // },\n  // add2car(val: object) {\n  //   dispatch({\n  //     type: ADD2CAR,\n  //     data: val\n  //   })\n  // },\n  // resetcar(val: object) {\n  //   dispatch({\n  //     type: RESETCAR,\n  //     data: val\n  //   })\n  // }\n})\n\nconst OrderDetail: FunctionComponent<Props> = (props) => {\n\n  const car = props.shopcar\n\n  //原价\n  const prePrice = car.reduce((pre: any, cur: any) => pre + cur.num * cur.price, 0)\n\n  //优惠金额\n  const youhuiPrice = 0\n\n  //合计\n  const total = prePrice - youhuiPrice\n\n  useEffect(() => {\n    const car = props.shopcar\n  }, [])\n\n  const history = useHistory()\n  return (\n      <OrderWrap>\n        <NavBar\n            mode=\"light\"\n            icon={<Icon type=\"left\"/>}\n            onLeftClick={() => history.goBack()}\n            rightContent={[\n              <Icon key=\"1\" type=\"ellipsis\"/>,\n            ]}\n        >订单详情\n        </NavBar>\n        <div className='content'>\n          <div className='title'>\n            <div>您的订单已提交</div>\n            <div>厨房已经在制作啦</div>\n          </div>\n          <div className='detail'>\n            <List className=\"my-list\">\n              <Item extra={\n                <Button size={\"small\"} onClick={() => history.push('/home')} className='morebtn'>继续点餐</Button>}>\n                桌台号：1\n              </Item>\n              {\n                car && car.map((val: any) => {\n                  return (\n                      <Item multipleLine extra={\n                        <span>¥ {val.num * val.price}</span>\n                      }>\n                        <span style={{ fontSize: '.9rem', color: '#888' }}>{val.name}</span>\n                        <Brief>x {val.num}</Brief>\n                      </Item>\n                  )\n                })\n              }\n            </List>\n          </div>\n          <div style={{ marginTop: '.3rem' }}>\n            <List className=\"my-list\">\n              <Item multipleLine>\n                <span style={{ float: \"right\", color: '#888' }}>¥ {prePrice}</span>\n                <span className='ccc'>原金额</span>\n              </Item>\n              <Item multipleLine extra=\"¥ 77\">\n                <span className='ccc'>优惠金额</span>\n                <div style={{ fontSize: '.9rem', color: '#dabb91' }}>宗师会员: <span>7折</span></div>\n              </Item>\n              <Item multipleLine>\n                <span style={{ float: \"right\", color: '#D5BC96', fontSize: '1.3rem' }}>¥ {total}</span>\n                合计\n              </Item>\n            </List>\n          </div>\n          <div>\n            <List className=\"my-list\">\n              <Item style={{ marginTop: '.3rem' }}>用餐信息</Item>\n              <Item multipleLine>\n                <span className='ccc'>用餐人数</span>\n                <span className='ccc' style={{ float: \"right\" }}>3人</span>\n              </Item>\n              <Item multipleLine>\n                <span className='ccc'>桌台号</span>\n                <span className='ccc' style={{ float: \"right\" }}>128</span>\n              </Item>\n            </List>\n          </div>\n        </div>\n        <div className='bottom'>\n          <div style={{ color: '#888' }}>合计：<span className='price'>¥ {total}</span>\n            <div style={{ display: \"inline-block\", marginLeft: '.5rem', color: '#888' }}> (已优惠¥{youhuiPrice})</div>\n          </div>\n          <div>\n            <Button className='btn' onClick={() => {\n            }}>去付款</Button>\n          </div>\n        </div>\n      </OrderWrap>\n  );\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail)\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/ShopCar.tsx",["634"],"import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport FoodDetail from \"../../../components/FoodDetail\";\nimport { Button, Icon, NavBar } from \"antd-mobile\";\nimport { ShopWrap } from \"./ShopWrap\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ADD2CAR, RESETCAR } from \"../home/actions\";\nimport { getStore } from \"../../../utils/storage\";\n\ninterface OwnProps {\n  [prop: string]: any\n\n  add2car(val: object): () => void,\n\n  resetcar(val: any): () => void\n\n}\n\ntype Props = OwnProps;\n\nconst mapStateToProps = (state: any) => ({\n  shopcar: state.home.shopcar || []\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  add2car(val: object) {\n    dispatch({\n      type: ADD2CAR,\n      data: val\n    })\n  },\n  resetcar(val: object) {\n    dispatch({\n      type: RESETCAR,\n      data: val\n    })\n  }\n})\n\n\nconst ShopCar: FunctionComponent<Props> = (props) => {\n\n  const [order, setOrder] = useState([])\n\n  //页面刷新重新赋值\n  useEffect(() => {\n    const shop_car = JSON.parse(getStore('shopcar'))\n    if (Object.keys(shop_car).length === 0) return history.replace('/home')\n    props.resetcar(shop_car)\n    setOrder(shop_car)\n  }, [props.shopcar.length])\n\n  console.log(order)\n\n  const history = useHistory()\n  // @ts-ignore\n  const sum = order.reduce((previousValue, currentValue) => previousValue + currentValue.price * currentValue.num, 0)\n  return (\n      <ShopWrap>\n        <NavBar\n            mode=\"light\"\n            icon={<Icon type=\"left\"/>}\n            onLeftClick={() => history.goBack()}\n            rightContent={[\n              <Icon key=\"1\" type=\"ellipsis\"/>,\n            ]}\n        >购物车\n        </NavBar>\n        <div className='content'>\n          <FoodDetail add22car={props}/>\n        </div>\n        <div className='bottom'>\n          <div>合计：<span className='price'>¥ {sum}</span></div>\n          <div>\n            <Button className='btn' onClick={() => history.push('/home/orderdetail')}>选好了</Button>\n          </div>\n        </div>\n      </ShopWrap>\n  );\n};\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopCar)\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/orderdetail/OrderWrap.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/ShopWrap.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/FoodShelf.tsx",["635"],"import React, { FunctionComponent } from 'react';\nimport { Tabs } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ADD2CAR, LESS2CAR } from \"../pages/front/home/actions\";\nimport CateFoodDetail from \"./CateFoodDetail\";\n\nconst { TabPane } = Tabs;\n\ninterface OwnProps {\n  [prop: string]: any,\n\n}\n\ntype Props = OwnProps;\n\nconst mapStateToProps = (state: any) => ({\n  cate: state.home.cate || [],\n  catedish: state.home.catedish || []\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  add2car(val: object) {\n    dispatch({\n      type: ADD2CAR,\n      data: val\n    })\n  },\n  less2car(val: object) {\n    dispatch({\n      type: LESS2CAR,\n      data: val\n    })\n  }\n})\n\nconst FoodShelf: FunctionComponent<Props> = (props) => {\n  const { cate, catedish } = props\n  console.log(props)\n\n  function changeCate(key: string) {\n    console.log(cate)\n    console.log(2)\n  }\n\n  return (\n      <div>\n        <Tabs tabPosition='left' onTabClick={(key: string) => {\n          console.log(key)\n        }}>\n          {\n            cate && cate.map((val: any, index: number) =>\n                <TabPane\n                    tab={val.foodTypeName}\n                    key={val._id}\n                >\n                  <CateFoodDetail dish={catedish[index]}/>\n                </TabPane>\n            )\n          }\n          {/*<TabPane tab=\"Tab 1\" key=\"1\">*/}\n          {/*  <FoodDetail order={{}}/>*/}\n          {/*  <FoodDetail order={{}}/>*/}\n          {/*  <FoodDetail order={{}}/>*/}\n          {/*  <FoodDetail order={{}}/>*/}\n          {/*</TabPane>*/}\n        </Tabs>\n      </div>\n  );\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodShelf)\n\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/FoodDetail.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/prehome/PreWrap.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/homeWrap.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/home/actions.ts",["636","637","638","639","640","641","642","643","644"],"export const GETHDISH = 'gethdish'\nexport type GETHDISH = typeof GETHDISH\n\nexport const GETHDISHSUC = 'gethdishsuc'\nexport type GETHDISHSUC = typeof GETHDISHSUC\n\nexport const GETHDISHERR = 'gethdisherr'\nexport type GETHDISHERR = typeof GETHDISHERR\n\nexport const GETHCATE = 'gethcate'\nexport type GETHCATE = typeof GETHCATE\n\nexport const GETHCATESUC = 'gethcatesuc'\nexport type GETHCATESUC = typeof GETHCATESUC\n\nexport const GETHCATEERR = 'gethcateerr'\nexport type GETHCATEERR = typeof GETHCATEERR\n\nexport const ADD2CAR = 'add2car'\nexport type ADD2CAR = typeof ADD2CAR\n\nexport const LESS2CAR = 'less2car'\nexport type LESS2CAR = typeof LESS2CAR\n\nexport const RESETCAR = 'resetcar'\nexport type RESETCAR = typeof RESETCAR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/sagas.ts",["645"],"import { put } from 'redux-saga/effects'\nimport * as types from './actions'\n\nfunction* GetShopCar(action: any) {\n  yield put({ type: types.GETSHOP })\n\n}\n\nexport { types, GetShopCar };\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/front/shopcar/actions.ts",["646","647","648"],"export const GETSHOP = 'getshop'\nexport type GETSHOP = typeof GETSHOP\n\nexport const GETSHOPSUC = 'getshopsuc'\nexport type GETSHOPSUC = typeof GETSHOPSUC\n\nexport const GETSHOPERR = 'getshoperr'\nexport type GETSHOPERR = typeof GETSHOPERR\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/error/NotAuth.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/error/NotFound.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/waiter/Waiter.tsx",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/components/CateFoodDetail.tsx",["649"],"import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { Card } from \"antd-mobile\";\nimport img from '../assets/images/dish1.jpeg'\nimport '../style/stepper.css'\nimport { Button } from \"antd\";\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { SERVER_URL } from \"../common/api\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { ADD2CAR, LESS2CAR } from \"../pages/front/home/actions\";\n\ninterface OwnProps {\n  [prop: string]: any,\n\n  dish?: any,\n\n  add2car(val: any): () => void,\n\n  less2car(val: any): () => void\n\n}\n\ntype Props = OwnProps;\nconst mapStateToProps = (state: any) => ({\n  shopcar: state.home.shopcar || []\n})\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  add2car(val: object) {\n    dispatch({\n      type: ADD2CAR,\n      data: val\n    })\n  },\n  less2car(val: object) {\n    dispatch({\n      type: LESS2CAR,\n      data: val\n    })\n  }\n})\n\nconst CateFoodDetail: FunctionComponent<Props> = (props) => {\n\n  const [orders, setOrder] = useState([])\n  const [dishes, setDishes] = useState([])\n  const [num, SetNum] = useState([0])\n\n  useEffect(() => {\n    if (props.dish) setDishes(JSON.parse(JSON.stringify(props.dish)))\n    setOrder(JSON.parse(JSON.stringify(props.shopcar)))\n  }, [props])\n\n\n  const plus = (order: object) => {\n    // @ts-ignore\n    order.url = order.picture\n    props.add2car(order)\n  }\n\n  useEffect(() => {\n    console.log('dishes', dishes)\n    console.log(orders)\n\n    // @ts-ignore\n    const num = dishes.map((value: any, index: number) => value.num = orders.filter((val: any) => val._id === value._id)[0]?.num ?? 0)\n    SetNum(num)\n  }, [dishes])\n\n  const less = (order: object) => {\n    props.less2car(order)\n  }\n\n  return (\n      <div style={{ width: '66vw', marginTop: '.7rem' }}>\n        {\n          dishes && dishes.map((order: any, index: number) => {\n            return (\n                <div key={index}>\n                  {\n                    orders && <Card key={index} style={{ marginBottom: 10 }}>\n                      <Card.Body>\n                        {\n                          order.picture === '' ?\n                              <img src={img} alt=\"\" className='img' style={{ objectFit: \"cover\", top: 0, left: 0 }}/> :\n                              <img src={`${SERVER_URL}${order.picture}`} className='img'\n                                   style={{ objectFit: \"cover\", top: 0, left: 0 }} alt=''/>\n                        }\n                        <div style={{ display: \"flex\", position: \"relative\" }}>\n                          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                            <span className='dish-titles'>{order.name}</span>\n                            <span className='dish-prices'>¥ {order.price}</span>\n                          </div>\n                        </div>\n                        <div className='numutil'>\n                          <Button shape=\"circle\" size={\"small\"} onClick={() => {\n                            less(order)\n                          }} icon={<MinusOutlined/>}/>\n                          <span style={{ margin: '0 .5rem' }}>{num[index]}</span>\n                          <Button shape=\"circle\" size={\"small\"} onClick={() => {\n                            console.log('order98', order)\n                            plus(order)\n                          }}\n                                  style={{ backgroundColor: 'rgb(35, 45, 57)', color: 'white' }}\n                                  icon={<PlusOutlined/>}/>\n                        </div>\n                      </Card.Body>\n                    </Card>\n                  }\n                </div>\n            )\n          })\n        }\n      </div>\n  );\n};\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(CateFoodDetail)\n","/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/index.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/reducers.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/sagas.ts",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/Table.tsx",["650","651","652","653","654","655"],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/TableWrap.js",[],"/Users/clearlove/WebstormProjects/Ts-restaurant-ordering-system/src/pages/admin/table/action.ts",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],{"ruleId":"673","replacedBy":"674"},{"ruleId":"675","replacedBy":"676"},{"ruleId":"677","severity":1,"message":"678","line":30,"column":19,"nodeType":"679","messageId":"680","endLine":30,"endColumn":26},{"ruleId":"681","severity":1,"message":"682","line":60,"column":6,"nodeType":"683","endLine":60,"endColumn":20,"suggestions":"684"},{"ruleId":"677","severity":1,"message":"685","line":3,"column":69,"nodeType":"679","messageId":"680","endLine":3,"endColumn":79},{"ruleId":"677","severity":1,"message":"686","line":5,"column":10,"nodeType":"679","messageId":"680","endLine":5,"endColumn":24},{"ruleId":"677","severity":1,"message":"687","line":178,"column":9,"nodeType":"679","messageId":"680","endLine":178,"endColumn":17},{"ruleId":"681","severity":1,"message":"688","line":190,"column":6,"nodeType":"683","endLine":190,"endColumn":58,"suggestions":"689"},{"ruleId":"681","severity":1,"message":"690","line":197,"column":6,"nodeType":"683","endLine":197,"endColumn":18,"suggestions":"691"},{"ruleId":"692","severity":1,"message":"693","line":207,"column":18,"nodeType":"694","messageId":"695","endLine":207,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":216,"column":18,"nodeType":"694","messageId":"695","endLine":216,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":222,"column":18,"nodeType":"694","messageId":"695","endLine":222,"endColumn":20},{"ruleId":"681","severity":1,"message":"696","line":261,"column":6,"nodeType":"683","endLine":261,"endColumn":15,"suggestions":"697"},{"ruleId":"681","severity":1,"message":"698","line":267,"column":6,"nodeType":"683","endLine":267,"endColumn":26,"suggestions":"699"},{"ruleId":"677","severity":1,"message":"685","line":17,"column":3,"nodeType":"679","messageId":"680","endLine":17,"endColumn":13},{"ruleId":"700","severity":1,"message":"701","line":112,"column":43,"nodeType":"702","endLine":114,"endColumn":10},{"ruleId":"681","severity":1,"message":"688","line":216,"column":6,"nodeType":"683","endLine":216,"endColumn":58,"suggestions":"703"},{"ruleId":"681","severity":1,"message":"690","line":223,"column":6,"nodeType":"683","endLine":223,"endColumn":18,"suggestions":"704"},{"ruleId":"677","severity":1,"message":"705","line":313,"column":9,"nodeType":"679","messageId":"680","endLine":313,"endColumn":17},{"ruleId":"692","severity":1,"message":"693","line":345,"column":18,"nodeType":"694","messageId":"695","endLine":345,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":352,"column":18,"nodeType":"694","messageId":"695","endLine":352,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":358,"column":18,"nodeType":"694","messageId":"695","endLine":358,"endColumn":20},{"ruleId":"681","severity":1,"message":"696","line":396,"column":6,"nodeType":"683","endLine":396,"endColumn":15,"suggestions":"706"},{"ruleId":"681","severity":1,"message":"698","line":402,"column":6,"nodeType":"683","endLine":402,"endColumn":26,"suggestions":"707"},{"ruleId":"708","severity":1,"message":"709","line":9,"column":13,"nodeType":"679","messageId":"710","endLine":9,"endColumn":20},{"ruleId":"708","severity":1,"message":"711","line":12,"column":13,"nodeType":"679","messageId":"710","endLine":12,"endColumn":25},{"ruleId":"708","severity":1,"message":"712","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":23},{"ruleId":"708","severity":1,"message":"713","line":18,"column":13,"nodeType":"679","messageId":"710","endLine":18,"endColumn":21},{"ruleId":"708","severity":1,"message":"714","line":21,"column":13,"nodeType":"679","messageId":"710","endLine":21,"endColumn":25},{"ruleId":"708","severity":1,"message":"715","line":24,"column":13,"nodeType":"679","messageId":"710","endLine":24,"endColumn":27},{"ruleId":"673","replacedBy":"674"},{"ruleId":"675","replacedBy":"676"},{"ruleId":"708","severity":1,"message":"716","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":25},{"ruleId":"708","severity":1,"message":"717","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":27},{"ruleId":"708","severity":1,"message":"718","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":27},{"ruleId":"708","severity":1,"message":"719","line":12,"column":13,"nodeType":"679","messageId":"710","endLine":12,"endColumn":20},{"ruleId":"708","severity":1,"message":"720","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":23},{"ruleId":"708","severity":1,"message":"721","line":18,"column":13,"nodeType":"679","messageId":"710","endLine":18,"endColumn":23},{"ruleId":"708","severity":1,"message":"722","line":22,"column":13,"nodeType":"679","messageId":"710","endLine":22,"endColumn":21},{"ruleId":"708","severity":1,"message":"723","line":25,"column":13,"nodeType":"679","messageId":"710","endLine":25,"endColumn":24},{"ruleId":"708","severity":1,"message":"724","line":28,"column":13,"nodeType":"679","messageId":"710","endLine":28,"endColumn":24},{"ruleId":"708","severity":1,"message":"725","line":34,"column":13,"nodeType":"679","messageId":"710","endLine":34,"endColumn":20},{"ruleId":"708","severity":1,"message":"726","line":37,"column":13,"nodeType":"679","messageId":"710","endLine":37,"endColumn":23},{"ruleId":"708","severity":1,"message":"727","line":40,"column":13,"nodeType":"679","messageId":"710","endLine":40,"endColumn":23},{"ruleId":"708","severity":1,"message":"728","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":22},{"ruleId":"708","severity":1,"message":"729","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":24},{"ruleId":"708","severity":1,"message":"730","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":24},{"ruleId":"708","severity":1,"message":"731","line":11,"column":13,"nodeType":"679","messageId":"710","endLine":11,"endColumn":31},{"ruleId":"708","severity":1,"message":"732","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":23},{"ruleId":"708","severity":1,"message":"733","line":19,"column":13,"nodeType":"679","messageId":"710","endLine":19,"endColumn":20},{"ruleId":"708","severity":1,"message":"734","line":22,"column":13,"nodeType":"679","messageId":"710","endLine":22,"endColumn":23},{"ruleId":"708","severity":1,"message":"735","line":25,"column":13,"nodeType":"679","messageId":"710","endLine":25,"endColumn":23},{"ruleId":"708","severity":1,"message":"736","line":28,"column":13,"nodeType":"679","messageId":"710","endLine":28,"endColumn":28},{"ruleId":"708","severity":1,"message":"737","line":31,"column":13,"nodeType":"679","messageId":"710","endLine":31,"endColumn":24},{"ruleId":"708","severity":1,"message":"738","line":34,"column":13,"nodeType":"679","messageId":"710","endLine":34,"endColumn":21},{"ruleId":"708","severity":1,"message":"739","line":37,"column":13,"nodeType":"679","messageId":"710","endLine":37,"endColumn":20},{"ruleId":"708","severity":1,"message":"740","line":40,"column":13,"nodeType":"679","messageId":"710","endLine":40,"endColumn":23},{"ruleId":"708","severity":1,"message":"741","line":43,"column":13,"nodeType":"679","messageId":"710","endLine":43,"endColumn":23},{"ruleId":"708","severity":1,"message":"742","line":51,"column":13,"nodeType":"679","messageId":"710","endLine":51,"endColumn":23},{"ruleId":"708","severity":1,"message":"743","line":54,"column":13,"nodeType":"679","messageId":"710","endLine":54,"endColumn":21},{"ruleId":"708","severity":1,"message":"744","line":57,"column":13,"nodeType":"679","messageId":"710","endLine":57,"endColumn":23},{"ruleId":"708","severity":1,"message":"745","line":60,"column":13,"nodeType":"679","messageId":"710","endLine":60,"endColumn":20},{"ruleId":"708","severity":1,"message":"746","line":64,"column":13,"nodeType":"679","messageId":"710","endLine":64,"endColumn":23},{"ruleId":"708","severity":1,"message":"747","line":67,"column":13,"nodeType":"679","messageId":"710","endLine":67,"endColumn":21},{"ruleId":"708","severity":1,"message":"748","line":70,"column":13,"nodeType":"679","messageId":"710","endLine":70,"endColumn":24},{"ruleId":"708","severity":1,"message":"749","line":73,"column":13,"nodeType":"679","messageId":"710","endLine":73,"endColumn":22},{"ruleId":"708","severity":1,"message":"750","line":3,"column":13,"nodeType":"679","messageId":"710","endLine":3,"endColumn":21},{"ruleId":"708","severity":1,"message":"751","line":7,"column":13,"nodeType":"679","messageId":"710","endLine":7,"endColumn":22},{"ruleId":"708","severity":1,"message":"752","line":10,"column":13,"nodeType":"679","messageId":"710","endLine":10,"endColumn":21},{"ruleId":"708","severity":1,"message":"753","line":13,"column":13,"nodeType":"679","messageId":"710","endLine":13,"endColumn":25},{"ruleId":"708","severity":1,"message":"754","line":16,"column":13,"nodeType":"679","messageId":"710","endLine":16,"endColumn":26},{"ruleId":"708","severity":1,"message":"755","line":20,"column":13,"nodeType":"679","messageId":"710","endLine":20,"endColumn":21},{"ruleId":"708","severity":1,"message":"756","line":23,"column":13,"nodeType":"679","messageId":"710","endLine":23,"endColumn":25},{"ruleId":"708","severity":1,"message":"757","line":26,"column":13,"nodeType":"679","messageId":"710","endLine":26,"endColumn":24},{"ruleId":"708","severity":1,"message":"758","line":29,"column":13,"nodeType":"679","messageId":"710","endLine":29,"endColumn":24},{"ruleId":"708","severity":1,"message":"759","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":25},{"ruleId":"708","severity":1,"message":"760","line":36,"column":13,"nodeType":"679","messageId":"710","endLine":36,"endColumn":28},{"ruleId":"708","severity":1,"message":"761","line":39,"column":13,"nodeType":"679","messageId":"710","endLine":39,"endColumn":28},{"ruleId":"708","severity":1,"message":"762","line":42,"column":13,"nodeType":"679","messageId":"710","endLine":42,"endColumn":25},{"ruleId":"708","severity":1,"message":"763","line":45,"column":13,"nodeType":"679","messageId":"710","endLine":45,"endColumn":24},{"ruleId":"708","severity":1,"message":"764","line":49,"column":13,"nodeType":"679","messageId":"710","endLine":49,"endColumn":28},{"ruleId":"708","severity":1,"message":"765","line":52,"column":13,"nodeType":"679","messageId":"710","endLine":52,"endColumn":28},{"ruleId":"708","severity":1,"message":"766","line":55,"column":13,"nodeType":"679","messageId":"710","endLine":55,"endColumn":27},{"ruleId":"708","severity":1,"message":"767","line":58,"column":13,"nodeType":"679","messageId":"710","endLine":58,"endColumn":27},{"ruleId":"708","severity":1,"message":"768","line":62,"column":13,"nodeType":"679","messageId":"710","endLine":62,"endColumn":24},{"ruleId":"708","severity":1,"message":"769","line":65,"column":13,"nodeType":"679","messageId":"710","endLine":65,"endColumn":24},{"ruleId":"708","severity":1,"message":"770","line":68,"column":13,"nodeType":"679","messageId":"710","endLine":68,"endColumn":23},{"ruleId":"708","severity":1,"message":"771","line":71,"column":13,"nodeType":"679","messageId":"710","endLine":71,"endColumn":23},{"ruleId":"708","severity":1,"message":"772","line":75,"column":13,"nodeType":"679","messageId":"710","endLine":75,"endColumn":26},{"ruleId":"708","severity":1,"message":"773","line":78,"column":13,"nodeType":"679","messageId":"710","endLine":78,"endColumn":26},{"ruleId":"708","severity":1,"message":"774","line":81,"column":13,"nodeType":"679","messageId":"710","endLine":81,"endColumn":25},{"ruleId":"708","severity":1,"message":"775","line":84,"column":13,"nodeType":"679","messageId":"710","endLine":84,"endColumn":25},{"ruleId":"708","severity":1,"message":"776","line":89,"column":13,"nodeType":"679","messageId":"710","endLine":89,"endColumn":26},{"ruleId":"708","severity":1,"message":"777","line":93,"column":13,"nodeType":"679","messageId":"710","endLine":93,"endColumn":20},{"ruleId":"708","severity":1,"message":"778","line":97,"column":13,"nodeType":"679","messageId":"710","endLine":97,"endColumn":19},{"ruleId":"708","severity":1,"message":"779","line":101,"column":13,"nodeType":"679","messageId":"710","endLine":101,"endColumn":22},{"ruleId":"708","severity":1,"message":"780","line":105,"column":13,"nodeType":"679","messageId":"710","endLine":105,"endColumn":23},{"ruleId":"708","severity":1,"message":"781","line":110,"column":13,"nodeType":"679","messageId":"710","endLine":110,"endColumn":25},{"ruleId":"708","severity":1,"message":"782","line":113,"column":13,"nodeType":"679","messageId":"710","endLine":113,"endColumn":29},{"ruleId":"677","severity":1,"message":"686","line":6,"column":18,"nodeType":"679","messageId":"680","endLine":6,"endColumn":32},{"ruleId":"677","severity":1,"message":"783","line":90,"column":19,"nodeType":"679","messageId":"680","endLine":90,"endColumn":29},{"ruleId":"681","severity":1,"message":"688","line":104,"column":6,"nodeType":"683","endLine":104,"endColumn":58,"suggestions":"784"},{"ruleId":"681","severity":1,"message":"690","line":148,"column":6,"nodeType":"683","endLine":148,"endColumn":18,"suggestions":"785"},{"ruleId":"692","severity":1,"message":"693","line":158,"column":17,"nodeType":"694","messageId":"695","endLine":158,"endColumn":19},{"ruleId":"692","severity":1,"message":"693","line":165,"column":17,"nodeType":"694","messageId":"695","endLine":165,"endColumn":19},{"ruleId":"692","severity":1,"message":"693","line":171,"column":17,"nodeType":"694","messageId":"695","endLine":171,"endColumn":19},{"ruleId":"681","severity":1,"message":"698","line":176,"column":6,"nodeType":"683","endLine":176,"endColumn":73,"suggestions":"786"},{"ruleId":"708","severity":1,"message":"787","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":30},{"ruleId":"708","severity":1,"message":"788","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":27},{"ruleId":"708","severity":1,"message":"789","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":30},{"ruleId":"708","severity":1,"message":"790","line":12,"column":13,"nodeType":"679","messageId":"710","endLine":12,"endColumn":24},{"ruleId":"708","severity":1,"message":"791","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":27},{"ruleId":"708","severity":1,"message":"792","line":18,"column":13,"nodeType":"679","messageId":"710","endLine":18,"endColumn":27},{"ruleId":"708","severity":1,"message":"793","line":22,"column":13,"nodeType":"679","messageId":"710","endLine":22,"endColumn":23},{"ruleId":"708","severity":1,"message":"794","line":25,"column":13,"nodeType":"679","messageId":"710","endLine":25,"endColumn":26},{"ruleId":"708","severity":1,"message":"795","line":28,"column":13,"nodeType":"679","messageId":"710","endLine":28,"endColumn":26},{"ruleId":"708","severity":1,"message":"796","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":23},{"ruleId":"708","severity":1,"message":"797","line":35,"column":13,"nodeType":"679","messageId":"710","endLine":35,"endColumn":26},{"ruleId":"708","severity":1,"message":"798","line":38,"column":13,"nodeType":"679","messageId":"710","endLine":38,"endColumn":26},{"ruleId":"677","severity":1,"message":"685","line":10,"column":3,"nodeType":"679","messageId":"680","endLine":10,"endColumn":13},{"ruleId":"677","severity":1,"message":"686","line":19,"column":10,"nodeType":"679","messageId":"680","endLine":19,"endColumn":24},{"ruleId":"677","severity":1,"message":"799","line":19,"column":26,"nodeType":"679","messageId":"680","endLine":19,"endColumn":38},{"ruleId":"677","severity":1,"message":"800","line":212,"column":13,"nodeType":"679","messageId":"680","endLine":212,"endColumn":20},{"ruleId":"681","severity":1,"message":"688","line":242,"column":10,"nodeType":"683","endLine":242,"endColumn":62,"suggestions":"801"},{"ruleId":"681","severity":1,"message":"690","line":249,"column":10,"nodeType":"683","endLine":249,"endColumn":22,"suggestions":"802"},{"ruleId":"692","severity":1,"message":"693","line":258,"column":25,"nodeType":"694","messageId":"695","endLine":258,"endColumn":27},{"ruleId":"692","severity":1,"message":"693","line":265,"column":25,"nodeType":"694","messageId":"695","endLine":265,"endColumn":27},{"ruleId":"692","severity":1,"message":"693","line":271,"column":25,"nodeType":"694","messageId":"695","endLine":271,"endColumn":27},{"ruleId":"681","severity":1,"message":"698","line":276,"column":14,"nodeType":"683","endLine":276,"endColumn":69,"suggestions":"803"},{"ruleId":"681","severity":1,"message":"696","line":301,"column":10,"nodeType":"683","endLine":301,"endColumn":19,"suggestions":"804"},{"ruleId":"681","severity":1,"message":"698","line":307,"column":10,"nodeType":"683","endLine":307,"endColumn":30,"suggestions":"805"},{"ruleId":"677","severity":1,"message":"806","line":4,"column":3,"nodeType":"679","messageId":"680","endLine":4,"endColumn":13},{"ruleId":"677","severity":1,"message":"807","line":4,"column":15,"nodeType":"679","messageId":"680","endLine":4,"endColumn":28},{"ruleId":"677","severity":1,"message":"808","line":4,"column":10,"nodeType":"679","messageId":"680","endLine":4,"endColumn":25},{"ruleId":"708","severity":1,"message":"809","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":26},{"ruleId":"708","severity":1,"message":"810","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":23},{"ruleId":"708","severity":1,"message":"811","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":26},{"ruleId":"708","severity":1,"message":"812","line":12,"column":13,"nodeType":"679","messageId":"710","endLine":12,"endColumn":20},{"ruleId":"708","severity":1,"message":"813","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":23},{"ruleId":"708","severity":1,"message":"814","line":18,"column":13,"nodeType":"679","messageId":"710","endLine":18,"endColumn":23},{"ruleId":"708","severity":1,"message":"815","line":22,"column":13,"nodeType":"679","messageId":"710","endLine":22,"endColumn":19},{"ruleId":"708","severity":1,"message":"816","line":25,"column":13,"nodeType":"679","messageId":"710","endLine":25,"endColumn":22},{"ruleId":"708","severity":1,"message":"817","line":28,"column":13,"nodeType":"679","messageId":"710","endLine":28,"endColumn":22},{"ruleId":"708","severity":1,"message":"818","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":19},{"ruleId":"708","severity":1,"message":"819","line":35,"column":13,"nodeType":"679","messageId":"710","endLine":35,"endColumn":22},{"ruleId":"708","severity":1,"message":"820","line":38,"column":13,"nodeType":"679","messageId":"710","endLine":38,"endColumn":22},{"ruleId":"677","severity":1,"message":"821","line":2,"column":8,"nodeType":"679","messageId":"680","endLine":2,"endColumn":16},{"ruleId":"677","severity":1,"message":"822","line":3,"column":13,"nodeType":"679","messageId":"680","endLine":3,"endColumn":18},{"ruleId":"700","severity":1,"message":"701","line":111,"column":25,"nodeType":"702","endLine":113,"endColumn":10},{"ruleId":"681","severity":1,"message":"688","line":180,"column":6,"nodeType":"683","endLine":180,"endColumn":58,"suggestions":"823"},{"ruleId":"681","severity":1,"message":"696","line":186,"column":6,"nodeType":"683","endLine":186,"endColumn":15,"suggestions":"824"},{"ruleId":"681","severity":1,"message":"698","line":193,"column":6,"nodeType":"683","endLine":193,"endColumn":26,"suggestions":"825"},{"ruleId":"692","severity":1,"message":"693","line":242,"column":18,"nodeType":"694","messageId":"695","endLine":242,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":251,"column":18,"nodeType":"694","messageId":"695","endLine":251,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":257,"column":18,"nodeType":"694","messageId":"695","endLine":257,"endColumn":20},{"ruleId":"708","severity":1,"message":"826","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":28},{"ruleId":"708","severity":1,"message":"827","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":25},{"ruleId":"708","severity":1,"message":"828","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":28},{"ruleId":"708","severity":1,"message":"829","line":12,"column":13,"nodeType":"679","messageId":"710","endLine":12,"endColumn":22},{"ruleId":"708","severity":1,"message":"830","line":15,"column":13,"nodeType":"679","messageId":"710","endLine":15,"endColumn":25},{"ruleId":"708","severity":1,"message":"831","line":18,"column":13,"nodeType":"679","messageId":"710","endLine":18,"endColumn":25},{"ruleId":"708","severity":1,"message":"832","line":22,"column":13,"nodeType":"679","messageId":"710","endLine":22,"endColumn":21},{"ruleId":"708","severity":1,"message":"833","line":25,"column":13,"nodeType":"679","messageId":"710","endLine":25,"endColumn":24},{"ruleId":"708","severity":1,"message":"834","line":28,"column":13,"nodeType":"679","messageId":"710","endLine":28,"endColumn":24},{"ruleId":"708","severity":1,"message":"835","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":21},{"ruleId":"708","severity":1,"message":"836","line":35,"column":13,"nodeType":"679","messageId":"710","endLine":35,"endColumn":24},{"ruleId":"708","severity":1,"message":"837","line":38,"column":13,"nodeType":"679","messageId":"710","endLine":38,"endColumn":24},{"ruleId":"677","severity":1,"message":"838","line":2,"column":18,"nodeType":"679","messageId":"680","endLine":2,"endColumn":22},{"ruleId":"677","severity":1,"message":"839","line":3,"column":10,"nodeType":"679","messageId":"680","endLine":3,"endColumn":13},{"ruleId":"677","severity":1,"message":"840","line":3,"column":20,"nodeType":"679","messageId":"680","endLine":3,"endColumn":24},{"ruleId":"677","severity":1,"message":"841","line":3,"column":26,"nodeType":"679","messageId":"680","endLine":3,"endColumn":30},{"ruleId":"677","severity":1,"message":"842","line":4,"column":10,"nodeType":"679","messageId":"680","endLine":4,"endColumn":23},{"ruleId":"681","severity":1,"message":"696","line":106,"column":6,"nodeType":"683","endLine":106,"endColumn":8,"suggestions":"843"},{"ruleId":"681","severity":1,"message":"690","line":116,"column":6,"nodeType":"683","endLine":116,"endColumn":20,"suggestions":"844"},{"ruleId":"708","severity":1,"message":"845","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":25},{"ruleId":"708","severity":1,"message":"846","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":28},{"ruleId":"677","severity":1,"message":"847","line":1,"column":38,"nodeType":"679","messageId":"680","endLine":1,"endColumn":45},{"ruleId":"681","severity":1,"message":"848","line":51,"column":6,"nodeType":"683","endLine":51,"endColumn":8,"suggestions":"849"},{"ruleId":"677","severity":1,"message":"850","line":62,"column":55,"nodeType":"679","messageId":"680","endLine":62,"endColumn":58},{"ruleId":"692","severity":1,"message":"693","line":143,"column":17,"nodeType":"694","messageId":"695","endLine":143,"endColumn":19},{"ruleId":"681","severity":1,"message":"698","line":158,"column":6,"nodeType":"683","endLine":158,"endColumn":42,"suggestions":"851"},{"ruleId":"708","severity":1,"message":"852","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":25},{"ruleId":"708","severity":1,"message":"853","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":28},{"ruleId":"708","severity":1,"message":"854","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":28},{"ruleId":"677","severity":1,"message":"855","line":1,"column":36,"nodeType":"679","messageId":"680","endLine":1,"endColumn":45},{"ruleId":"677","severity":1,"message":"856","line":64,"column":14,"nodeType":"679","messageId":"680","endLine":64,"endColumn":35},{"ruleId":"677","severity":1,"message":"857","line":64,"column":37,"nodeType":"679","messageId":"680","endLine":64,"endColumn":50},{"ruleId":"677","severity":1,"message":"858","line":70,"column":13,"nodeType":"679","messageId":"680","endLine":70,"endColumn":27},{"ruleId":"677","severity":1,"message":"859","line":75,"column":13,"nodeType":"679","messageId":"680","endLine":75,"endColumn":20},{"ruleId":"677","severity":1,"message":"860","line":86,"column":16,"nodeType":"679","messageId":"680","endLine":86,"endColumn":27},{"ruleId":"677","severity":1,"message":"861","line":91,"column":16,"nodeType":"679","messageId":"680","endLine":91,"endColumn":28},{"ruleId":"681","severity":1,"message":"696","line":107,"column":10,"nodeType":"683","endLine":107,"endColumn":12,"suggestions":"862"},{"ruleId":"677","severity":1,"message":"685","line":2,"column":69,"nodeType":"679","messageId":"680","endLine":2,"endColumn":79},{"ruleId":"677","severity":1,"message":"863","line":240,"column":9,"nodeType":"679","messageId":"680","endLine":240,"endColumn":18},{"ruleId":"681","severity":1,"message":"688","line":273,"column":6,"nodeType":"683","endLine":273,"endColumn":58,"suggestions":"864"},{"ruleId":"681","severity":1,"message":"690","line":280,"column":6,"nodeType":"683","endLine":280,"endColumn":18,"suggestions":"865"},{"ruleId":"692","severity":1,"message":"693","line":290,"column":17,"nodeType":"694","messageId":"695","endLine":290,"endColumn":19},{"ruleId":"692","severity":1,"message":"693","line":299,"column":17,"nodeType":"694","messageId":"695","endLine":299,"endColumn":19},{"ruleId":"692","severity":1,"message":"693","line":305,"column":17,"nodeType":"694","messageId":"695","endLine":305,"endColumn":19},{"ruleId":"681","severity":1,"message":"698","line":314,"column":6,"nodeType":"683","endLine":314,"endColumn":58,"suggestions":"866"},{"ruleId":"681","severity":1,"message":"696","line":341,"column":6,"nodeType":"683","endLine":341,"endColumn":15,"suggestions":"867"},{"ruleId":"681","severity":1,"message":"698","line":347,"column":6,"nodeType":"683","endLine":347,"endColumn":26,"suggestions":"868"},{"ruleId":"708","severity":1,"message":"728","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":22},{"ruleId":"708","severity":1,"message":"869","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":20},{"ruleId":"708","severity":1,"message":"732","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":23},{"ruleId":"708","severity":1,"message":"870","line":11,"column":13,"nodeType":"679","messageId":"710","endLine":11,"endColumn":21},{"ruleId":"708","severity":1,"message":"742","line":14,"column":13,"nodeType":"679","messageId":"710","endLine":14,"endColumn":23},{"ruleId":"708","severity":1,"message":"743","line":17,"column":13,"nodeType":"679","messageId":"710","endLine":17,"endColumn":21},{"ruleId":"708","severity":1,"message":"744","line":20,"column":13,"nodeType":"679","messageId":"710","endLine":20,"endColumn":23},{"ruleId":"708","severity":1,"message":"745","line":23,"column":13,"nodeType":"679","messageId":"710","endLine":23,"endColumn":20},{"ruleId":"708","severity":1,"message":"871","line":26,"column":13,"nodeType":"679","messageId":"710","endLine":26,"endColumn":21},{"ruleId":"708","severity":1,"message":"746","line":29,"column":13,"nodeType":"679","messageId":"710","endLine":29,"endColumn":23},{"ruleId":"708","severity":1,"message":"747","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":21},{"ruleId":"708","severity":1,"message":"872","line":35,"column":13,"nodeType":"679","messageId":"710","endLine":35,"endColumn":22},{"ruleId":"708","severity":1,"message":"748","line":38,"column":13,"nodeType":"679","messageId":"710","endLine":38,"endColumn":24},{"ruleId":"708","severity":1,"message":"749","line":41,"column":13,"nodeType":"679","messageId":"710","endLine":41,"endColumn":22},{"ruleId":"677","severity":1,"message":"873","line":55,"column":11,"nodeType":"679","messageId":"680","endLine":55,"endColumn":14},{"ruleId":"681","severity":1,"message":"874","line":56,"column":6,"nodeType":"683","endLine":56,"endColumn":8,"suggestions":"875"},{"ruleId":"681","severity":1,"message":"876","line":51,"column":6,"nodeType":"683","endLine":51,"endColumn":28,"suggestions":"877"},{"ruleId":"677","severity":1,"message":"878","line":40,"column":12,"nodeType":"679","messageId":"680","endLine":40,"endColumn":22},{"ruleId":"708","severity":1,"message":"879","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":21},{"ruleId":"708","severity":1,"message":"880","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":24},{"ruleId":"708","severity":1,"message":"881","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":24},{"ruleId":"708","severity":1,"message":"882","line":11,"column":13,"nodeType":"679","messageId":"710","endLine":11,"endColumn":21},{"ruleId":"708","severity":1,"message":"883","line":14,"column":13,"nodeType":"679","messageId":"710","endLine":14,"endColumn":24},{"ruleId":"708","severity":1,"message":"884","line":17,"column":13,"nodeType":"679","messageId":"710","endLine":17,"endColumn":24},{"ruleId":"708","severity":1,"message":"885","line":20,"column":13,"nodeType":"679","messageId":"710","endLine":20,"endColumn":20},{"ruleId":"708","severity":1,"message":"886","line":23,"column":13,"nodeType":"679","messageId":"710","endLine":23,"endColumn":21},{"ruleId":"708","severity":1,"message":"887","line":26,"column":13,"nodeType":"679","messageId":"710","endLine":26,"endColumn":21},{"ruleId":"677","severity":1,"message":"888","line":6,"column":11,"nodeType":"679","messageId":"680","endLine":6,"endColumn":21},{"ruleId":"708","severity":1,"message":"889","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":20},{"ruleId":"708","severity":1,"message":"890","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":23},{"ruleId":"708","severity":1,"message":"891","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":23},{"ruleId":"681","severity":1,"message":"892","line":67,"column":6,"nodeType":"683","endLine":67,"endColumn":14,"suggestions":"893"},{"ruleId":"677","severity":1,"message":"894","line":92,"column":10,"nodeType":"679","messageId":"680","endLine":92,"endColumn":20},{"ruleId":"677","severity":1,"message":"895","line":92,"column":22,"nodeType":"679","messageId":"680","endLine":92,"endColumn":35},{"ruleId":"692","severity":1,"message":"693","line":161,"column":18,"nodeType":"694","messageId":"695","endLine":161,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":170,"column":18,"nodeType":"694","messageId":"695","endLine":170,"endColumn":20},{"ruleId":"692","severity":1,"message":"693","line":178,"column":18,"nodeType":"694","messageId":"695","endLine":178,"endColumn":20},{"ruleId":"681","severity":1,"message":"696","line":190,"column":6,"nodeType":"683","endLine":190,"endColumn":8,"suggestions":"896"},{"ruleId":"708","severity":1,"message":"897","line":2,"column":13,"nodeType":"679","messageId":"710","endLine":2,"endColumn":22},{"ruleId":"708","severity":1,"message":"898","line":5,"column":13,"nodeType":"679","messageId":"710","endLine":5,"endColumn":25},{"ruleId":"708","severity":1,"message":"899","line":8,"column":13,"nodeType":"679","messageId":"710","endLine":8,"endColumn":25},{"ruleId":"708","severity":1,"message":"900","line":11,"column":13,"nodeType":"679","messageId":"710","endLine":11,"endColumn":21},{"ruleId":"708","severity":1,"message":"901","line":14,"column":13,"nodeType":"679","messageId":"710","endLine":14,"endColumn":24},{"ruleId":"708","severity":1,"message":"902","line":17,"column":13,"nodeType":"679","messageId":"710","endLine":17,"endColumn":24},{"ruleId":"708","severity":1,"message":"903","line":20,"column":13,"nodeType":"679","messageId":"710","endLine":20,"endColumn":25},{"ruleId":"708","severity":1,"message":"904","line":23,"column":13,"nodeType":"679","messageId":"710","endLine":23,"endColumn":21},{"ruleId":"708","severity":1,"message":"905","line":26,"column":13,"nodeType":"679","messageId":"710","endLine":26,"endColumn":24},{"ruleId":"708","severity":1,"message":"906","line":29,"column":13,"nodeType":"679","messageId":"710","endLine":29,"endColumn":24},{"ruleId":"708","severity":1,"message":"907","line":32,"column":13,"nodeType":"679","messageId":"710","endLine":32,"endColumn":22},{"ruleId":"708","severity":1,"message":"908","line":35,"column":13,"nodeType":"679","messageId":"710","endLine":35,"endColumn":25},{"ruleId":"708","severity":1,"message":"909","line":38,"column":13,"nodeType":"679","messageId":"710","endLine":38,"endColumn":25},{"ruleId":"708","severity":1,"message":"910","line":41,"column":13,"nodeType":"679","messageId":"710","endLine":41,"endColumn":21},{"ruleId":"708","severity":1,"message":"911","line":44,"column":13,"nodeType":"679","messageId":"710","endLine":44,"endColumn":24},{"ruleId":"708","severity":1,"message":"912","line":47,"column":13,"nodeType":"679","messageId":"710","endLine":47,"endColumn":24},{"ruleId":"708","severity":1,"message":"913","line":50,"column":13,"nodeType":"679","messageId":"710","endLine":50,"endColumn":30},"no-native-reassign",["914"],"no-negated-in-lhs",["915"],"@typescript-eslint/no-unused-vars","'ADD2CAR' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["916"],"'Popconfirm' is defined but never used.","'DeleteOutlined' is defined but never used.","'del_cate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageMsg' and 'props'. Either include them or remove the dependency array.",["917"],"React Hook useMemo has a missing dependency: 'props'. Either include it or remove the dependency array.",["918"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["919"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["920"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["921"],["922"],"'del_dish' is assigned a value but never used.",["923"],["924"],"@typescript-eslint/no-redeclare","'TOLOGIN' is already defined.","redeclared","'SUCCESSLOGIN' is already defined.","'ERRORLOGIN' is already defined.","'NETERROR' is already defined.","'CHEFLOGINSUC' is already defined.","'WAITERLOGINSUC' is already defined.","'GETCATELISTS' is already defined.","'GETCATELISTSUC' is already defined.","'GETCATELISTERR' is already defined.","'CATEADD' is already defined.","'CATEADDSUC' is already defined.","'CATEADDERR' is already defined.","'CATEEDIT' is already defined.","'CATEEDITSUC' is already defined.","'CATEEDITERR' is already defined.","'CATEDEL' is already defined.","'CATEDELSUC' is already defined.","'CATEDELERR' is already defined.","'GETFAILED' is already defined.","'GETDISHLIST' is already defined.","'GETCATELIST' is already defined.","'GETCATELISTSUCCESS' is already defined.","'GETSUCCESS' is already defined.","'ADDDISH' is already defined.","'ADDDISHSUC' is already defined.","'ADDDISHERR' is already defined.","'EDITDISHDISHSUC' is already defined.","'EDITDISHERR' is already defined.","'EDITDISH' is already defined.","'DELDISH' is already defined.","'DELDISHSUC' is already defined.","'DELDISHERR' is already defined.","'ADDSUCCESS' is already defined.","'ADDERROR' is already defined.","'TOGGLEPAGE' is already defined.","'TOGGLED' is already defined.","'DELSUCCESS' is already defined.","'DELERROR' is already defined.","'EDITSUCCESS' is already defined.","'EDITERROR' is already defined.","'LoginApi' is already defined.","'STAFFLIST' is already defined.","'STAFFADD' is already defined.","'DELSTAFF_URL' is already defined.","'EDITSTAFF_URL' is already defined.","'DISHLIST' is already defined.","'CATELIST_URL' is already defined.","'ADDDISH_URL' is already defined.","'DELDISH_URL' is already defined.","'EDITDISH_URL' is already defined.","'GETCATELIST_URL' is already defined.","'ADDCATELIST_URL' is already defined.","'EDITCATE_URL' is already defined.","'DELCATE_URL' is already defined.","'CUSCATELIST_URL' is already defined.","'CUSCATEEDIT_URL' is already defined.","'CUSCATEDEL_URL' is already defined.","'CUSCATEADD_URL' is already defined.","'CUSLIST_URL' is already defined.","'CUSEDIT_URL' is already defined.","'CUSDEL_URL' is already defined.","'CUSADD_URL' is already defined.","'ORDERLIST_URL' is already defined.","'ORDEREDIT_URL' is already defined.","'ORDERDEL_URL' is already defined.","'ORDERADD_URL' is already defined.","'DASHBOARD_URL' is already defined.","'PWD_URL' is already defined.","'QR_URL' is already defined.","'UPPIC_URL' is already defined.","'SERVER_URL' is already defined.","'HOMEDOSH_URL' is already defined.","'HOMEDISHCATE_URL' is already defined.","'setPageMsg' is assigned a value but never used.",["925"],["926"],["927"],"'GETCUSCATELISTERR' is already defined.","'GETCUSCATELIST' is already defined.","'GETCUSCATELISTSUC' is already defined.","'CUSCATEEDIT' is already defined.","'CUSCATEEDITSUC' is already defined.","'CUSCATEEDITERR' is already defined.","'CUSCATEDEL' is already defined.","'CUSCATEDELSUC' is already defined.","'CUSCATEDELERR' is already defined.","'CUSCATEADD' is already defined.","'CUSCATEADDSUC' is already defined.","'CUSCATEADDERR' is already defined.","'EditOutlined' is defined but never used.","'del_cus' is assigned a value but never used.",["928"],["929"],["930"],["931"],["932"],"'GETCUSLIST' is defined but never used.","'GETCUSLISTERR' is defined but never used.","'CUSCATELIST_URL' is defined but never used.","'GETCUSLISTERR' is already defined.","'GETCUSLIST' is already defined.","'GETCUSLISTSUC' is already defined.","'CUSEDIT' is already defined.","'CUSEDITSUC' is already defined.","'CUSEDITERR' is already defined.","'CUSDEL' is already defined.","'CUSDELSUC' is already defined.","'CUSDELERR' is already defined.","'CUSADD' is already defined.","'CUSADDSUC' is already defined.","'CUSADDERR' is already defined.","'reducers' is defined but never used.","'sagas' is defined but never used.",["933"],["934"],["935"],"'GETORDERLISTERR' is already defined.","'GETORDERLIST' is already defined.","'GETORDERLISTSUC' is already defined.","'ORDEREDIT' is already defined.","'ORDEREDITSUC' is already defined.","'ORDEREDITERR' is already defined.","'ORDERDEL' is already defined.","'ORDERDELSUC' is already defined.","'ORDERDELERR' is already defined.","'ORDERADD' is already defined.","'ORDERADDSUC' is already defined.","'ORDERADDERR' is already defined.","'Card' is defined but never used.","'del' is defined but never used.","'post' is defined but never used.","'puts' is defined but never used.","'DASHBOARD_URL' is defined but never used.",["936"],["937"],"'GETDASHBOARD' is already defined.","'GETDASHBOARDSUC' is already defined.","'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.",["938"],"'ref' is assigned a value but never used.",["939"],"'EDITUSERINFO' is already defined.","'EDITUSERINFOSUC' is already defined.","'EDITUSERINFOERR' is already defined.","'useEffect' is defined but never used.","'selectedItemClassName' is assigned a value but never used.","'setClickClass' is assigned a value but never used.","'searchBarState' is assigned a value but never used.","'shopcar' is assigned a value but never used.","'clickSearch' is defined but never used.","'searchSubmit' is defined but never used.",["940"],"'del_staff' is assigned a value but never used.",["941"],["942"],["943"],["944"],["945"],"'GETLIST' is already defined.","'ADDSTAFF' is already defined.","'DELSTAFF' is already defined.","'EDITSTAFF' is already defined.","'car' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.shopcar'. Either include it or remove the dependency array.",["946"],"React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["947"],"'changeCate' is defined but never used.","'GETHDISH' is already defined.","'GETHDISHSUC' is already defined.","'GETHDISHERR' is already defined.","'GETHCATE' is already defined.","'GETHCATESUC' is already defined.","'GETHCATEERR' is already defined.","'ADD2CAR' is already defined.","'LESS2CAR' is already defined.","'RESETCAR' is already defined.","'GetShopCar' is defined but never used.","'GETSHOP' is already defined.","'GETSHOPSUC' is already defined.","'GETSHOPERR' is already defined.","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["948"],"'editValues' is assigned a value but never used.","'setEditValues' is assigned a value but never used.",["949"],"'GETQRCODE' is already defined.","'GETQRCODESUC' is already defined.","'GETQRCODEERR' is already defined.","'GETTABLE' is already defined.","'GETTABLESUC' is already defined.","'GETTABLEERR' is already defined.","'GETTSTAFFSUC' is already defined.","'ADDTABLE' is already defined.","'ADDTABLESUC' is already defined.","'ADDTABLEERR' is already defined.","'EDITTABLE' is already defined.","'EDITTABLESUC' is already defined.","'EDITTABLEERR' is already defined.","'DELTABLE' is already defined.","'DELTABLESUC' is already defined.","'DELTABLEERR' is already defined.","'GETARRAYQRCODESUC' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"952","fix":"960"},{"desc":"954","fix":"961"},{"desc":"956","fix":"962"},{"desc":"958","fix":"963"},{"desc":"952","fix":"964"},{"desc":"954","fix":"965"},{"desc":"966","fix":"967"},{"desc":"952","fix":"968"},{"desc":"954","fix":"969"},{"desc":"970","fix":"971"},{"desc":"956","fix":"972"},{"desc":"958","fix":"973"},{"desc":"952","fix":"974"},{"desc":"956","fix":"975"},{"desc":"958","fix":"976"},{"desc":"954","fix":"977"},{"desc":"954","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"954","fix":"983"},{"desc":"952","fix":"984"},{"desc":"954","fix":"985"},{"desc":"986","fix":"987"},{"desc":"956","fix":"988"},{"desc":"958","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"954","fix":"996"},"Update the dependencies array to be: [history, props, props.status]",{"range":"997","text":"998"},"Update the dependencies array to be: [props.list.total, props.list.page, props.list.size, props, pageMsg]",{"range":"999","text":"1000"},"Update the dependencies array to be: [props]",{"range":"1001","text":"1002"},"Update the dependencies array to be: [pageMsg, props]",{"range":"1003","text":"1004"},"Update the dependencies array to be: [props, props.list.records]",{"range":"1005","text":"1006"},{"range":"1007","text":"1000"},{"range":"1008","text":"1002"},{"range":"1009","text":"1004"},{"range":"1010","text":"1006"},{"range":"1011","text":"1000"},{"range":"1012","text":"1002"},"Update the dependencies array to be: [props, props.addCcateStatus, props.delCcateStatus, props.editCcateStatus]",{"range":"1013","text":"1014"},{"range":"1015","text":"1000"},{"range":"1016","text":"1002"},"Update the dependencies array to be: [props, props.addCStatus, props.delCStatus, props.editCStatus]",{"range":"1017","text":"1018"},{"range":"1019","text":"1004"},{"range":"1020","text":"1006"},{"range":"1021","text":"1000"},{"range":"1022","text":"1004"},{"range":"1023","text":"1006"},{"range":"1024","text":"1002"},{"range":"1025","text":"1002"},"Update the dependencies array to be: [ref]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [props.topBarEditState, props.tberr, props]",{"range":"1028","text":"1029"},{"range":"1030","text":"1002"},{"range":"1031","text":"1000"},{"range":"1032","text":"1002"},"Update the dependencies array to be: [props, props.addStatus, props.delStatus, props.editStatus]",{"range":"1033","text":"1034"},{"range":"1035","text":"1004"},{"range":"1036","text":"1006"},"Update the dependencies array to be: [props.shopcar]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [history, props, props.shopcar.length]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [dishes, orders]",{"range":"1041","text":"1042"},{"range":"1043","text":"1002"},[1630,1644],"[history, props, props.status]",[4631,4683],"[props.list.total, props.list.page, props.list.size, props, pageMsg]",[4840,4852],"[props]",[6882,6891],"[pageMsg, props]",[7026,7046],"[props, props.list.records]",[4712,4764],[4917,4929],[9587,9596],[9727,9747],[2525,2577],[3451,3463],[4363,4430],"[props, props.addCcateStatus, props.delCcateStatus, props.editCcateStatus]",[5687,5739],[5913,5925],[6942,6997],"[props, props.addCStatus, props.delCStatus, props.editCStatus]",[7833,7842],[7996,8016],[4083,4135],[4238,4247],[4380,4400],[2653,2655],[2872,2886],[1058,1060],"[ref]",[4004,4040],"[props.topBarEditState, props.tberr, props]",[2739,2741],[6466,6518],[6673,6685],[7722,7774],"[props, props.addStatus, props.delStatus, props.editStatus]",[8622,8631],[8762,8782],[1217,1219],"[props.shopcar]",[1223,1245],"[history, props, props.shopcar.length]",[1651,1659],"[dishes, orders]",[4813,4815]]